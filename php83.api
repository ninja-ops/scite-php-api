COUNT_NORMAL
COUNT_RECURSIVE
EXTR_OVERWRITE
EXTR_SKIP
EXTR_PREFIX_SAME
EXTR_PREFIX_ALL
EXTR_PREFIX_INVALID
EXTR_PREFIX_IF_EXISTS
EXTR_IF_EXISTS
EXTR_REFS
CAL_EASTER_DEFAULT
CAL_EASTER_ROMAN
CAL_EASTER_ALWAYS_GREGORIAN
CAL_EASTER_ALWAYS_JULIAN
CAL_GREGORIAN
CAL_JULIAN
CAL_JEWISH
CAL_FRENCH
CAL_NUM_CALS
CAL_JEWISH_ADD_ALAFIM_GERESH
CAL_JEWISH_ADD_ALAFIM
CAL_JEWISH_ADD_GERESHAYIM
CAL_DOW_DAYNO
CAL_DOW_SHORT
CAL_DOW_LONG
CAL_MONTH_GREGORIAN_SHORT
CAL_MONTH_GREGORIAN_LONG
CAL_MONTH_JULIAN_SHORT
CAL_MONTH_JULIAN_LONG
CAL_MONTH_JEWISH
CAL_MONTH_FRENCH
CURLOPT_AUTOREFERER
CURLOPT_COOKIESESSION
CURLOPT_DOH_URL
CURLOPT_DOH_SSL_VERIFYHOST
CURLOPT_DOH_SSL_VERIFYPEER
CURLOPT_DOH_SSL_VERIFYSTATUS
CURLOPT_DNS_USE_GLOBAL_CACHE
CURLOPT_DNS_CACHE_TIMEOUT
CURLOPT_FTP_SSL
CURLFTP_CREATE_DIR
CURLFTP_CREATE_DIR_NONE
CURLFTP_CREATE_DIR_RETRY
CURLFTPSSL_TRY
CURLFTPSSL_ALL
CURLFTPSSL_CONTROL
CURLFTPSSL_NONE
CURLFTPMETHOD_DEFAULT
CURLOPT_PRIVATE
CURLOPT_FTPSSLAUTH
CURLOPT_PORT
CURLOPT_FILE
CURLOPT_INFILE
CURLOPT_INFILESIZE
CURLOPT_ISSUERCERT_BLOB
CURLOPT_URL
CURLOPT_PROXY
CURLOPT_PROXY_ISSUERCERT
CURLOPT_PROXY_ISSUERCERT_BLOB
CURLOPT_PROXY_SSLCERT_BLOB
CURLOPT_PROXY_SSLKEY_BLOB
CURLOPT_VERBOSE
CURLOPT_ALTSVC
CURLOPT_ALTSVC_CTRL
CURLALTSVC_H1
CURLALTSVC_H2
CURLALTSVC_H3
CURLALTSVC_READONLYFILE
CURLOPT_HEADER
CURLOPT_HTTPHEADER
CURLOPT_NOPROGRESS
CURLOPT_NOBODY
CURLOPT_FAILONERROR
CURLOPT_UPLOAD
CURLOPT_UPLOAD_BUFFERSIZE
CURLOPT_POST
CURLOPT_FTPLISTONLY
CURLOPT_FTPAPPEND
CURLOPT_FTP_CREATE_MISSING_DIRS
CURLOPT_NETRC
CURLOPT_FOLLOWLOCATION
CURLOPT_FTPASCII
CURLOPT_PUT
CURLOPT_MIME_OPTIONS
CURLOPT_MUTE
CURLOPT_USERPWD
CURLOPT_PROXYUSERPWD
CURLOPT_RANGE
CURLOPT_TIMEOUT
CURLOPT_TIMEOUT_MS
CURLOPT_TCP_NODELAY
CURLOPT_POSTFIELDS
CURLOPT_PROGRESSFUNCTION
CURLOPT_REFERER
CURLOPT_USERAGENT
CURLOPT_FTPPORT
CURLOPT_FTP_USE_EPSV
CURLOPT_LOW_SPEED_LIMIT
CURLOPT_LOW_SPEED_TIME
CURLOPT_RESUME_FROM
CURLOPT_COOKIE
CURLOPT_COOKIELIST
CURLOPT_SSLCERT
CURLOPT_SSLCERT_BLOB
CURLOPT_SSLCERTPASSWD
CURLOPT_SSLKEY_BLOB
CURLOPT_WRITEHEADER
CURLOPT_WS_OPTIONS
CURLOPT_SSL_VERIFYHOST
CURLOPT_COOKIEFILE
CURLOPT_SSLVERSION
CURL_SSLVERSION_DEFAULT
CURL_SSLVERSION_TLSv1
CURL_SSLVERSION_SSLv2
CURL_SSLVERSION_SSLv3
CURL_SSLVERSION_TLSv1_0
CURL_SSLVERSION_TLSv1_1
CURL_SSLVERSION_TLSv1_2
CURL_SSLVERSION_TLSv1_3
CURLOPT_TIMECONDITION
CURLOPT_TIMEVALUE
CURLOPT_CUSTOMREQUEST
CURLOPT_STDERR
CURLOPT_TRANSFERTEXT
CURLOPT_RETURNTRANSFER
CURLOPT_QUICK_EXIT
CURLOPT_QUOTE
CURLOPT_POSTQUOTE
CURLOPT_INTERFACE
CURLOPT_KRB4LEVEL
CURLOPT_HTTPPROXYTUNNEL
CURLOPT_FILETIME
CURLOPT_WRITEFUNCTION
CURLOPT_READFUNCTION
CURLOPT_PASSWDFUNCTION
CURLOPT_HEADERFUNCTION
CURLOPT_MAXAGE_CONN
CURLOPT_MAXFILESIZE_LARGE
CURLOPT_MAXLIFETIME_CONN
CURLOPT_MAXREDIRS
CURLOPT_MAXCONNECTS
CURLOPT_FRESH_CONNECT
CURLOPT_FORBID_REUSE
CURLOPT_RANDOM_FILE
CURLOPT_EGDSOCKET
CURLOPT_CONNECTTIMEOUT
CURLOPT_CONNECTTIMEOUT_MS
CURLOPT_SSL_VERIFYPEER
CURLOPT_CA_CACHE_TIMEOUT
CURLOPT_CAINFO
CURLOPT_CAINFO_BLOB
CURLOPT_CAPATH
CURLOPT_COOKIEJAR
CURLOPT_SSL_CIPHER_LIST
CURLOPT_SSL_EC_CURVES
CURLOPT_BINARYTRANSFER
CURLOPT_NOSIGNAL
CURLOPT_PROXYTYPE
CURLOPT_BUFFERSIZE
CURLOPT_HTTPGET
CURLOPT_HTTP_VERSION
CURLOPT_HSTS
CURLOPT_HSTS_CTRL
CURLHSTS_ENABLE
CURLHSTS_READONLYFILE
CURLOPT_SSLKEY
CURLOPT_SSLKEYTYPE
CURLOPT_SSLKEYPASSWD
CURLOPT_SSLENGINE
CURLOPT_SSLENGINE_DEFAULT
CURLOPT_SSLCERTTYPE
CURLOPT_CRLF
CURLOPT_ENCODING
CURLOPT_PROXYPORT
CURLOPT_UNRESTRICTED_AUTH
CURLOPT_FTP_USE_EPRT
CURLOPT_HTTP200ALIASES
CURLOPT_HTTPAUTH
CURLOPT_AWS_SIGV4
CURLAUTH_BASIC
CURLAUTH_DIGEST
CURLAUTH_GSSNEGOTIATE
CURLAUTH_NEGOTIATE
CURLAUTH_NTLM
CURLAUTH_NTLM_WB
CURLAUTH_ANY
CURLAUTH_ANYSAFE
CURLAUTH_AWS_SIGV4
CURLOPT_PROXYAUTH
CURLOPT_MAIL_RCPT_ALLLOWFAILS
CURLOPT_UPKEEP_INTERVAL_MS
CURLOPT_MAX_RECV_SPEED_LARGE
CURLOPT_MAX_SEND_SPEED_LARGE
CURLOPT_HEADEROPT
CURLOPT_PROXYHEADER
CURLINFO_PRIVATE
CURLINFO_EFFECTIVE_URL
CURLINFO_HTTP_CODE
CURLINFO_PROXY_ERROR
CURLPX_BAD_ADDRESS_TYPE
CURLPX_BAD_VERSION
CURLPX_CLOSED
CURLPX_GSSAPI
CURLPX_GSSAPI_PERMSG
CURLPX_GSSAPI_PROTECTION
CURLPX_IDENTD_DIFFER
CURLPX_IDENTD
CURLPX_LONG_HOSTNAME
CURLPX_LONG_PASSWD
CURLPX_LONG_USER
CURLPX_NO_AUTH
CURLPX_OK
CURLPX_RECV_ADDRESS
CURLPX_RECV_AUTH
CURLPX_RECV_CONNECT
CURLPX_RECV_REQACK
CURLPX_REPLY_ADDRESS_TYPE_NOT_SUPPORTED
CURLPX_REPLY_COMMAND_NOT_SUPPORTED
CURLPX_REPLY_CONNECTION_REFUSED
CURLPX_REPLY_GENERAL_SERVER_FAILURE
CURLPX_REPLY_HOST_UNREACHABLE
CURLPX_REPLY_NETWORK_UNREACHABLE
CURLPX_REPLY_NOT_ALLOWED
CURLPX_REPLY_TTL_EXPIRED
CURLPX_REPLY_UNASSIGNED
CURLPX_REQUEST_FAILED
CURLPX_RESOLVE_HOST
CURLPX_SEND_AUTH
CURLPX_SEND_CONNECT
CURLPX_SEND_REQUEST
CURLPX_UNKNOWN_FAIL
CURLPX_UNKNOWN_MODE
CURLPX_USER_REJECTED
CURLINFO_REFERER
CURLINFO_RESPONSE_CODE
CURLINFO_RETRY_AFTER
CURLINFO_HEADER_OUT
CURLINFO_HEADER_SIZE
CURLINFO_REQUEST_SIZE
CURLINFO_TOTAL_TIME
CURLINFO_NAMELOOKUP_TIME
CURLINFO_CAINFO
CURLINFO_CAPATH
CURLINFO_CONNECT_TIME
CURLINFO_PRETRANSFER_TIME
CURLINFO_SIZE_UPLOAD
CURLINFO_SIZE_DOWNLOAD
CURLINFO_SPEED_DOWNLOAD
CURLINFO_SPEED_UPLOAD
CURLINFO_FILETIME
CURLINFO_SSL_VERIFYRESULT
CURLINFO_CONTENT_LENGTH_DOWNLOAD
CURLINFO_CONTENT_LENGTH_UPLOAD
CURLINFO_STARTTRANSFER_TIME
CURLINFO_CONTENT_TYPE
CURLINFO_REDIRECT_TIME
CURLINFO_REDIRECT_COUNT
CURLINFO_REDIRECT_URL
CURLINFO_PRIMARY_IP
CURLINFO_PRIMARY_PORT
CURLINFO_LOCAL_IP
CURLINFO_LOCAL_PORT
CURL_PUSH_OK
CURL_PUSH_DENY
CURL_REDIR_POST_301
CURL_REDIR_POST_302
CURL_REDIR_POST_303
CURL_REDIR_POST_ALL
CURL_TIMECOND_NONE
CURL_TIMECOND_IFMODSINCE
CURL_TIMECOND_IFUNMODSINCE
CURL_TIMECOND_LASTMOD
CURL_VERSION_ALTSVC
CURL_VERSION_ASYNCHDNS
CURL_VERSION_BROTLI
CURL_VERSION_CONV
CURL_VERSION_CURLDEBUG
CURL_VERSION_DEBUG
CURL_VERSION_GSASL
CURL_VERSION_GSSAPI
CURL_VERSION_GSSNEGOTIATE
CURL_VERSION_HSTS
CURL_VERSION_IDN
CURL_VERSION_MULTI_SSL
CURL_VERSION_NTLM
CURL_VERSION_NTLM_WB
CURL_VERSION_IPV6
CURL_VERSION_KERBEROS4
CURL_VERSION_KERBEROS5
CURL_VERSION_HTTP2
CURL_VERSION_HTTP3
CURL_VERSION_LARGEFILE
CURL_VERSION_PSL
CURL_VERSION_SPNEGO
CURL_VERSION_SSPI
CURL_VERSION_SSL
CURL_VERSION_TLSAUTH_SRP
CURL_VERSION_UNICODE
CURL_VERSION_UNIX_SOCKETS
CURL_VERSION_ZSTD
CURL_VERSION_LIBZ
CURLVERSION_NOW
CURLE_OK
CURLE_UNSUPPORTED_PROTOCOL
CURLE_FAILED_INIT
CURLE_URL_MALFORMAT
CURLE_URL_MALFORMAT_USER
CURLE_COULDNT_RESOLVE_PROXY
CURLE_COULDNT_RESOLVE_HOST
CURLE_COULDNT_CONNECT
CURLE_FTP_WEIRD_SERVER_REPLY
CURLE_FTP_ACCESS_DENIED
CURLE_FTP_USER_PASSWORD_INCORRECT
CURLE_FTP_WEIRD_PASS_REPLY
CURLE_FTP_WEIRD_USER_REPLY
CURLE_FTP_WEIRD_PASV_REPLY
CURLE_FTP_WEIRD_227_FORMAT
CURLE_FTP_CANT_GET_HOST
CURLE_FTP_CANT_RECONNECT
CURLE_FTP_COULDNT_SET_BINARY
CURLE_PARTIAL_FILE
CURLE_PROXY
CURLE_FTP_COULDNT_RETR_FILE
CURLE_FTP_WRITE_ERROR
CURLE_FTP_QUOTE_ERROR
CURLE_HTTP_NOT_FOUND
CURLE_WRITE_ERROR
CURLE_MALFORMAT_USER
CURLE_FTP_COULDNT_STOR_FILE
CURLE_READ_ERROR
CURLE_OUT_OF_MEMORY
CURLE_OPERATION_TIMEOUTED
CURLE_FTP_COULDNT_SET_ASCII
CURLE_FTP_PORT_FAILED
CURLE_FTP_COULDNT_USE_REST
CURLE_FTP_COULDNT_GET_SIZE
CURLE_HTTP_RANGE_ERROR
CURLE_HTTP_POST_ERROR
CURLE_SSL_CONNECT_ERROR
CURLE_FTP_BAD_DOWNLOAD_RESUME
CURLE_FILE_COULDNT_READ_FILE
CURLE_LDAP_CANNOT_BIND
CURLE_LDAP_SEARCH_FAILED
CURLE_LIBRARY_NOT_FOUND
CURLE_FUNCTION_NOT_FOUND
CURLE_ABORTED_BY_CALLBACK
CURLE_BAD_FUNCTION_ARGUMENT
CURLE_BAD_CALLING_ORDER
CURLE_HTTP_PORT_FAILED
CURLE_BAD_PASSWORD_ENTERED
CURLE_TOO_MANY_REDIRECTS
CURLE_UNKNOWN_TELNET_OPTION
CURLE_TELNET_OPTION_SYNTAX
CURLE_OBSOLETE
CURLE_SSL_PEER_CERTIFICATE
CURLE_GOT_NOTHING
CURLE_SSL_ENGINE_NOTFOUND
CURLE_SSL_ENGINE_SETFAILED
CURLE_SEND_ERROR
CURLE_RECV_ERROR
CURLE_SHARE_IN_USE
CURLE_SSL_CERTPROBLEM
CURLE_SSL_CIPHER
CURLE_SSL_CACERT
CURLE_BAD_CONTENT_ENCODING
CURLE_LDAP_INVALID_URL
CURLE_FILESIZE_EXCEEDED
CURLE_FTP_SSL_FAILED
CURLE_SSH
CURLFTPAUTH_DEFAULT
CURLFTPAUTH_SSL
CURLFTPAUTH_TLS
CURLPROXY_HTTP
CURLPROXY_HTTP_1_0
CURLPROXY_SOCKS4
CURLPROXY_SOCKS5
CURL_NETRC_OPTIONAL
CURL_NETRC_IGNORED
CURL_NETRC_REQUIRED
CURL_HTTP_VERSION_NONE
CURL_HTTP_VERSION_1_0
CURL_HTTP_VERSION_1_1
CURL_HTTP_VERSION_2
CURL_HTTP_VERSION_2_0
CURL_HTTP_VERSION_2TLS
CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE
CURLM_CALL_MULTI_PERFORM
CURLM_OK
CURLM_BAD_HANDLE
CURLM_BAD_EASY_HANDLE
CURLM_OUT_OF_MEMORY
CURLM_INTERNAL_ERROR
CURLMSG_DONE
CURLOPT_KEYPASSWD
CURLOPT_SSH_AUTH_TYPES
CURLOPT_SSH_HOST_PUBLIC_KEY_MD5
CURLOPT_SSH_HOST_PUBLIC_KEY_SHA256
CURLOPT_SSH_HOSTKEYFUNCTION
CURLOPT_SSH_PRIVATE_KEYFILE
CURLOPT_SSH_PUBLIC_KEYFILE
CURLOPT_SSL_OPTIONS
CURLSSLOPT_ALLOW_BEAST
CURLSSLOPT_NO_REVOKE
CURLSSLOPT_AUTO_CLIENT_CERT
CURLSSLOPT_NATIVE_CA
CURLSSLOPT_NO_PARTIALCHAIN
CURLSSLOPT_REVOKE_BEST_EFFORT
CURLOPT_USERNAME
CURLOPT_SASL_AUTHZID
CURLOPT_SASL_IR
CURLOPT_DNS_INTERFACE
CURLOPT_DNS_LOCAL_IP4
CURLOPT_DNS_LOCAL_IP6
CURLOPT_XOAUTH2_BEARER
CURLOPT_LOGIN_OPTIONS
CURLOPT_EXPECT_100_TIMEOUT_MS
CURLOPT_SSL_ENABLE_ALPN
CURLOPT_SSL_ENABLE_NPN
CURLOPT_PINNEDPUBLICKEY
CURLOPT_UNIX_SOCKET_PATH
CURLOPT_SSL_VERIFYSTATUS
CURLOPT_PATH_AS_IS
CURLOPT_SSL_FALSESTART
CURLOPT_PIPEWAIT
CURLOPT_PROTOCOLS_STR
CURLOPT_PROXY_SERVICE_NAME
CURLOPT_SERVICE_NAME
CURLOPT_DEFAULT_PROTOCOL
CURLOPT_STREAM_WEIGHT
CURLOPT_TFTP_NO_OPTIONS
CURLOPT_CONNECT_TO
CURLOPT_TCP_FASTOPEN
CURLOPT_TCP_KEEPALIVE
CURLOPT_TCP_KEEPIDLE
CURLOPT_TCP_KEEPINTVL
CURLMOPT_PIPELINING
CURLMOPT_MAXCONNECTS
CURLMOPT_MAX_CONCURRENT_STREAMS
CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE
CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE
CURLMOPT_MAX_HOST_CONNECTIONS
CURLMOPT_MAX_PIPELINE_LENGTH
CURLMOPT_MAX_TOTAL_CONNECTIONS
CURLMOPT_PUSHFUNCTION
CURLSSH_AUTH_AGENT
CURLSSH_AUTH_ANY
CURLSSH_AUTH_DEFAULT
CURLSSH_AUTH_HOST
CURLSSH_AUTH_KEYBOARD
CURLSSH_AUTH_NONE
CURLSSH_AUTH_PASSWORD
CURLSSH_AUTH_PUBLICKEY
CURLPAUSE_ALL
CURLPAUSE_CONT
CURLPAUSE_RECV
CURLPAUSE_RECV_CONT
CURLPAUSE_SEND
CURLPAUSE_SEND_CONT
CURLPIPE_NOTHING
CURLPIPE_HTTP1
CURLPIPE_MULTIPLEX
CURLPROXY_SOCKS4A
CURLPROXY_SOCKS5_HOSTNAME
CURLHEADER_SEPARATE
CURLHEADER_UNIFIED
CURLPROTO_SMB
CURLPROTO_SMBS
CURLPROTO_MQTT
CURLOPT_REDIR_PROTOCOLS_STR
CURLOPT_REQUEST_TARGET
CURLAUTH_GSSAPI
CURLE_WEIRD_SERVER_REPLY
CURLINFO_CONTENT_LENGTH_DOWNLOAD_T
CURLINFO_CONTENT_LENGTH_UPLOAD_T
CURLINFO_HTTP_VERSION
CURLINFO_PROTOCOL
CURLINFO_PROXY_SSL_VERIFYRESULT
CURLINFO_SCHEME
CURLINFO_SIZE_DOWNLOAD_T
CURLINFO_SIZE_UPLOAD_T
CURLINFO_SPEED_DOWNLOAD_T
CURLINFO_SPEED_UPLOAD_T
CURL_MAX_READ_SIZE
CURLOPT_ABSTRACT_UNIX_SOCKET
CURLOPT_KEEP_SENDING_ON_ERROR
CURLOPT_PRE_PROXY
CURLOPT_PROXY_CAINFO
CURLOPT_PROXY_CAINFO_BLOB
CURLOPT_PROXY_CAPATH
CURLOPT_PROXY_CRLFILE
CURLOPT_PROXY_KEYPASSWD
CURLOPT_PROXY_PINNEDPUBLICKEY
CURLOPT_PROXY_SSLCERT
CURLOPT_PROXY_SSLCERTTYPE
CURLOPT_PROXY_SSL_CIPHER_LIST
CURLOPT_PROXY_SSLKEY
CURLOPT_PROXY_SSLKEYTYPE
CURLOPT_PROXY_SSL_OPTIONS
CURLOPT_PROXY_SSL_VERIFYHOST
CURLOPT_PROXY_SSL_VERIFYPEER
CURLOPT_PROXY_SSLVERSION
CURLOPT_PROXY_TLSAUTH_PASSWORD
CURLOPT_PROXY_TLSAUTH_TYPE
CURLOPT_PROXY_TLSAUTH_USERNAME
CURLOPT_SOCKS5_AUTH
CURLOPT_SUPPRESS_CONNECT_HEADERS
CURLPROXY_HTTPS
CURL_SSLVERSION_MAX_DEFAULT
CURL_SSLVERSION_MAX_NONE
CURL_SSLVERSION_MAX_TLSv1_0
CURL_SSLVERSION_MAX_TLSv1_1
CURL_SSLVERSION_MAX_TLSv1_2
CURL_SSLVERSION_MAX_TLSv1_3
CURL_VERSION_HTTPS_PROXY
CURLAUTH_BEARER
CURLINFO_APPCONNECT_TIME_T
CURLINFO_CONNECT_TIME_T
CURLINFO_FILETIME_T
CURLINFO_NAMELOOKUP_TIME_T
CURLINFO_PRETRANSFER_TIME_T
CURLINFO_REDIRECT_TIME_T
CURLINFO_STARTTRANSFER_TIME_T
CURLINFO_TOTAL_TIME_T
CURL_LOCK_DATA_CONNECT
CURL_LOCK_DATA_PSL
CURLOPT_DISALLOW_USERNAME_IN_URL
CURLOPT_DNS_SHUFFLE_ADDRESSES
CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS
CURLOPT_HAPROXYPROTOCOL
CURLOPT_PROXY_TLS13_CIPHERS
CURLOPT_SSH_COMPRESSION
CURLOPT_TIMEVALUE_LARGE
CURLOPT_TLS13_CIPHERS
CURLSSH_AUTH_GSSAPI
CURLOPT_HTTP09_ALLOWED
CURLMIMEOPT_FORMESCAPE
CURLWS_RAW_MODE
CURLKHMATCH_OK
CURLKHMATCH_MISMATCH
CURLKHMATCH_MISSING
CURLKHMATCH_LAST
SUNFUNCS_RET_TIMESTAMP
SUNFUNCS_RET_STRING
SUNFUNCS_RET_DOUBLE
DBA_LMDB_USE_SUB_DIR
DBA_LMDB_NO_SUB_DIR
DBASE_VERSION
DBASE_RDONLY
DBASE_RDWR
DBASE_TYPE_DBASE
DBASE_TYPE_FOXPRO
F_DUPFD
F_GETFD
F_GETFL
F_GETLK
F_GETOWN
F_RDLCK
F_SETFL
F_SETLK
F_SETLKW
F_SETOWN
F_UNLCK
F_WRLCK
O_APPEND
O_ASYNC
O_CREAT
O_EXCL
O_NDELAY
O_NOCTTY
O_NONBLOCK
O_RDONLY
O_RDWR
O_SYNC
O_TRUNC
O_WRONLY
S_IRGRP
S_IROTH
S_IRUSR
S_IRWXG
S_IRWXO
S_IRWXU
S_IWGRP
S_IWOTH
S_IWUSR
S_IXGRP
S_IXOTH
S_IXUSR
DIRECTORY_SEPARATOR
PATH_SEPARATOR
SCANDIR_SORT_ASCENDING
SCANDIR_SORT_DESCENDING
SCANDIR_SORT_NONE
EXP_GLOB
EXP_EXACT
EXP_REGEXP
EXP_EOF
EXP_TIMEOUT
EXP_FULLBUFFER
FDFValue
FDFStatus
FDFFile
FDFID
FDFFf
FDFSetFf
FDFClearFf
FDFFlags
FDFSetF
FDFClrF
FDFAP
FDFAS
FDFAction
FDFAA
FDFAPRef
FDFIF
FDFEnter
FDFExit
FDFDown
FDFUp
FDFFormat
FDFValidate
FDFKeystroke
FDFCalculate
FDFNormalAP
FDFRolloverAP
FDFDownAP
FILEINFO_NONE
FILEINFO_SYMLINK
FILEINFO_MIME_TYPE
FILEINFO_MIME_ENCODING
FILEINFO_MIME
FILEINFO_COMPRESS
FILEINFO_DEVICES
FILEINFO_CONTINUE
FILEINFO_PRESERVE_ATIME
FILEINFO_RAW
FILEINFO_EXTENSION
SEEK_SET
SEEK_CUR
SEEK_END
LOCK_SH
LOCK_EX
LOCK_UN
LOCK_NB
INPUT_POST
INPUT_GET
INPUT_COOKIE
INPUT_ENV
INPUT_SERVER
INPUT_SESSION
INPUT_REQUEST
FILTER_FLAG_NONE
FILTER_REQUIRE_SCALAR
FILTER_REQUIRE_ARRAY
FILTER_FORCE_ARRAY
FILTER_NULL_ON_FAILURE
FILTER_VALIDATE_INT
FILTER_VALIDATE_BOOL
FILTER_VALIDATE_BOOLEAN
FILTER_VALIDATE_FLOAT
FILTER_VALIDATE_REGEXP
FILTER_VALIDATE_URL
FILTER_VALIDATE_DOMAIN
FILTER_VALIDATE_EMAIL
FILTER_VALIDATE_IP
FILTER_VALIDATE_MAC
FILTER_DEFAULT
FILTER_UNSAFE_RAW
FILTER_SANITIZE_STRING
FILTER_SANITIZE_STRIPPED
FILTER_SANITIZE_ENCODED
FILTER_SANITIZE_SPECIAL_CHARS
FILTER_SANITIZE_EMAIL
FILTER_SANITIZE_URL
FILTER_SANITIZE_NUMBER_INT
FILTER_SANITIZE_NUMBER_FLOAT
FILTER_SANITIZE_MAGIC_QUOTES
FILTER_SANITIZE_ADD_SLASHES
FILTER_CALLBACK
FILTER_FLAG_ALLOW_OCTAL
FILTER_FLAG_ALLOW_HEX
FILTER_FLAG_STRIP_LOW
FILTER_FLAG_STRIP_HIGH
FILTER_FLAG_STRIP_BACKTICK
FILTER_FLAG_ENCODE_LOW
FILTER_FLAG_ENCODE_HIGH
FILTER_FLAG_ENCODE_AMP
FILTER_FLAG_NO_ENCODE_QUOTES
FILTER_FLAG_EMPTY_STRING_NULL
FILTER_FLAG_ALLOW_FRACTION
FILTER_FLAG_ALLOW_THOUSAND
FILTER_FLAG_ALLOW_SCIENTIFIC
FILTER_FLAG_PATH_REQUIRED
FILTER_FLAG_QUERY_REQUIRED
FILTER_FLAG_SCHEME_REQUIRED
FILTER_FLAG_HOST_REQUIRED
FILTER_FLAG_HOSTNAME
FILTER_FLAG_IPV4
FILTER_FLAG_IPV6
FILTER_FLAG_NO_RES_RANGE
FILTER_FLAG_NO_PRIV_RANGE
FILTER_FLAG_EMAIL_UNICODE
FTP_ASCII
FTP_AUTOSEEK
FTP_AUTORESUME
FTP_FAILED
FTP_FINISHED
FTP_MOREDATA
FTP_TEXT
FTP_BINARY
FTP_IMAGE
FTP_TIMEOUT_SEC
FTP_USEPASVADDRESS
GEOIP_COUNTRY_EDITION
GEOIP_REGION_EDITION_REV0
GEOIP_CITY_EDITION_REV0
GEOIP_ORG_EDITION
GEOIP_ISP_EDITION
GEOIP_CITY_EDITION_REV1
GEOIP_REGION_EDITION_REV1
GEOIP_PROXY_EDITION
GEOIP_ASNUM_EDITION
GEOIP_NETSPEED_EDITION
GEOIP_DOMAIN_EDITION
Gmagick::COLOR_BLACK
Gmagick::COLOR_BLUE
Gmagick::COLOR_CYAN
Gmagick::COLOR_GREEN
Gmagick::COLOR_RED
Gmagick::COLOR_YELLOW
Gmagick::COLOR_MAGENTA
Gmagick::COLOR_OPACITY
Gmagick::COLOR_ALPHA
Gmagick::COLOR_FUZZ
GMP_ROUND_ZERO
GMP_ROUND_PLUSINF
GMP_ROUND_MINUSINF
GMP_MSW_FIRST
GMP_LSW_FIRST
GMP_LITTLE_ENDIAN
GMP_BIG_ENDIAN
GMP_NATIVE_ENDIAN
GMP_VERSION
GNUPG_SIG_MODE_NORMAL
GNUPG_SIG_MODE_DETACH
GNUPG_SIG_MODE_CLEAR
GNUPG_VALIDITY_UNKNOWN
GNUPG_VALIDITY_UNDEFINED
GNUPG_VALIDITY_NEVER
GNUPG_VALIDITY_MARGINAL
GNUPG_VALIDITY_FULL
GNUPG_VALIDITY_ULTIMATE
GNUPG_PROTOCOL_OpenPGP
GNUPG_PROTOCOL_CMS
GNUPG_SIGSUM_VALID
GNUPG_SIGSUM_GREEN
GNUPG_SIGSUM_RED
GNUPG_SIGSUM_KEY_REVOKED
GNUPG_SIGSUM_KEY_EXPIRED
GNUPG_SIGSUM_KEY_MISSING
GNUPG_SIGSUM_SIG_EXPIRED
GNUPG_SIGSUM_CRL_MISSING
GNUPG_SIGSUM_CRL_TOO_OLD
GNUPG_SIGSUM_BAD_POLICY
GNUPG_SIGSUM_SYS_ERROR
GNUPG_ERROR_WARNING
GNUPG_ERROR_EXCEPTION
GNUPG_ERROR_SILENT
HASH_HMAC
DB2_BINARY
DB2_CONVERT
DB2_PASSTHRU
DB2_SCROLLABLE
DB2_FORWARD_ONLY
DB2_PARAM_IN
DB2_PARAM_OUT
DB2_PARAM_INOUT
DB2_PARAM_FILE
DB2_AUTOCOMMIT_ON
DB2_AUTOCOMMIT_OFF
DB2_DOUBLE
DB2_LONG
DB2_CHAR
DB2_CASE_NATURAL
DB2_CASE_LOWER
DB2_CASE_UPPER
DB2_DEFERRED_PREPARE_ON
DB2_DEFERRED_PREPARE_OFF
GD_VERSION
GD_MAJOR_VERSION
GD_MINOR_VERSION
GD_RELEASE_VERSION
GD_EXTRA_VERSION
GD_BUNDLED
IMG_AVIF
IMG_BMP
IMG_GIF
IMG_JPG
IMG_JPEG
IMG_PNG
IMG_WBMP
IMG_XPM
IMG_WEBP
IMG_WEBP_LOSSLESS
IMG_COLOR_TILED
IMG_COLOR_STYLED
IMG_COLOR_BRUSHED
IMG_COLOR_STYLEDBRUSHED
IMG_COLOR_TRANSPARENT
IMG_AFFINE_TRANSLATE
IMG_AFFINE_SCALE
IMG_AFFINE_ROTATE
IMG_AFFINE_SHEAR_HORIZONTAL
IMG_AFFINE_SHEAR_VERTICAL
IMG_ARC_ROUNDED
IMG_ARC_PIE
IMG_ARC_CHORD
IMG_ARC_NOFILL
IMG_ARC_EDGED
IMG_GD2_RAW
IMG_GD2_COMPRESSED
IMG_EFFECT_REPLACE
IMG_EFFECT_ALPHABLEND
IMG_EFFECT_NORMAL
IMG_EFFECT_OVERLAY
IMG_EFFECT_MULTIPLY
IMG_FILTER_NEGATE
IMG_FILTER_GRAYSCALE
IMG_FILTER_BRIGHTNESS
IMG_FILTER_CONTRAST
IMG_FILTER_COLORIZE
IMG_FILTER_EDGEDETECT
IMG_FILTER_GAUSSIAN_BLUR
IMG_FILTER_SELECTIVE_BLUR
IMG_FILTER_EMBOSS
IMG_FILTER_MEAN_REMOVAL
IMG_FILTER_SMOOTH
IMG_FILTER_PIXELATE
IMG_FILTER_SCATTER
IMAGETYPE_GIF
IMAGETYPE_JPEG
IMAGETYPE_JPEG2000
IMAGETYPE_PNG
IMAGETYPE_SWF
IMAGETYPE_PSD
IMAGETYPE_BMP
IMAGETYPE_WBMP
IMAGETYPE_XBM
IMAGETYPE_TIFF_II
IMAGETYPE_TIFF_MM
IMAGETYPE_IFF
IMAGETYPE_JB2
IMAGETYPE_JPC
IMAGETYPE_JP2
IMAGETYPE_JPX
IMAGETYPE_SWC
IMAGETYPE_ICO
IMAGETYPE_WEBP
IMAGETYPE_AVIF
PNG_NO_FILTER
PNG_FILTER_NONE
PNG_FILTER_SUB
PNG_FILTER_UP
PNG_FILTER_AVG
PNG_FILTER_PAETH
PNG_ALL_FILTERS
IMG_FLIP_VERTICAL
IMG_FLIP_HORIZONTAL
IMG_FLIP_BOTH
IMG_BELL
IMG_BESSEL
IMG_BILINEAR_FIXED
IMG_BICUBIC
IMG_BICUBIC_FIXED
IMG_BLACKMAN
IMG_BOX
IMG_BSPLINE
IMG_CATMULLROM
IMG_GAUSSIAN
IMG_GENERALIZED_CUBIC
IMG_HERMITE
IMG_HAMMING
IMG_HANNING
IMG_MITCHELL
IMG_POWER
IMG_QUADRATIC
IMG_SINC
IMG_NEAREST_NEIGHBOUR
IMG_WEIGHTED4
IMG_TRIANGLE
imagick::COLOR_BLACK
imagick::COLOR_BLUE
imagick::COLOR_CYAN
imagick::COLOR_GREEN
imagick::COLOR_RED
imagick::COLOR_YELLOW
imagick::COLOR_MAGENTA
imagick::COLOR_OPACITY
imagick::COLOR_ALPHA
imagick::COLOR_FUZZ
NIL
OP_DEBUG
OP_READONLY
OP_ANONYMOUS
OP_SHORTCACHE
OP_SILENT
OP_PROTOTYPE
OP_HALFOPEN
OP_EXPUNGE
OP_SECURE
CL_EXPUNGE
FT_UID
FT_PEEK
FT_NOT
FT_INTERNAL
FT_PREFETCHTEXT
ST_UID
ST_SILENT
ST_SET
CP_UID
CP_MOVE
SE_UID
SE_FREE
SE_NOPREFETCH
SO_FREE
SO_NOSERVER
SA_MESSAGES
SA_RECENT
SA_UNSEEN
SA_UIDNEXT
SA_UIDVALIDITY
SA_ALL
LATT_NOINFERIORS
LATT_NOSELECT
LATT_MARKED
LATT_UNMARKED
LATT_REFERRAL
LATT_HASCHILDREN
LATT_HASNOCHILDREN
SORTDATE
SORTARRIVAL
SORTFROM
SORTSUBJECT
SORTTO
SORTCC
SORTSIZE
TYPETEXT
TYPEMULTIPART
TYPEMESSAGE
TYPEAPPLICATION
TYPEAUDIO
TYPEIMAGE
TYPEVIDEO
TYPEMODEL
TYPEOTHER
ENC7BIT
ENC8BIT
ENCBINARY
ENCBASE64
ENCQUOTEDPRINTABLE
ENCOTHER
IMAP_OPENTIMEOUT
IMAP_READTIMEOUT
IMAP_WRITETIMEOUT
IMAP_CLOSETIMEOUT
IMAP_GC_ELT
IMAP_GC_ENV
IMAP_GC_TEXTS
IN_ACCESS
IN_MODIFY
IN_ATTRIB
IN_CLOSE_WRITE
IN_CLOSE_NOWRITE
IN_OPEN
IN_MOVED_TO
IN_MOVED_FROM
IN_CREATE
IN_DELETE
IN_DELETE_SELF
IN_MOVE_SELF
IN_CLOSE
IN_MOVE
IN_ALL_EVENTS
IN_UNMOUNT
IN_Q_OVERFLOW
IN_IGNORED
IN_ISDIR
IN_ONLYDIR
IN_DONT_FOLLOW
IN_MASK_ADD
IN_ONESHOT
JSON_ERROR_NONE
JSON_ERROR_DEPTH
JSON_ERROR_STATE_MISMATCH
JSON_ERROR_CTRL_CHAR
JSON_ERROR_SYNTAX
JSON_ERROR_UTF8
JSON_ERROR_RECURSION
JSON_ERROR_INF_OR_NAN
JSON_ERROR_UNSUPPORTED_TYPE
JSON_ERROR_INVALID_PROPERTY_NAME
JSON_ERROR_UTF16
LDAP_DEREF_NEVER
LDAP_DEREF_SEARCHING
LDAP_DEREF_FINDING
LDAP_DEREF_ALWAYS
LDAP_OPT_DEREF
LDAP_OPT_SIZELIMIT
LDAP_OPT_TIMELIMIT
LDAP_OPT_NETWORK_TIMEOUT
LDAP_OPT_PROTOCOL_VERSION
LDAP_OPT_ERROR_NUMBER
LDAP_OPT_REFERRALS
LDAP_OPT_RESTART
LDAP_OPT_HOST_NAME
LDAP_OPT_ERROR_STRING
LDAP_OPT_DIAGNOSTIC_MESSAGE
LDAP_OPT_MATCHED_DN
LDAP_OPT_SERVER_CONTROLS
LDAP_OPT_CLIENT_CONTROLS
LDAP_OPT_DEBUG_LEVEL
LDAP_OPT_X_KEEPALIVE_IDLE
LDAP_OPT_X_KEEPALIVE_PROBES
LDAP_OPT_X_KEEPALIVE_INTERVAL
LDAP_OPT_X_TLS_CACERTDIR
LDAP_OPT_X_TLS_CACERTFILE
LDAP_OPT_X_TLS_CERTFILE
LDAP_OPT_X_TLS_CIPHER_SUITE
LDAP_OPT_X_TLS_CRLCHECK
LDAP_OPT_X_TLS_CRLFILE
LDAP_OPT_X_TLS_DHFILE
LDAP_OPT_X_TLS_KEYFILE
LDAP_OPT_X_TLS_PROTOCOL_MIN
LDAP_OPT_X_TLS_RANDOM_FILE
LDAP_OPT_X_TLS_REQUIRE_CERT
GSLC_SSL_NO_AUTH
GSLC_SSL_ONEWAY_AUTH
GSLC_SSL_TWOWAY_AUTH
LDAP_EXOP_START_TLS
LDAP_EXOP_MODIFY_PASSWD
LDAP_EXOP_REFRESH
LDAP_EXOP_WHO_AM_I
LDAP_EXOP_TURN
LDAP_CONTROL_MANAGEDSAIT
LDAP_CONTROL_PROXY_AUTHZ
LDAP_CONTROL_SUBENTRIES
LDAP_CONTROL_VALUESRETURNFILTER
LDAP_CONTROL_ASSERT
LDAP_CONTROL_PRE_READ
LDAP_CONTROL_POST_READ
LDAP_CONTROL_SORTREQUEST
LDAP_CONTROL_SORTRESPONSE
LDAP_CONTROL_PAGEDRESULTS
LDAP_CONTROL_AUTHZID_REQUEST
LDAP_CONTROL_AUTHZID_RESPONSE
LDAP_CONTROL_SYNC
LDAP_CONTROL_SYNC_STATE
LDAP_CONTROL_SYNC_DONE
LDAP_CONTROL_DONTUSECOPY
LDAP_CONTROL_PASSWORDPOLICYREQUEST
LDAP_CONTROL_PASSWORDPOLICYRESPONSE
LDAP_CONTROL_X_INCREMENTAL_VALUES
LDAP_CONTROL_X_DOMAIN_SCOPE
LDAP_CONTROL_X_PERMISSIVE_MODIFY
LDAP_CONTROL_X_SEARCH_OPTIONS
LDAP_CONTROL_X_TREE_DELETE
LDAP_CONTROL_X_EXTENDED_DN
LDAP_CONTROL_VLVREQUEST
LDAP_CONTROL_VLVRESPONSE
LIBXML_BIGLINES
LIBXML_COMPACT
LIBXML_DTDATTR
LIBXML_DTDLOAD
LIBXML_DTDVALID
LIBXML_HTML_NOIMPLIED
LIBXML_HTML_NODEFDTD
LIBXML_NOBLANKS
LIBXML_NOCDATA
LIBXML_NOEMPTYTAG
LIBXML_NOENT
LIBXML_NOERROR
LIBXML_NONET
LIBXML_NOWARNING
LIBXML_NOXMLDECL
LIBXML_NSCLEAN
LIBXML_PARSEHUGE
LIBXML_PEDANTIC
LIBXML_XINCLUDE
LIBXML_ERR_ERROR
LIBXML_ERR_FATAL
LIBXML_ERR_NONE
LIBXML_ERR_WARNING
LIBXML_VERSION
LIBXML_DOTTED_VERSION
LIBXML_SCHEMA_CREATE
MAILPARSE_EXTRACT_OUTPUT
MAILPARSE_EXTRACT_STREAM
MAILPARSE_EXTRACT_RETURN
MB_OVERLOAD_MAIL
MB_OVERLOAD_STRING
MB_OVERLOAD_REGEX
MB_CASE_UPPER
MB_CASE_LOWER
MB_CASE_TITLE
MB_CASE_FOLD
MB_CASE_LOWER_SIMPLE
MB_CASE_UPPER_SIMPLE
MB_CASE_TITLE_SIMPLE
MB_CASE_FOLD_SIMPLE
MB_ONIGURUMA_VERSION
Memcached::OPT_COMPRESSION
Memcached::OPT_SERIALIZER
Memcached::SERIALIZER_PHP
Memcached::SERIALIZER_IGBINARY
Memcached::SERIALIZER_JSON
Memcached::OPT_PREFIX_KEY
Memcached::OPT_HASH
Memcached::HASH_DEFAULT
Memcached::HASH_MD5
Memcached::HASH_CRC
Memcached::HASH_FNV1_64
Memcached::HASH_FNV1A_64
Memcached::HASH_FNV1_32
Memcached::HASH_FNV1A_32
Memcached::HASH_HSIEH
Memcached::HASH_MURMUR
Memcached::OPT_DISTRIBUTION
Memcached::DISTRIBUTION_MODULA
Memcached::DISTRIBUTION_CONSISTENT
Memcached::OPT_LIBKETAMA_COMPATIBLE
Memcached::OPT_BUFFER_WRITES
Memcached::OPT_BINARY_PROTOCOL
Memcached::OPT_NO_BLOCK
Memcached::OPT_NOREPLY
Memcached::OPT_TCP_NODELAY
Memcached::OPT_SOCKET_SEND_SIZE
Memcached::OPT_SOCKET_RECV_SIZE
Memcached::OPT_CONNECT_TIMEOUT
Memcached::OPT_RETRY_TIMEOUT
Memcached::OPT_SEND_TIMEOUT
Memcached::OPT_RECV_TIMEOUT
Memcached::OPT_POLL_TIMEOUT
Memcached::OPT_CACHE_LOOKUPS
Memcached::OPT_SERVER_FAILURE_LIMIT
Memcached::HAVE_IGBINARY
Memcached::HAVE_JSON
Memcached::HAVE_MSGPACK
Memcached::HAVE_SESSION
Memcached::HAVE_SASL
Memcached::GET_EXTENDED
Memcached::GET_PRESERVE_ORDER
Memcached::RES_SUCCESS
Memcached::RES_FAILURE
Memcached::RES_HOST_LOOKUP_FAILURE
Memcached::RES_UNKNOWN_READ_FAILURE
Memcached::RES_PROTOCOL_ERROR
Memcached::RES_CLIENT_ERROR
Memcached::RES_SERVER_ERROR
Memcached::RES_WRITE_FAILURE
Memcached::RES_DATA_EXISTS
Memcached::RES_NOTSTORED
Memcached::RES_NOTFOUND
Memcached::RES_PARTIAL_READ
Memcached::RES_SOME_ERRORS
Memcached::RES_NO_SERVERS
Memcached::RES_END
Memcached::RES_ERRNO
Memcached::RES_BUFFERED
Memcached::RES_TIMEOUT
Memcached::RES_BAD_KEY_PROVIDED
Memcached::RES_CONNECTION_SOCKET_CREATE_FAILURE
Memcached::RES_PAYLOAD_FAILURE
Memcached::RES_AUTH_PROBLEM
Memcached::RES_AUTH_FAILURE
Memcached::RES_AUTH_CONTINUE
Memcached::RES_E2BIG
Memcached::RES_KEY_TOO_BIG
Memcached::RES_SERVER_TEMPORARILY_DISABLED
Memcached::RES_SERVER_MEMORY_ALLOCATION_FAILURE
CONNECTION_ABORTED
CONNECTION_NORMAL
CONNECTION_TIMEOUT
__COMPILER_HALT_OFFSET__
MYSQLI_READ_DEFAULT_GROUP
MYSQLI_READ_DEFAULT_FILE
MYSQLI_OPT_CONNECT_TIMEOUT
MYSQLI_OPT_READ_TIMEOUT
MYSQLI_OPT_LOCAL_INFILE
MYSQLI_OPT_INT_AND_FLOAT_NATIVE
MYSQLI_OPT_NET_CMD_BUFFER_SIZE
MYSQLI_OPT_NET_READ_BUFFER_SIZE
MYSQLI_OPT_SSL_VERIFY_SERVER_CERT
MYSQLI_INIT_COMMAND
MYSQLI_CLIENT_SSL
MYSQLI_CLIENT_COMPRESS
MYSQLI_CLIENT_INTERACTIVE
MYSQLI_CLIENT_IGNORE_SPACE
MYSQLI_CLIENT_NO_SCHEMA
MYSQLI_CLIENT_MULTI_QUERIES
MYSQLI_STORE_RESULT
MYSQLI_USE_RESULT
MYSQLI_ASSOC
MYSQLI_NUM
MYSQLI_BOTH
MYSQLI_NOT_NULL_FLAG
MYSQLI_PRI_KEY_FLAG
MYSQLI_UNIQUE_KEY_FLAG
MYSQLI_MULTIPLE_KEY_FLAG
MYSQLI_BLOB_FLAG
MYSQLI_UNSIGNED_FLAG
MYSQLI_ZEROFILL_FLAG
MYSQLI_AUTO_INCREMENT_FLAG
MYSQLI_TIMESTAMP_FLAG
MYSQLI_SET_FLAG
MYSQLI_NUM_FLAG
MYSQLI_PART_KEY_FLAG
MYSQLI_GROUP_FLAG
MYSQLI_TYPE_DECIMAL
MYSQLI_TYPE_NEWDECIMAL
MYSQLI_TYPE_BIT
MYSQLI_TYPE_TINY
MYSQLI_TYPE_SHORT
MYSQLI_TYPE_LONG
MYSQLI_TYPE_FLOAT
MYSQLI_TYPE_DOUBLE
MYSQLI_TYPE_NULL
MYSQLI_TYPE_TIMESTAMP
MYSQLI_TYPE_LONGLONG
MYSQLI_TYPE_INT24
MYSQLI_TYPE_DATE
MYSQLI_TYPE_TIME
MYSQLI_TYPE_DATETIME
MYSQLI_TYPE_YEAR
MYSQLI_TYPE_NEWDATE
MYSQLI_TYPE_INTERVAL
MYSQLI_TYPE_ENUM
MYSQLI_TYPE_SET
MYSQLI_TYPE_TINY_BLOB
MYSQLI_TYPE_MEDIUM_BLOB
MYSQLI_TYPE_LONG_BLOB
MYSQLI_TYPE_BLOB
MYSQLI_TYPE_VAR_STRING
MYSQLI_TYPE_STRING
MYSQLI_TYPE_CHAR
MYSQLI_TYPE_GEOMETRY
MYSQLI_TYPE_JSON
MYSQLI_NEED_DATA
MYSQLI_NO_DATA
MYSQLI_DATA_TRUNCATED
MYSQLI_ENUM_FLAG
MYSQLI_BINARY_FLAG
MYSQLI_CURSOR_TYPE_FOR_UPDATE
MYSQLI_CURSOR_TYPE_NO_CURSOR
MYSQLI_CURSOR_TYPE_READ_ONLY
MYSQLI_CURSOR_TYPE_SCROLLABLE
MYSQLI_STMT_ATTR_CURSOR_TYPE
MYSQLI_STMT_ATTR_PREFETCH_ROWS
MYSQLI_STMT_ATTR_UPDATE_MAX_LENGTH
MYSQLI_SET_CHARSET_NAME
MYSQLI_REPORT_INDEX
MYSQLI_REPORT_ERROR
MYSQLI_REPORT_STRICT
MYSQLI_REPORT_ALL
MYSQLI_REPORT_OFF
MYSQLI_DEBUG_TRACE_ENABLED
MYSQLI_SERVER_QUERY_NO_GOOD_INDEX_USED
MYSQLI_SERVER_QUERY_NO_INDEX_USED
MYSQLI_SERVER_PUBLIC_KEY
MYSQLI_REFRESH_GRANT
MYSQLI_REFRESH_LOG
MYSQLI_REFRESH_TABLES
MYSQLI_REFRESH_HOSTS
MYSQLI_REFRESH_REPLICA
MYSQLI_REFRESH_STATUS
MYSQLI_REFRESH_THREADS
MYSQLI_REFRESH_SLAVE
MYSQLI_REFRESH_MASTER
MYSQLI_TRANS_COR_AND_CHAIN
MYSQLI_TRANS_COR_AND_NO_CHAIN
MYSQLI_TRANS_COR_RELEASE
MYSQLI_TRANS_COR_NO_RELEASE
MYSQLI_TRANS_START_READ_ONLY
MYSQLI_TRANS_START_READ_WRITE
MYSQLI_TRANS_START_CONSISTENT_SNAPSHOT
MYSQLI_CLIENT_SSL_DONT_VERIFY_SERVER_CERT
MYSQLI_IS_MARIADB
ALC_FREQUENCY
ALC_REFRESH
ALC_SYNC
AL_FREQUENCY
AL_BITS
AL_CHANNELS
AL_SIZE
AL_BUFFER
AL_SOURCE_RELATIVE
AL_SOURCE_STATE
AL_PITCH
AL_GAIN
AL_MIN_GAIN
AL_MAX_GAIN
AL_MAX_DISTANCE
AL_ROLLOFF_FACTOR
AL_CONE_OUTER_GAIN
AL_CONE_INNER_ANGLE
AL_CONE_OUTER_ANGLE
AL_REFERENCE_DISTANCE
AL_POSITION
AL_VELOCITY
AL_DIRECTION
AL_ORIENTATION
AL_FORMAT_MONO8
AL_FORMAT_MONO16
AL_FORMAT_STEREO8
AL_FORMAT_STEREO16
AL_INITIAL
AL_PLAYING
AL_PAUSED
AL_STOPPED
AL_LOOPING
AL_TRUE
AL_FALSE
PHP_OUTPUT_HANDLER_START
PHP_OUTPUT_HANDLER_WRITE
PHP_OUTPUT_HANDLER_FLUSH
PHP_OUTPUT_HANDLER_CLEAN
PHP_OUTPUT_HANDLER_FINAL
PHP_OUTPUT_HANDLER_CONT
PHP_OUTPUT_HANDLER_END
Parle\INTERNAL_UTF32
WNOHANG
WUNTRACED
PDO::PARAM_BOOL
PDO::PARAM_NULL
PDO::PARAM_INT
PDO::PARAM_STR
PDO::PARAM_STR_NATL
PDO::PARAM_STR_CHAR
PDO::PARAM_LOB
PDO::PARAM_STMT
PDO::PARAM_INPUT_OUTPUT
PDO::FETCH_DEFAULT
PDO::FETCH_LAZY
PDO::FETCH_ASSOC
PDO::FETCH_NAMED
PDO::FETCH_NUM
PDO::FETCH_BOTH
PDO::FETCH_OBJ
PDO::FETCH_BOUND
PDO::FETCH_COLUMN
PDO::FETCH_CLASS
PDO::FETCH_INTO
PDO::FETCH_FUNC
PDO::FETCH_GROUP
PDO::FETCH_UNIQUE
PDO::FETCH_KEY_PAIR
PDO::FETCH_CLASSTYPE
PDO::FETCH_SERIALIZE
PDO::FETCH_PROPS_LATE
PDO::ATTR_AUTOCOMMIT
PDO::ATTR_PREFETCH
PDO::ATTR_TIMEOUT
PDO::ATTR_ERRMODE
PDO::ATTR_SERVER_VERSION
PDO::ATTR_CLIENT_VERSION
PDO::ATTR_SERVER_INFO
PDO::ATTR_CONNECTION_STATUS
PDO::ATTR_CASE
PDO::ATTR_CURSOR_NAME
PDO::ATTR_CURSOR
PDO::ATTR_DRIVER_NAME
PDO::ATTR_ORACLE_NULLS
PDO::ATTR_PERSISTENT
PDO::ATTR_STATEMENT_CLASS
PDO::ATTR_FETCH_CATALOG_NAMES
PDO::ATTR_FETCH_TABLE_NAMES
PDO::ATTR_STRINGIFY_FETCHES
PDO::ATTR_MAX_COLUMN_LEN
PDO::ATTR_DEFAULT_FETCH_MODE
PDO::ATTR_EMULATE_PREPARES
PDO::ATTR_DEFAULT_STR_PARAM
PDO::ERRMODE_SILENT
PDO::ERRMODE_WARNING
PDO::ERRMODE_EXCEPTION
PDO::CASE_NATURAL
PDO::CASE_LOWER
PDO::CASE_UPPER
PDO::NULL_NATURAL
PDO::NULL_EMPTY_STRING
PDO::NULL_TO_STRING
PDO::FETCH_ORI_NEXT
PDO::FETCH_ORI_PRIOR
PDO::FETCH_ORI_FIRST
PDO::FETCH_ORI_LAST
PDO::FETCH_ORI_ABS
PDO::FETCH_ORI_REL
PDO::CURSOR_FWDONLY
PDO::CURSOR_SCROLL
PDO::ERR_NONE
PDO::PARAM_EVT_ALLOC
PDO::PARAM_EVT_FREE
PDO::PARAM_EVT_EXEC_PRE
PDO::PARAM_EVT_EXEC_POST
PDO::PARAM_EVT_FETCH_PRE
PDO::PARAM_EVT_FETCH_POST
PDO::PARAM_EVT_NORMALIZE
PDO::SQLITE_DETERMINISTIC
PDO::FB_ATTR_DATE_FORMAT
PDO::FB_ATTR_TIME_FORMAT
PDO::FB_ATTR_TIMESTAMP_FORMAT
PDO::MYSQL_ATTR_USE_BUFFERED_QUERY
PDO::MYSQL_ATTR_LOCAL_INFILE
PDO::MYSQL_ATTR_LOCAL_INFILE_DIRECTORY
PDO::MYSQL_ATTR_INIT_COMMAND
PDO::MYSQL_ATTR_READ_DEFAULT_FILE
PDO::MYSQL_ATTR_READ_DEFAULT_GROUP
PDO::MYSQL_ATTR_MAX_BUFFER_SIZE
PDO::MYSQL_ATTR_DIRECT_QUERY
PDO::MYSQL_ATTR_FOUND_ROWS
PDO::MYSQL_ATTR_IGNORE_SPACE
PDO::MYSQL_ATTR_COMPRESS
PDO::MYSQL_ATTR_SSL_CA
PDO::MYSQL_ATTR_SSL_CAPATH
PDO::MYSQL_ATTR_SSL_CERT
PDO::MYSQL_ATTR_SSL_CIPHER
PDO::MYSQL_ATTR_SSL_KEY
PDO::MYSQL_ATTR_SSL_VERIFY_SERVER_CERT
PDO::MYSQL_ATTR_MULTI_STATEMENTS
PDO::OCI_ATTR_ACTION
PDO::OCI_ATTR_CLIENT_INFO
PDO::OCI_ATTR_CLIENT_IDENTIFIER
PDO::OCI_ATTR_MODULE
PDO::ODBC_ATTR_USE_CURSOR_LIBRARY
PDO::ODBC_ATTR_ASSUME_UTF8
PDO::PGSQL_ATTR_DISABLE_PREPARES
PDO::SQLSRV_TXN_READ_UNCOMMITTED
PDO::SQLSRV_TXN_READ_COMMITTED
PDO::SQLSRV_TXN_REPEATABLE_READ
PDO::SQLSRV_TXN_SNAPSHOT
PDO::SQLSRV_TXN_SERIALIZABLE
PDO::SQLSRV_ENCODING_BINARY
PDO::SQLSRV_ENCODING_SYSTEM
PDO::SQLSRV_ENCODING_UTF8
PDO::SQLSRV_ENCODING_DEFAULT
PDO::SQLSRV_ATTR_QUERY_TIMEOUT
PDO::SQLSRV_ATTR_DIRECT_QUERY
PGSQL_LIBPQ_VERSION
PGSQL_LIBPQ_VERSION_STR
PGSQL_ASSOC
PGSQL_NUM
PGSQL_BOTH
PGSQL_CONNECT_FORCE_NEW
PGSQL_CONNECT_ASYNC
PGSQL_CONNECTION_AUTH_OK
PGSQL_CONNECTION_AWAITING_RESPONSE
PGSQL_CONNECTION_BAD
PGSQL_CONNECTION_MADE
PGSQL_CONNECTION_OK
PGSQL_CONNECTION_SETENV
PGSQL_CONNECTION_SSL_STARTUP
PGSQL_CONNECTION_STARTED
PGSQL_SEEK_SET
PGSQL_SEEK_CUR
PGSQL_SEEK_END
PGSQL_EMPTY_QUERY
PGSQL_COMMAND_OK
PGSQL_TUPLES_OK
PGSQL_COPY_OUT
PGSQL_COPY_IN
PGSQL_BAD_RESPONSE
PGSQL_NONFATAL_ERROR
PGSQL_FATAL_ERROR
PGSQL_TRANSACTION_IDLE
PGSQL_TRANSACTION_ACTIVE
PGSQL_TRANSACTION_INTRANS
PGSQL_TRANSACTION_INERROR
PGSQL_TRANSACTION_UNKNOWN
PGSQL_DIAG_SEVERITY
PGSQL_DIAG_SQLSTATE
PGSQL_DIAG_MESSAGE_PRIMARY
PGSQL_DIAG_MESSAGE_DETAIL
PGSQL_DIAG_MESSAGE_HINT
PGSQL_DIAG_STATEMENT_POSITION
PGSQL_DIAG_INTERNAL_POSITION
PGSQL_DIAG_INTERNAL_QUERY
PGSQL_DIAG_CONTEXT
PGSQL_DIAG_SOURCE_FILE
PGSQL_DIAG_SOURCE_LINE
PGSQL_DIAG_SOURCE_FUNCTION
PGSQL_DIAG_SCHEMA_NAME
PGSQL_DIAG_TABLE_NAME
PGSQL_DIAG_COLUMN_NAME
PGSQL_DIAG_DATATYPE_NAME
PGSQL_DIAG_CONSTRAINT_NAME
PGSQL_ERRORS_TERSE
PGSQL_ERRORS_DEFAULT
PGSQL_ERRORS_VERBOSE
PGSQL_NOTICE_LAST
PGSQL_NOTICE_ALL
PGSQL_NOTICE_CLEAR
PGSQL_STATUS_LONG
PGSQL_STATUS_STRING
PGSQL_CONV_IGNORE_DEFAULT
PGSQL_CONV_FORCE_NULL
PGSQL_CONV_IGNORE_NOT_NULL
PGSQL_DML_NO_CONV
PGSQL_DML_EXEC
PGSQL_DML_ASYNC
PGSQL_DML_STRING
PGSQL_DML_ESCAPE
PGSQL_POLLING_FAILED
PGSQL_POLLING_READING
PGSQL_POLLING_WRITING
PGSQL_POLLING_OK
PGSQL_POLLING_ACTIVE
PGSQL_DIAG_SEVERITY_NONLOCALIZED
PGSQL_SHOW_CONTEXT_NEVER
PGSQL_SHOW_CONTEXT_ERRORS
PGSQL_SHOW_CONTEXT_ALWAYS
PGSQL_TRACE_SUPPRESS_TIMESTAMPS
PGSQL_TRACE_REGRESS_MODE
PSPELL_FAST
PSPELL_NORMAL
PSPELL_BAD_SPELLERS
PSPELL_RUN_TOGETHER
RADIUS_MPPE_KEY_LEN
RAR_HOST_MSDOS
RAR_HOST_OS2
RAR_HOST_WIN32
RAR_HOST_UNIX
RAR_HOST_BEOS
READLINE_LIB
MSG_IPC_NOWAIT
MSG_EAGAIN
MSG_ENOMSG
MSG_NOERROR
MSG_EXCEPT
SID
PHP_SESSION_DISABLED
PHP_SESSION_NONE
PHP_SESSION_ACTIVE
SNMP_OID_OUTPUT_SUFFIX
SNMP_OID_OUTPUT_MODULE
SNMP_OID_OUTPUT_FULL
SNMP_OID_OUTPUT_NUMERIC
SNMP_OID_OUTPUT_UCD
SNMP_OID_OUTPUT_NONE
AF_UNIX
AF_INET
AF_INET6
AF_DIVERT
SOCK_STREAM
SOCK_DGRAM
SOCK_RAW
SOCK_SEQPACKET
SOCK_RDM
MSG_OOB
MSG_WAITALL
MSG_PEEK
MSG_DONTROUTE
MSG_EOR
MSG_EOF
MSG_ZEROCOPY
SO_DEBUG
SO_REUSEADDR
SO_REUSEPORT
SO_KEEPALIVE
SO_DONTROUTE
SO_LINGER
SO_BROADCAST
SO_OOBINLINE
SO_SNDBUF
SO_RCVBUF
SO_SNDLOWAT
SO_RCVLOWAT
SO_SNDTIMEO
SO_RCVTIMEO
SO_TYPE
SO_ERROR
SO_ZEROCOPY
TCP_NODELAY
TCP_KEEPCNT
TCP_KEEPIDLE
TCP_KEEPINTVL
TCP_KEEPALIVE
TCP_NOTSENT_LOWAT
SO_MARK
SO_USER_COOKIE
SO_RTABLE
SO_ACCEPTFILTER
SO_DONTTRUNC
SO_WANTMORE
SO_INCOMING_CPU
SO_MEMINFO
SO_BPF_EXTENSIONS
SO_SETFIB
SO_ATTACH_REUSEPORT_CBPF
SO_DETACH_BPF
SO_DETACH_FILTER
SO_RERROR
SO_ZEROIZE
SO_SPLICE
SO_REUSEPORT_LB
SOL_FILTER
SOL_UDPLITE
UDPLITE_RECV_CSCOV
UDPLITE_SEND_CSCOV
TCP_DEFER_ACCEPT
TCP_CONGESTION
TCP_QUICKACK
TCP_REPAIR
IP_DONTFRAG
IP_MTU_DISCOVER
IP_PMTUDISC_DO
IP_PMTUDISC_DONT
IP_PMTUDISC_WANT
IP_PMTUDISC_PROBE
IP_PMTUDISC_INTERFACE
IP_PMTUDISC_OMIT
IP_BIND_ADDRESS_NO_PORT
SOL_SOCKET
PHP_NORMAL_READ
PHP_BINARY_READ
SOL_TCP
SOL_UDP
SSH2_FINGERPRINT_MD5
SSH2_FINGERPRINT_SHA1
SSH2_FINGERPRINT_HEX
SSH2_FINGERPRINT_RAW
SSH2_TERM_UNIT_CHARS
SSH2_TERM_UNIT_PIXELS
SSH2_DEFAULT_TERM_WIDTH
SSH2_DEFAULT_TERM_HEIGHT
SSH2_DEFAULT_TERM_UNIT
SSH2_STREAM_STDIO
SSH2_STREAM_STDERR
SSH2_DEFAULT_TERMINAL
SSH2_POLLIN
SSH2_POLLEXT
SSH2_POLLOUT
SSH2_POLLERR
SSH2_POLLHUP
SSH2_POLLNVAL
SSH2_POLL_SESSION_CLOSED
SSH2_POLL_CHANNEL_CLOSED
SSH2_POLL_LISTENER_CLOSED
CRYPT_SALT_LENGTH
CRYPT_STD_DES
CRYPT_EXT_DES
CRYPT_MD5
CRYPT_BLOWFISH
CRYPT_SHA256
CRYPT_SHA512
HTML_SPECIALCHARS
HTML_ENTITIES
ENT_COMPAT
ENT_QUOTES
ENT_NOQUOTES
ENT_IGNORE
ENT_SUBSTITUTE
ENT_DISALLOWED
ENT_HTML401
ENT_XML1
ENT_XHTML
ENT_HTML5
CHAR_MAX
LC_CTYPE
LC_NUMERIC
LC_TIME
LC_COLLATE
LC_MONETARY
LC_ALL
LC_MESSAGES
STR_PAD_LEFT
STR_PAD_RIGHT
STR_PAD_BOTH
SVN_REVISION_HEAD
ODBC_TYPE
ODBC_BINMODE_PASSTHRU
ODBC_BINMODE_RETURN
ODBC_BINMODE_CONVERT
SQL_ODBC_CURSORS
SQL_CUR_USE_DRIVER
SQL_CUR_USE_IF_NEEDED
SQL_CUR_USE_ODBC
SQL_CONCURRENCY
SQL_CONCUR_READ_ONLY
SQL_CONCUR_LOCK
SQL_CONCUR_ROWVER
SQL_CONCUR_VALUES
SQL_CURSOR_TYPE
SQL_CURSOR_FORWARD_ONLY
SQL_CURSOR_KEYSET_DRIVEN
SQL_CURSOR_DYNAMIC
SQL_CURSOR_STATIC
SQL_KEYSET_SIZE
SQL_CHAR
SQL_VARCHAR
SQL_LONGVARCHAR
SQL_DECIMAL
SQL_NUMERIC
SQL_BIT
SQL_TINYINT
SQL_SMALLINT
SQL_INTEGER
SQL_BIGINT
SQL_REAL
SQL_FLOAT
SQL_DOUBLE
SQL_BINARY
SQL_VARBINARY
SQL_LONGVARBINARY
SQL_DATE
SQL_TIME
SQL_TIMESTAMP
SQL_TYPE_DATE
SQL_TYPE_TIME
SQL_TYPE_TIMESTAMP
SQL_BEST_ROWID
SQL_ROWVER
SQL_SCOPE_CURROW
SQL_SCOPE_TRANSACTION
SQL_SCOPE_SESSION
SQL_NO_NULLS
SQL_NULLABLE
SQL_INDEX_UNIQUE
SQL_INDEX_ALL
SQL_ENSURE
SQL_QUICK
PHP_URL_SCHEME
PHP_URL_HOST
PHP_URL_PORT
PHP_URL_USER
PHP_URL_PASS
PHP_URL_PATH
PHP_URL_QUERY
PHP_URL_FRAGMENT
XATTR_ROOT
XATTR_DONTFOLLOW
XATTR_CREATE
XATTR_REPLACE
XDIFF_PATCH_NORMAL
XDIFF_PATCH_REVERSE
XHPROF_FLAGS_NO_BUILTINS
XHPROF_FLAGS_CPU
XHPROF_FLAGS_MEMORY
XML_ERROR_NONE
XML_ERROR_NO_MEMORY
XML_ERROR_SYNTAX
XML_ERROR_NO_ELEMENTS
XML_ERROR_INVALID_TOKEN
XML_ERROR_UNCLOSED_TOKEN
XML_ERROR_PARTIAL_CHAR
XML_ERROR_TAG_MISMATCH
XML_ERROR_DUPLICATE_ATTRIBUTE
XML_ERROR_JUNK_AFTER_DOC_ELEMENT
XML_ERROR_PARAM_ENTITY_REF
XML_ERROR_UNDEFINED_ENTITY
XML_ERROR_RECURSIVE_ENTITY_REF
XML_ERROR_ASYNC_ENTITY
XML_ERROR_BAD_CHAR_REF
XML_ERROR_BINARY_ENTITY_REF
XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF
XML_ERROR_MISPLACED_XML_PI
XML_ERROR_UNKNOWN_ENCODING
XML_ERROR_INCORRECT_ENCODING
XML_ERROR_UNCLOSED_CDATA_SECTION
XML_ERROR_EXTERNAL_ENTITY_HANDLING
XML_OPTION_CASE_FOLDING
XML_OPTION_TARGET_ENCODING
XML_OPTION_SKIP_TAGSTART
XML_OPTION_SKIP_WHITE
XML_SAX_IMPL
XSL_CLONE_AUTO
XSL_CLONE_NEVER
XSL_CLONE_ALWAYS
LIBXSLT_VERSION
LIBXSLT_DOTTED_VERSION
LIBEXSLT_VERSION
LIBEXSLT_DOTTED_VERSION
XSL_SECPREF_NONE
XSL_SECPREF_READ_FILE
XSL_SECPREF_WRITE_FILE
XSL_SECPREF_CREATE_DIRECTORY
XSL_SECPREF_READ_NETWORK
XSL_SECPREF_WRITE_NETWORK
XSL_SECPREF_DEFAULT
YAML_ANY_SCALAR_STYLE
YAML_PLAIN_SCALAR_STYLE
YAML_SINGLE_QUOTED_SCALAR_STYLE
YAML_DOUBLE_QUOTED_SCALAR_STYLE
YAML_LITERAL_SCALAR_STYLE
YAML_FOLDED_SCALAR_STYLE
ZipArchive::CREATE
ZipArchive::OVERWRITE
ZipArchive::EXCL
ZipArchive::RDONLY
ZipArchive::CHECKCONS
FORCE_GZIP
FORCE_DEFLATE
ZLIB_ENCODING_RAW
ZLIB_ENCODING_DEFLATE
ZLIB_ENCODING_GZIP
ZLIB_FILTERED
ZLIB_HUFFMAN_ONLY
ZLIB_FIXED
ZLIB_RLE
ZLIB_DEFAULT_STRATEGY
ZLIB_BLOCK
ZLIB_NO_FLUSH
ZLIB_PARTIAL_FLUSH
ZLIB_SYNC_FLUSH
ZLIB_FULL_FLUSH
ZLIB_FINISH
apache_child_terminate ( ):void | Terminate apache process after this request
apache_get_modules ( ):array | Get a list of loaded Apache modules
apache_get_version ( ):string|false | Fetch Apache version
apache_getenv ( string $variable, bool $walk_to_top = reffalse;):string|false | Get an Apache subprocess_env variable
apache_lookup_uri ( string $filename):object|false | Perform a partial request for the specified URI and return all info about it
apache_note ( string $note_name,  $note_value = refnull;):string|false | Get and set apache request notes
apache_request_headers ( ):array | Fetch all HTTP request headers
apache_response_headers ( ):array|false | Fetch all HTTP response headers
apache_setenv ( string $variable, string $value, bool $walk_to_top = reffalse;):bool | Set an Apache subprocess_env variable
getallheaders ( ):array | Fetch all HTTP request headers
virtual ( string $uri):bool | Perform an Apache sub-request
apcu_add ( string $key, mixed $var, int $ttl = 0):bool | Cache a new variable in the data store
apcu_cache_info ( bool $limited = reffalse;):array|false | Retrieves cached information from APCu's data store
apcu_cas ( string $key, int $old, int $new):bool | Updates an old value with a new value
apcu_clear_cache ( ):bool | Clears the APCu cache
apcu_dec ( string $key, int $step = 1, bool $success, int $ttl = 0):int|false | Decrease a stored number
apcu_delete ( mixed $key):mixed | Removes a stored variable from the cache
apcu_enabled ( ):bool | Whether APCu is usable in the current environment
apcu_entry ( string $key, callable $generator, int $ttl = 0):mixed | Atomically fetch or generate a cache entry
apcu_exists ( mixed $keys):mixed | Checks if entry exists
apcu_fetch ( mixed $key, bool $success):mixed | Fetch a stored variable from the cache
apcu_inc ( string $key, int $step = 1, bool $success, int $ttl = 0):int|false | Increase a stored number
apcu_key_info ( string $key):array|null | Get detailed information about the cache key
apcu_sma_info ( bool $limited = reffalse;):array|false | Retrieves APCu Shared Memory Allocation information
apcu_store ( string $key, mixed $var, int $ttl = 0):bool | Cache a variable in the data store
array_change_key_case ( array $array, int $case = CASE_LOWER):array | Changes the case of all keys in an array
array_chunk ( array $array, int $length, bool $preserve_keys = reffalse;):array | Split an array into chunks
array_column ( array $array,  $column_key,  $index_key = refnull;):array | Return the values from a single column in the input array
array_combine ( array $keys, array $values):array | Creates an array by using one array for keys and another for its values
array_count_values ( array $array):array | Counts the occurrences of each distinct value in an array
array_diff_assoc ( array $array, array $arrays):array | Computes the difference of arrays with additional index check
array_diff_key ( array $array, array $arrays):array | Computes the difference of arrays using keys for comparison
array_diff_uassoc ( array $array, array $arrays, callable $key_compare_func):array | Computes the difference of arrays with additional index check which is performed by a user supplied callback function
array_diff_ukey ( array $array, array $arrays, callable $key_compare_func):array | Computes the difference of arrays using a callback function on the keys for comparison
array_diff ( array $array, array $arrays):array | Computes the difference of arrays
array_fill_keys ( array $keys, mixed $value):array | Fill an array with values, specifying keys
array_fill ( int $start_index, int $count, mixed $value):array | Fill an array with values
array_filter ( array $array,  $callback = refnull;, int $mode = 0):array | Filters elements of an array using a callback function
array_flip ( array $array):array | Exchanges all keys with their associated values in an array
array_intersect_assoc ( array $array, array $arrays):array | Computes the intersection of arrays with additional index check
array_intersect_key ( array $array, array $arrays):array | Computes the intersection of arrays using keys for comparison
array_intersect_uassoc ( array $array, array $arrays, callable $key_compare_func):array | Computes the intersection of arrays with additional index check, compares indexes by a callback function
array_intersect_ukey ( array $array, array $arrays, callable $key_compare_func):array | Computes the intersection of arrays using a callback function on the keys for comparison
array_intersect ( array $array, array $arrays):array | Computes the intersection of arrays
array_is_list ( array $array):bool | Checks whether a given  is a list
array_key_exists (  $key, array $array):bool | Checks if the given key or index exists in the array
array_key_first ( array $array):int|string|null | Gets the first key of an array
array_key_last ( array $array):int|string|null | Gets the last key of an array
array_keys ( array $array):array | Return all the keys or a subset of the keys of an array
array_map (  $callback, array $array, array $arrays):array | Applies the callback to the elements of the given arrays
array_merge_recursive ( array $arrays):array | Merge one or more arrays recursively
array_merge ( array $arrays):array | Merge one or more arrays
array_multisort ( array $array1, mixed $array1_sort_order = SORT_ASC, mixed $array1_sort_flags = SORT_REGULAR, mixed $rest):bool | Sort multiple or multi-dimensional arrays
array_pad ( array $array, int $length, mixed $value):array | Pad array to the specified length with a value
array_pop ( array $array):mixed | Pop the element off the end of array
array_product ( array $array):int|float | Calculate the product of values in an array
array_push ( array $array, mixed $values):int | Push one or more elements onto the end of array
array_rand ( array $array, int $num = 1):int|string|array | Pick one or more random keys out of an array
array_reduce ( array $array, callable $callback, mixed $initial = refnull;):mixed | Iteratively reduce the array to a single value using a callback function
array_replace_recursive ( array $array, array $replacements):array | Replaces elements from passed arrays into the first array recursively
array_replace ( array $array, array $replacements):array | Replaces elements from passed arrays into the first array
array_reverse ( array $array, bool $preserve_keys = reffalse;):array | Return an array with elements in reverse order
array_search ( mixed $needle, array $haystack, bool $strict = reffalse;):int|string|false | Searches the array for a given value and returns the first corresponding key if successful
array_shift ( array $array):mixed | Shift an element off the beginning of array
array_slice ( array $array, int $offset,  $length = refnull;, bool $preserve_keys = reffalse;):array | Extract a slice of the array
array_splice ( array $array, int $offset,  $length = refnull;, mixed $replacement = []):array | Remove a portion of the array and replace it with something else
array_sum ( array $array):int|float | Calculate the sum of values in an array
array_udiff_assoc ( array $array, array $arrays, callable $value_compare_func):array | Computes the difference of arrays with additional index check, compares data by a callback function
array_udiff_uassoc ( array $array, array $arrays, callable $value_compare_func, callable $key_compare_func):array | Computes the difference of arrays with additional index check, compares data and indexes by a callback function
array_udiff ( array $array, array $arrays, callable $value_compare_func):array | Computes the difference of arrays by using a callback function for data comparison
array_uintersect_assoc ( array $array, array $arrays, callable $value_compare_func):array | Computes the intersection of arrays with additional index check, compares data by a callback function
array_uintersect_uassoc ( array $array1, array $arrays, callable $value_compare_func, callable $key_compare_func):array | Computes the intersection of arrays with additional index check, compares data and indexes by separate callback functions
array_uintersect ( array $array, array $arrays, callable $value_compare_func):array | Computes the intersection of arrays, compares data by a callback function
array_unique ( array $array, int $flags = SORT_STRING):array | Removes duplicate values from an array
array_unshift ( array $array, mixed $values):int | Prepend one or more elements to the beginning of an array
array_values ( array $array):array | Return all the values of an array
array_walk_recursive (  $array, callable $callback, mixed $arg = refnull;):bool | Apply a user function recursively to every member of an array
array_walk (  $array, callable $callback, mixed $arg = refnull;):bool | Apply a user supplied function to every member of an array
array ( mixed $values):array | Create an array
arsort ( array $array, int $flags = SORT_REGULAR):true | Sort an array in descending order and maintain index association
asort ( array $array, int $flags = SORT_REGULAR):true | Sort an array in ascending order and maintain index association
compact (  $var_name,  $var_names):array | Create array containing variables and their values
count (  $value, int $mode = COUNT_NORMAL):int | Counts all elements in an array or in a  object
current (  $array):mixed | Return the current element in an array
each (  $array):array | Return the current key and value pair from an array and advance the array cursor
end (  $array):mixed | Set the internal pointer of an array to its last element
extract ( array $array, int $flags = EXTR_OVERWRITE, string $prefix = ""):int | Import variables into the current symbol table from an array
in_array ( mixed $needle, array $haystack, bool $strict = reffalse;):bool | Checks if a value exists in an array
key_exists (  $key, array $array):bool | Checks if the given key or index exists in the array
key (  $array):int|string|null | Fetch a key from an array
krsort ( array $array, int $flags = SORT_REGULAR):true | Sort an array by key in descending order
ksort ( array $array, int $flags = SORT_REGULAR):true | Sort an array by key in ascending order
list ( mixed $var, mixed $vars):array | Assign variables as if they were an array
natcasesort ( array $array):true | Sort an array using a case insensitive "natural order" algorithm
natsort ( array $array):true | Sort an array using a "natural order" algorithm
next (  $array):mixed | Advance the internal pointer of an array
pos (  $array):mixed | Return the current element in an array
prev (  $array):mixed | Rewind the internal array pointer
range (  $start,  $end,  $step = 1):array | Create an array containing a range of elements
reset (  $array):mixed | Set the internal pointer of an array to its first element
rsort ( array $array, int $flags = SORT_REGULAR):true | Sort an array in descending order
shuffle ( array $array):true | Shuffle an array
sizeof (  $value, int $mode = COUNT_NORMAL):int | Counts all elements in an array or in a  object
sort ( array $array, int $flags = SORT_REGULAR):true | Sort an array in ascending order
uasort ( array $array, callable $callback):true | Sort an array with a user-defined comparison function and maintain index association
uksort ( array $array, callable $callback):true | Sort an array by keys using a user-defined comparison function
usort ( array $array, callable $callback):true | Sort an array by values using a user-defined comparison function
bcadd ( string $num1, string $num2,  $scale = refnull;):string | Add two arbitrary precision numbers
bccomp ( string $num1, string $num2,  $scale = refnull;):int | Compare two arbitrary precision numbers
bcdiv ( string $num1, string $num2,  $scale = refnull;):string | Divide two arbitrary precision numbers
bcmod ( string $num1, string $num2,  $scale = refnull;):string | Get modulus of an arbitrary precision number
bcmul ( string $num1, string $num2,  $scale = refnull;):string | Multiply two arbitrary precision numbers
bcpow ( string $num, string $exponent,  $scale = refnull;):string | Raise an arbitrary precision number to another
bcpowmod ( string $num, string $exponent, string $modulus,  $scale = refnull;):string | Raise an arbitrary precision number to another, reduced by a specified modulus
bcscale ( int $scale):int | Set or get default scale parameter for all bc math functions
bcsqrt ( string $num,  $scale = refnull;):string | Get the square root of an arbitrary precision number
bcsub ( string $num1, string $num2,  $scale = refnull;):string | Subtract one arbitrary precision number from another
bzclose ( resource $bz):bool | Close a bzip2 file
bzcompress ( string $data, int $block_size = 4, int $work_factor = 0):string|int | Compress a string into bzip2 encoded data
bzdecompress ( string $data, bool $use_less_memory = reffalse;):string|int|false | Decompresses bzip2 encoded data
bzerrno ( resource $bz):int | Returns a bzip2 error number
bzerror ( resource $bz):array | Returns the bzip2 error number and error string in an array
bzerrstr ( resource $bz):string | Returns a bzip2 error string
bzflush ( resource $bz):bool | Do nothing
bzopen (  $file, string $mode):resource|false | Opens a bzip2 compressed file
bzread ( resource $bz, int $length = 1024):string|false | Binary safe bzip2 file read
bzwrite ( resource $bz, string $data,  $length = refnull;):int|false | Binary safe bzip2 file write
cal_days_in_month ( int $calendar, int $month, int $year):int | Return the number of days in a month for a given year and calendar
cal_from_jd ( int $julian_day, int $calendar):array | Converts from Julian Day Count to a supported calendar
cal_info ( int $calendar = -1):array | Returns information about a particular calendar
cal_to_jd ( int $calendar, int $month, int $day, int $year):int | Converts from a supported calendar to Julian Day Count
easter_date (  $year = refnull;, int $mode = CAL_EASTER_DEFAULT):int | Get Unix timestamp for midnight on Easter of a given year
easter_days (  $year = refnull;, int $mode = CAL_EASTER_DEFAULT):int | Get number of days after March 21 on which Easter falls for a given year
frenchtojd ( int $month, int $day, int $year):int | Converts a date from the French Republican Calendar to a Julian Day Count
gregoriantojd ( int $month, int $day, int $year):int | Converts a Gregorian date to Julian Day Count
jddayofweek ( int $julian_day, int $mode = CAL_DOW_DAYNO):int|string | Returns the day of the week
jdmonthname ( int $julian_day, int $mode):string | Returns a month name
jdtofrench ( int $julian_day):string | Converts a Julian Day Count to the French Republican Calendar
jdtogregorian ( int $julian_day):string | Converts Julian Day Count to Gregorian date
jdtojewish ( int $julian_day, bool $hebrew = reffalse;, int $flags = 0):string | Converts a Julian day count to a Jewish calendar date
jdtojulian ( int $julian_day):string | Converts a Julian Day Count to a Julian Calendar Date
jdtounix ( int $julian_day):int | Convert Julian Day to Unix timestamp
jewishtojd ( int $month, int $day, int $year):int | Converts a date in the Jewish Calendar to Julian Day Count
juliantojd ( int $month, int $day, int $year):int | Converts a Julian Calendar date to Julian Day Count
unixtojd (  $timestamp = refnull;):int|false | Convert Unix timestamp to Julian Day
__autoload ( string $class):void | Attempt to load undefined class
class_alias ( string $class, string $alias, bool $autoload = reftrue;):bool | Creates an alias for a class
class_exists ( string $class, bool $autoload = reftrue;):bool | Checks if the class has been defined
enum_exists ( string $enum, bool $autoload = reftrue;):bool | Checks if the enum has been defined
get_called_class ( ):string | The "Late Static Binding" class name
get_class_methods (  $object_or_class):array | Gets the class methods' names
get_class_vars ( string $class):array | Get the default properties of the class
get_class ( object $object):string | Returns the name of the class of an object
get_declared_classes ( ):array | Returns an array with the name of the defined classes
get_declared_interfaces ( ):array | Returns an array of all declared interfaces
get_declared_traits ( ):array | Returns an array of all declared traits
get_mangled_object_vars ( object $object):array | Returns an array of mangled object properties
get_object_vars ( object $object):array | Gets the properties of the given object
get_parent_class (  $object_or_class):string|false | Retrieves the parent class name for object or class
interface_exists ( string $interface, bool $autoload = reftrue;):bool | Checks if the interface has been defined
is_a ( mixed $object_or_class, string $class, bool $allow_string = reffalse;):bool | Checks whether the object is of a given type or subtype
is_subclass_of ( mixed $object_or_class, string $class, bool $allow_string = reftrue;):bool | Checks if the object has this class as one of its parents or implements it
method_exists (  $object_or_class, string $method):bool | Checks if the class method exists
property_exists (  $object_or_class, string $property):bool | Checks if the object or class has a property
trait_exists ( string $trait, bool $autoload = reftrue;):bool | Checks if the trait exists
CommonMark\Parse ( string $content, int $options):CommonMark\Node | Parsing
CommonMark\Render\HTML ( CommonMark\Node $node, int $options):string | Rendering
CommonMark\Render\Latex ( CommonMark\Node $node, int $options, int $width):string | Rendering
CommonMark\Render\Man ( CommonMark\Node $node, int $options, int $width):string | Rendering
CommonMark\Render ( CommonMark\Node $node, int $options, int $width):string | Rendering
CommonMark\Render\XML ( CommonMark\Node $node, int $options):string | Rendering
com_create_guid ( ):string|false | Generate a globally unique identifier (GUID)
com_event_sink ( variant $variant, object $sink_object,  $sink_interface = refnull;):bool | Connect events from a COM object to a PHP object
com_get_active_object ( string $prog_id,  $codepage = refnull;):variant | Returns a handle to an already running instance of a COM object
com_load_typelib ( string $typelib, bool $case_insensitive = reftrue;):bool | Loads a Typelib
com_message_pump ( int $timeout_milliseconds = 0):bool | Process COM messages, sleeping for up to timeoutms milliseconds
com_print_typeinfo (  $variant,  $dispatch_interface = refnull;, bool $display_sink = reffalse;):bool | Print out a PHP class definition for a dispatchable interface
variant_abs ( mixed $value):variant | Returns the absolute value of a variant
variant_add ( mixed $left, mixed $right):variant | "Adds" two variant values together and returns the result
variant_and ( mixed $left, mixed $right):variant | Performs a bitwise AND operation between two variants
variant_cast ( variant $variant, int $type):variant | Convert a variant into a new variant object of another type
variant_cat ( mixed $left, mixed $right):variant | Concatenates two variant values together and returns the result
variant_cmp ( mixed $left, mixed $right, int $locale_id = LOCALE_SYSTEM_DEFAULT, int $flags = 0):int | Compares two variants
variant_date_from_timestamp ( int $timestamp):variant | Returns a variant date representation of a Unix timestamp
variant_date_to_timestamp ( variant $variant):int|null | Converts a variant date/time value to Unix timestamp
variant_div ( mixed $left, mixed $right):variant | Returns the result from dividing two variants
variant_eqv ( mixed $left, mixed $right):variant | Performs a bitwise equivalence on two variants
variant_fix ( mixed $value):variant | Returns the integer portion of a variant
variant_get_type ( variant $variant):int | Returns the type of a variant object
variant_idiv ( mixed $left, mixed $right):variant | Converts variants to integers and then returns the result from dividing them
variant_imp ( mixed $left, mixed $right):variant | Performs a bitwise implication on two variants
variant_int ( mixed $value):variant | Returns the integer portion of a variant
variant_mod ( mixed $left, mixed $right):variant | Divides two variants and returns only the remainder
variant_mul ( mixed $left, mixed $right):variant | Multiplies the values of the two variants
variant_neg ( mixed $value):variant | Performs logical negation on a variant
variant_not ( mixed $value):variant | Performs bitwise not negation on a variant
variant_or ( mixed $left, mixed $right):variant | Performs a logical disjunction on two variants
variant_pow ( mixed $left, mixed $right):variant | Returns the result of performing the power function with two variants
variant_round ( mixed $value, int $decimals):variant|null | Rounds a variant to the specified number of decimal places
variant_set_type ( variant $variant, int $type):void | Convert a variant into another type "in-place"
variant_set ( variant $variant, mixed $value):void | Assigns a new value for a variant object
variant_sub ( mixed $left, mixed $right):variant | Subtracts the value of the right variant from the left variant value
variant_xor ( mixed $left, mixed $right):variant | Performs a logical exclusion on two variants
Componere\cast ( Type $type,  $object):Type | Casting
Componere\cast_by_ref ( Type $type,  $object):Type | Casting
ctype_alnum ( mixed $text):bool | Check for alphanumeric character(s)
ctype_alpha ( mixed $text):bool | Check for alphabetic character(s)
ctype_cntrl ( mixed $text):bool | Check for control character(s)
ctype_digit ( mixed $text):bool | Check for numeric character(s)
ctype_graph ( mixed $text):bool | Check for any printable character(s) except space
ctype_lower ( mixed $text):bool | Check for lowercase character(s)
ctype_print ( mixed $text):bool | Check for printable character(s)
ctype_punct ( mixed $text):bool | Check for any printable character which is not whitespace or an    alphanumeric character
ctype_space ( mixed $text):bool | Check for whitespace character(s)
ctype_upper ( mixed $text):bool | Check for uppercase character(s)
ctype_xdigit ( mixed $text):bool | Check for character(s) representing a hexadecimal digit
cubrid_bind ( resource $req_identifier, int $bind_index, mixed $bind_value, string $bind_value_type):bool | Bind variables to a prepared statement as parameters
cubrid_close_prepare ( resource $req_identifier):bool | Close the request handle
cubrid_close_request ( resource $req_identifier):bool | Close the request handle
cubrid_col_get ( resource $conn_identifier, string $oid, string $attr_name):array | Get contents of collection type column using OID
cubrid_col_size ( resource $conn_identifier, string $oid, string $attr_name):int | Get the number of elements in collection type column using OID
cubrid_column_names ( resource $req_identifier):array | Get the column names in result
cubrid_column_types ( resource $req_identifier):array | Get column types in result
cubrid_commit ( resource $conn_identifier):bool | Commit a transaction
cubrid_connect_with_url ( string $conn_url, string $userid, string $passwd, bool $new_link = reffalse;):resource | Establish the environment for connecting to CUBRID server
cubrid_connect ( string $host, int $port, string $dbname, string $userid, string $passwd, bool $new_link = reffalse;):resource | Open a connection to a CUBRID Server
cubrid_current_oid ( resource $req_identifier):string | Get OID of the current cursor location
cubrid_disconnect ( resource $conn_identifier):bool | Close a database connection
cubrid_drop ( resource $conn_identifier, string $oid):bool | Delete an instance using OID
cubrid_error_code_facility ( ):int | Get the facility code of error
cubrid_error_code ( ):int | Get error code for the most recent function call
cubrid_error_msg ( ):string | Get last error message for the most recent function call
cubrid_execute ( resource $conn_identifier, string $sql, int $option = 0):resource | Execute a prepared SQL statement
cubrid_fetch ( resource $result, int $type = CUBRID_BOTH):mixed | Fetch the next row from a result set
cubrid_free_result ( resource $req_identifier):bool | Free the memory occupied by the result data
cubrid_get_autocommit ( resource $conn_identifier):bool | Get auto-commit mode of the connection
cubrid_get_charset ( resource $conn_identifier):string | Return the current CUBRID connection charset
cubrid_get_class_name ( resource $conn_identifier, string $oid):string | Get the class name using OID
cubrid_get_client_info ( ):string | Return the client library version
cubrid_get_db_parameter ( resource $conn_identifier):array | Returns the CUBRID database parameters
cubrid_get_query_timeout ( resource $req_identifier):int | Get the query timeout value of the request
cubrid_get_server_info ( resource $conn_identifier):string | Return the CUBRID server version
cubrid_get ( resource $conn_identifier, string $oid, mixed $attr):mixed | Get a column using OID
cubrid_insert_id ( resource $conn_identifier):string | Return the ID generated for the last updated  column
cubrid_is_instance ( resource $conn_identifier, string $oid):int | Check whether the instance pointed by OID exists
cubrid_lob_close ( array $lob_identifier_array):bool | Close BLOB/CLOB data
cubrid_lob_export ( resource $conn_identifier, resource $lob_identifier, string $path_name):bool | Export BLOB/CLOB data to file
cubrid_lob_get ( resource $conn_identifier, string $sql):array | Get BLOB/CLOB data
cubrid_lob_send ( resource $conn_identifier, resource $lob_identifier):bool | Read BLOB/CLOB data and send straight to browser
cubrid_lob_size ( resource $lob_identifier):string | Get BLOB/CLOB data size
cubrid_lob2_bind ( resource $req_identifier, int $bind_index, mixed $bind_value, string $bind_value_type):bool | Bind a lob object or a string as a lob object to a prepared statement as parameters
cubrid_lob2_close ( resource $lob_identifier):bool | Close LOB object
cubrid_lob2_export ( resource $lob_identifier, string $file_name):bool | Export the lob object to a file
cubrid_lob2_import ( resource $lob_identifier, string $file_name):bool | Import BLOB/CLOB data from a file
cubrid_lob2_new ( resource $conn_identifier, string $type = "BLOB"):resource | Create a lob object
cubrid_lob2_read ( resource $lob_identifier, int $len):string | Read from BLOB/CLOB data
cubrid_lob2_seek ( resource $lob_identifier, int $offset, int $origin = CUBRID_CURSOR_CURRENT):bool | Move the cursor of a lob object
cubrid_lob2_seek64 ( resource $lob_identifier, string $offset, int $origin = CUBRID_CURSOR_CURRENT):bool | Move the cursor of a lob object
cubrid_lob2_size ( resource $lob_identifier):int | Get a lob object's size
cubrid_lob2_size64 ( resource $lob_identifier):string | Get a lob object's size
cubrid_lob2_tell ( resource $lob_identifier):int | Tell the cursor position of the LOB object
cubrid_lob2_tell64 ( resource $lob_identifier):string | Tell the cursor position of the LOB object
cubrid_lob2_write ( resource $lob_identifier, string $buf):bool | Write to a lob object
cubrid_lock_read ( resource $conn_identifier, string $oid):bool | Set a read lock on the given OID
cubrid_lock_write ( resource $conn_identifier, string $oid):bool | Set a write lock on the given OID
cubrid_move_cursor ( resource $req_identifier, int $offset, int $origin = CUBRID_CURSOR_CURRENT):bool | Move the cursor in the result
cubrid_next_result ( resource $result):bool | Get result of next query when executing multiple SQL statements
cubrid_num_cols ( resource $result):int | Return the number of columns in the result set
cubrid_num_rows ( resource $result):int | Get the number of rows in the result set
cubrid_pconnect_with_url ( string $conn_url, string $userid, string $passwd):resource | Open a persistent connection to CUBRID server
cubrid_pconnect ( string $host, int $port, string $dbname, string $userid, string $passwd):resource | Open a persistent connection to a CUBRID server
cubrid_prepare ( resource $conn_identifier, string $prepare_stmt, int $option = 0):resource | Prepare a SQL statement for execution
cubrid_put ( resource $conn_identifier, string $oid, string $attr, mixed $value):bool | Update a column using OID
cubrid_rollback ( resource $conn_identifier):bool | Roll back a transaction
cubrid_schema ( resource $conn_identifier, int $schema_type, string $class_name, string $attr_name):array | Get the requested schema information
cubrid_seq_drop ( resource $conn_identifier, string $oid, string $attr_name, int $index):bool | Delete an element from sequence type column using OID
cubrid_seq_insert ( resource $conn_identifier, string $oid, string $attr_name, int $index, string $seq_element):bool | Insert an element to a sequence type column using OID
cubrid_seq_put ( resource $conn_identifier, string $oid, string $attr_name, int $index, string $seq_element):bool | Update the element value of sequence type column using OID
cubrid_set_add ( resource $conn_identifier, string $oid, string $attr_name, string $set_element):bool | Insert a single element to set type column using OID
cubrid_set_autocommit ( resource $conn_identifier, bool $mode):bool | Set autocommit mode of the connection
cubrid_set_db_parameter ( resource $conn_identifier, int $param_type, int $param_value):bool | Sets the CUBRID database parameters
cubrid_set_drop ( resource $conn_identifier, string $oid, string $attr_name, string $set_element):bool | Delete an element from set type column using OID
cubrid_set_query_timeout ( resource $req_identifier, int $timeout):bool | Set the timeout time of query execution
cubrid_version ( ):string | Get the CUBRID PHP module's version
curl_close ( CurlHandle $handle):void | Close a cURL session
curl_copy_handle ( CurlHandle $handle):CurlHandle|false | Copy a cURL handle along with all of its preferences
curl_errno ( CurlHandle $handle):int | Return the last error number
curl_error ( CurlHandle $handle):string | Return a string containing the last error for the current session
curl_escape ( CurlHandle $handle, string $string):string|false | URL encodes the given string
curl_exec ( CurlHandle $handle):string|bool | Perform a cURL session
curl_getinfo ( CurlHandle $handle,  $option = refnull;):mixed | Get information regarding a specific transfer
curl_init (  $url = refnull;):CurlHandle|false | Initialize a cURL session
curl_multi_add_handle ( CurlMultiHandle $multi_handle, CurlHandle $handle):int | Add a normal cURL handle to a cURL multi handle
curl_multi_close ( CurlMultiHandle $multi_handle):void | Close a set of cURL handles
curl_multi_errno ( CurlMultiHandle $multi_handle):int | Return the last multi curl error number
curl_multi_exec ( CurlMultiHandle $multi_handle, int $still_running):int | Run the sub-connections of the current cURL handle
curl_multi_getcontent ( CurlHandle $handle):string|null | Return the content of a cURL handle if  is set
curl_multi_info_read ( CurlMultiHandle $multi_handle, int $queued_messages = refnull;):array|false | Get information about the current transfers
curl_multi_init ( ):CurlMultiHandle | Returns a new cURL multi handle
curl_multi_remove_handle ( CurlMultiHandle $multi_handle, CurlHandle $handle):int | Remove a multi handle from a set of cURL handles
curl_multi_select ( CurlMultiHandle $multi_handle, float $timeout = 1.0):int | Wait for activity on any curl_multi connection
curl_multi_setopt ( CurlMultiHandle $multi_handle, int $option, mixed $value):bool | Set a cURL multi option
curl_multi_strerror ( int $error_code):string|null | Return string describing error code
curl_pause ( CurlHandle $handle, int $flags):int | Pause and unpause a connection
curl_reset ( CurlHandle $handle):void | Reset all options of a libcurl session handle
curl_setopt_array ( CurlHandle $handle, array $options):bool | Set multiple options for a cURL transfer
curl_setopt ( CurlHandle $handle, int $option, mixed $value):bool | Set an option for a cURL transfer
curl_share_close ( CurlShareHandle $share_handle):void | Close a cURL share handle
curl_share_errno ( CurlShareHandle $share_handle):int | Return the last share curl error number
curl_share_init ( ):CurlShareHandle | Initialize a cURL share handle
curl_share_setopt ( CurlShareHandle $share_handle, int $option, mixed $value):bool | Set an option for a cURL share handle
curl_share_strerror ( int $error_code):string|null | Return string describing the given error code
curl_strerror ( int $error_code):string|null | Return string describing the given error code
curl_unescape ( CurlHandle $handle, string $string):string|false | Decodes the given URL encoded string
curl_upkeep ( CurlHandle $handle):bool | Performs any connection upkeep checks
curl_version ( ):array|false | Gets cURL version information
checkdate ( int $month, int $day, int $year):bool | Validate a Gregorian date
date_add ( ): | refAlias;
date_create_from_format ( ): | refAlias;
date_create_immutable_from_format ( ): | refAlias;
date_create_immutable ( string $datetime = "now",  $timezone = refnull;):DateTimeImmutable|false | create a new  object
date_create ( string $datetime = "now",  $timezone = refnull;):DateTime|false | create a new  object
date_date_set ( ): | refAlias;
date_default_timezone_get ( ):string | Gets the default timezone used by all date/time functions in a script
date_default_timezone_set ( string $timezoneId):bool | Sets the default timezone used by all date/time functions in a script
date_diff ( ): | refAlias;
date_format ( ): | refAlias;
date_get_last_errors ( ): | refAlias;
date_interval_create_from_date_string ( ): | refAlias;
date_interval_format ( ): | refAlias;
date_isodate_set ( ): | refAlias;
date_modify ( ): | refAlias;
date_offset_get ( ): | refAlias;
date_parse_from_format ( string $format, string $datetime):array | Get info about given date formatted according to the specified format
date_parse ( string $datetime):array | Returns associative array with detailed info about given date/time
date_sub ( ): | refAlias;
date_sun_info ( int $timestamp, float $latitude, float $longitude):array | Returns an array with information about sunset/sunrise and twilight begin/end
date_sunrise ( int $timestamp, int $returnFormat = SUNFUNCS_RET_STRING,  $latitude = refnull;,  $longitude = refnull;,  $zenith = refnull;,  $utcOffset = refnull;):string|int|float|false | Returns time of sunrise for a given day and location
date_sunset ( int $timestamp, int $returnFormat = SUNFUNCS_RET_STRING,  $latitude = refnull;,  $longitude = refnull;,  $zenith = refnull;,  $utcOffset = refnull;):string|int|float|false | Returns time of sunset for a given day and location
date_time_set ( ): | refAlias;
date_timestamp_get ( ): | refAlias;
date_timestamp_set ( ): | refAlias;
date_timezone_get ( ): | refAlias;
date_timezone_set ( ): | refAlias;
date ( string $format,  $timestamp = refnull;):string | Format a Unix timestamp
getdate (  $timestamp = refnull;):array | Get date/time information
gettimeofday ( bool $as_float = reffalse;):array|float | Get current time
gmdate ( string $format,  $timestamp = refnull;):string | Format a GMT/UTC date/time
gmmktime ( int $hour,  $minute = refnull;,  $second = refnull;,  $month = refnull;,  $day = refnull;,  $year = refnull;):int|false | Get Unix timestamp for a GMT date
gmstrftime ( string $format,  $timestamp = refnull;):string|false | Format a GMT/UTC time/date according to locale settings
idate ( string $format,  $timestamp = refnull;):int|false | Format a local time/date part as integer
localtime (  $timestamp = refnull;, bool $associative = reffalse;):array | Get the local time
microtime ( bool $as_float = reffalse;):string|float | Return current Unix timestamp with microseconds
mktime ( int $hour,  $minute = refnull;,  $second = refnull;,  $month = refnull;,  $day = refnull;,  $year = refnull;):int|false | Get Unix timestamp for a date
strftime ( string $format,  $timestamp = refnull;):string|false | Format a local time/date according to locale settings
strptime ( string $format,  $timestamp = refnull;):string|false | Format a local time/date according to locale settings
strtotime ( string $datetime,  $baseTimestamp = refnull;):int|false | Parse about any English textual datetime description into a Unix timestamp
time ( ):int | Return current Unix timestamp
timezone_abbreviations_list ( ): | refAlias;
timezone_identifiers_list ( ): | refAlias;
timezone_location_get ( ): | refAlias;
timezone_name_from_abbr ( string $abbr, int $utcOffset = -1, int $isDST = -1):string|false | Returns a timezone name by guessing from abbreviation and UTC offset
timezone_name_get ( ): | refAlias;
timezone_offset_get ( ): | refAlias;
timezone_open ( ): | refAlias;
timezone_transitions_get ( ): | refAlias;
timezone_version_get ( ):string | Gets the version of the timezonedb
dba_close ( resource $dba):void | Close a DBA database
dba_delete (  $key, resource $dba):bool | Delete DBA entry specified by key
dba_exists (  $key, resource $dba):bool | Check whether key exists
dba_fetch (  $key, resource $dba, int $skip = 0):string|false | Fetch data specified by key
dba_firstkey ( resource $dba):string|false | Fetch first key
dba_handlers ( bool $full_info = reffalse;):array | List all the handlers available
dba_insert (  $key, string $value, resource $dba):bool | Insert entry
dba_key_split (  $key):array|false | Splits a key in string representation into array representation
dba_list ( ):array | List all open database files
dba_nextkey ( resource $dba):string|false | Fetch next key
dba_open ( string $path, string $mode,  $handler = refnull;, int $permission = 0644, int $map_size = 0,  $flags = refnull;):resource|false | Open database
dba_optimize ( resource $dba):bool | Optimize database
dba_popen ( string $path, string $mode,  $handler = refnull;, int $permission = 0644, int $map_size = 0,  $flags = refnull;):resource|false | Open database persistently
dba_replace (  $key, string $value, resource $dba):bool | Replace or insert entry
dba_sync ( resource $dba):bool | Synchronize database
dbase_add_record ( resource $database, array $data):bool | Adds a record to a database
dbase_close ( resource $database):bool | Closes a database
dbase_create ( string $path, array $fields, int $type = DBASE_TYPE_DBASE):resource | Creates a database
dbase_delete_record ( resource $database, int $number):bool | Deletes a record from a database
dbase_get_header_info ( resource $database):array | Gets the header info of a database
dbase_get_record_with_names ( resource $database, int $number):array | Gets a record from a database as an associative array
dbase_get_record ( resource $database, int $number):array | Gets a record from a database as an indexed array
dbase_numfields ( resource $database):int | Gets the number of fields of a database
dbase_numrecords ( resource $database):int | Gets the number of records in a database
dbase_open ( string $path, int $mode):resource|false | Opens a database
dbase_pack ( resource $database):bool | Packs a database
dbase_replace_record ( resource $database, array $data, int $number):bool | Replaces a record in a database
dio_close ( resource $fd):void | Closes the file descriptor given by fd
dio_fcntl ( resource $fd, int $cmd, mixed $args):mixed | Performs a c library fcntl on fd
dio_open ( string $filename, int $flags, int $mode = 0):resource | Opens a file (creating it if necessary) at a lower level than the    C library input/ouput stream functions allow
dio_read ( resource $fd, int $len = 1024):string | Reads bytes from a file descriptor
dio_seek ( resource $fd, int $pos, int $whence = SEEK_SET):int | Seeks to pos on fd from whence
dio_stat ( resource $fd):array | Gets stat information about the file descriptor fd
dio_tcsetattr ( resource $fd, array $options):bool | Sets terminal attributes and baud rate for a serial port
dio_truncate ( resource $fd, int $offset):bool | Truncates file descriptor fd to offset bytes
dio_write ( resource $fd, string $data, int $len = 0):int | Writes data to fd with optional truncation at length
chdir ( string $directory):bool | Change directory
chroot ( string $directory):bool | Change the root directory
closedir (  $dir_handle = refnull;):void | Close directory handle
dir ( string $directory,  $context = refnull;):Directory|false | Return an instance of the Directory class
getcwd ( ):string|false | Gets the current working directory
opendir ( string $directory,  $context = refnull;):resource|false | Open directory handle
readdir (  $dir_handle = refnull;):string|false | Read entry from directory handle
rewinddir (  $dir_handle = refnull;):void | Rewind directory handle
scandir ( string $directory, int $sorting_order = SCANDIR_SORT_ASCENDING,  $context = refnull;):array|false | List files and directories inside the specified path
dom_import_simplexml ( object $node):DOMElement | Gets a  object from a     object
eio_busy ( int $delay, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Artificially increase load. Could be useful in tests,   benchmarking
eio_cancel ( resource $req):void | Cancels a request
eio_chmod ( string $path, int $mode, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Change file/directory permissions
eio_chown ( string $path, int $uid, int $gid = -1, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Change file/directory permissions
eio_close ( mixed $fd, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Close file
eio_custom ( callable $execute, int $pri, callable $callback, mixed $data = NULL):resource | Execute custom request like any other  call
eio_dup2 ( mixed $fd, mixed $fd2, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Duplicate a file descriptor
eio_event_loop ( ):bool | Polls libeio until all requests proceeded
eio_fallocate ( mixed $fd, int $mode, int $offset, int $length, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Allows the caller to directly manipulate the allocated disk   space for a file
eio_fchmod ( mixed $fd, int $mode, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Change file permissions
eio_fchown ( mixed $fd, int $uid, int $gid = -1, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Change file ownership
eio_fdatasync ( mixed $fd, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Synchronize a file's in-core state with storage device
eio_fstat ( mixed $fd, int $pri, callable $callback, mixed $data):resource | Get file status
eio_fstatvfs ( mixed $fd, int $pri, callable $callback, mixed $data):resource | Get file system statistics
eio_fsync ( mixed $fd, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Synchronize a file's in-core state with storage device
eio_ftruncate ( mixed $fd, int $offset = 0, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Truncate a file
eio_futime ( mixed $fd, float $atime, float $mtime, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Change file last access and modification times
eio_get_event_stream ( ):mixed | Get stream representing a variable used in internal communications with libeio
eio_get_last_error ( resource $req):string | Returns string describing the last error associated with a request resource
eio_grp_add ( resource $grp, resource $req):void | Adds a request to the request group
eio_grp_cancel ( resource $grp):void | Cancels a request group
eio_grp_limit ( resource $grp, int $limit):void | Set group limit
eio_grp ( callable $callback, string $data = NULL):resource | Creates a request group
eio_init ( ):void | (Re-)initialize Eio
eio_link ( string $path, string $new_path, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Create a hardlink for file
eio_lstat ( string $path, int $pri, callable $callback, mixed $data = NULL):resource | Get file status
eio_mkdir ( string $path, int $mode, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Create directory
eio_mknod ( string $path, int $mode, int $dev, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Create a special or ordinary file
eio_nop ( int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Does nothing, except go through the whole request cycle
eio_npending ( ):int | Returns number of finished, but unhandled requests
eio_nready ( ):int | Returns number of not-yet handled requests
eio_nreqs ( ):int | Returns number of requests to be processed
eio_nthreads ( ):int | Returns number of threads currently in use
eio_open ( string $path, int $flags, int $mode, int $pri, callable $callback, mixed $data = NULL):resource | Opens a file
eio_poll ( ):int | Can be to be called whenever there are pending requests that need finishing
eio_read ( mixed $fd, int $length, int $offset, int $pri, callable $callback, mixed $data = NULL):resource | Read from a file descriptor at given offset
eio_readahead ( mixed $fd, int $offset, int $length, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Perform file readahead into page cache
eio_readdir ( string $path, int $flags, int $pri, callable $callback, string $data = NULL):resource | Reads through a whole directory
eio_readlink ( string $path, int $pri, callable $callback, mixed $data = NULL):resource | Read value of a symbolic link
eio_realpath ( string $path, int $pri, callable $callback, string $data = NULL):resource | Get the canonicalized absolute pathname
eio_rename ( string $path, string $new_path, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Change the name or location of a file
eio_rmdir ( string $path, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Remove a directory
eio_seek ( mixed $fd, int $offset, int $whence, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Repositions the offset of the open file associated with the  argument to the argument  according to the directive
eio_sendfile ( mixed $out_fd, mixed $in_fd, int $offset, int $length, int $pri, callable $callback, string $data):resource | Transfer data between file descriptors
eio_set_max_idle ( int $nthreads):void | Set maximum number of idle threads
eio_set_max_parallel ( int $nthreads):void | Set maximum parallel threads
eio_set_max_poll_reqs ( int $nreqs):void | Set maximum number of requests processed in a poll
eio_set_max_poll_time ( float $nseconds):void | Set maximum poll time
eio_set_min_parallel ( string $nthreads):void | Set minimum parallel thread number
eio_stat ( string $path, int $pri, callable $callback, mixed $data = NULL):resource | Get file status
eio_statvfs ( string $path, int $pri, callable $callback, mixed $data):resource | Get file system statistics
eio_symlink ( string $path, string $new_path, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Create a symbolic link
eio_sync_file_range ( mixed $fd, int $offset, int $nbytes, int $flags, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Sync a file segment with disk
eio_sync ( int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Commit buffer cache to disk
eio_syncfs ( mixed $fd, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Calls Linux' syncfs syscall, if available
eio_truncate ( string $path, int $offset = 0, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Truncate a file
eio_unlink ( string $path, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Delete a name and possibly the file it refers to
eio_utime ( string $path, float $atime, float $mtime, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Change file last access and modification times
eio_write ( mixed $fd, string $str, int $length = 0, int $offset = 0, int $pri = EIO_PRI_DEFAULT, callable $callback = NULL, mixed $data = NULL):resource | Write to file
enchant_broker_describe ( EnchantBroker $broker):array | Enumerates the Enchant providers
enchant_broker_dict_exists ( EnchantBroker $broker, string $tag):bool | Whether a dictionary exists or not. Using non-empty tag
enchant_broker_free_dict ( EnchantDictionary $dictionary):bool | Free a dictionary resource
enchant_broker_free ( EnchantBroker $broker):bool | Free the broker resource and its dictionaries
enchant_broker_get_dict_path ( EnchantBroker $broker, int $type):string|false | Get the directory path for a given backend
enchant_broker_get_error ( EnchantBroker $broker):string|false | Returns the last error of the broker
enchant_broker_init ( ):EnchantBroker|false | Create a new broker object capable of requesting
enchant_broker_list_dicts ( EnchantBroker $broker):array | Returns a list of available dictionaries
enchant_broker_request_dict ( EnchantBroker $broker, string $tag):EnchantDictionary|false | Create a new dictionary using a tag
enchant_broker_request_pwl_dict ( EnchantBroker $broker, string $filename):EnchantDictionary|false | Creates a dictionary using a PWL file
enchant_broker_set_dict_path ( EnchantBroker $broker, int $type, string $path):bool | Set the directory path for a given backend
enchant_broker_set_ordering ( EnchantBroker $broker, string $tag, string $ordering):bool | Declares a preference of dictionaries to use for the language
enchant_dict_add_to_personal ( EnchantDictionary $dictionary, string $word):void | Add a word to personal word list
enchant_dict_add_to_session ( EnchantDictionary $dictionary, string $word):void | Add 'word' to this spell-checking session
enchant_dict_add ( EnchantDictionary $dictionary, string $word):void | Add a word to personal word list
enchant_dict_check ( EnchantDictionary $dictionary, string $word):bool | Check whether a word is correctly spelled or not
enchant_dict_describe ( EnchantDictionary $dictionary):array | Describes an individual dictionary
enchant_dict_get_error ( EnchantDictionary $dictionary):string|false | Returns the last error of the current spelling-session
enchant_dict_is_added ( EnchantDictionary $dictionary, string $word):bool | Whether or not 'word' exists in this spelling-session
enchant_dict_is_in_session ( EnchantDictionary $dictionary, string $word):bool | Whether or not 'word' exists in this spelling-session
enchant_dict_quick_check ( EnchantDictionary $dictionary, string $word, array $suggestions = refnull;):bool | Check the word is correctly spelled and provide suggestions
enchant_dict_store_replacement ( EnchantDictionary $dictionary, string $misspelled, string $correct):void | Add a correction for a word
enchant_dict_suggest ( EnchantDictionary $dictionary, string $word):array | Will return a list of values if any of those pre-conditions are not met
debug_backtrace ( int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT, int $limit = 0):array | Generates a backtrace
debug_print_backtrace ( int $options = 0, int $limit = 0):void | Prints a backtrace
error_clear_last ( ):void | Clear the most recent error
error_get_last ( ):array|null | Get the last occurred error
error_log ( string $message, int $message_type = 0,  $destination = refnull;,  $additional_headers = refnull;):bool | Send an error message to the defined error handling routines
error_reporting (  $error_level = refnull;):int | Sets which PHP errors are reported
restore_error_handler ( ):true | Restores the previous error handler function
restore_exception_handler ( ):true | Restores the previously defined exception handler function
set_error_handler (  $callback, int $error_levels = E_ALL):callable|null | Sets a user-defined error handler function
set_exception_handler (  $callback):callable|null | Sets a user-defined exception handler function
trigger_error ( string $message, int $error_level = E_USER_NOTICE):bool | Generates a user-level error/warning/notice message
user_error ( string $message, int $error_level = E_USER_NOTICE):bool | Generates a user-level error/warning/notice message
escapeshellarg ( string $arg):string | Escape a string to be used as a shell argument
escapeshellcmd ( string $command):string | Escape shell metacharacters
exec ( string $command, array $output = refnull;, int $result_code = refnull;):string|false | Execute an external program
passthru ( string $command, int $result_code = refnull;):false|null | Execute an external program and display raw output
proc_close (  $command, array $descriptor_spec, array $pipes,  $cwd = refnull;,  $env_vars = refnull;,  $options = refnull;):resource|false | Execute a command and open file pointers for input/output
proc_get_status (  $command, array $descriptor_spec, array $pipes,  $cwd = refnull;,  $env_vars = refnull;,  $options = refnull;):resource|false | Execute a command and open file pointers for input/output
proc_nice ( int $priority):bool | Change the priority of the current process
proc_open (  $command, array $descriptor_spec, array $pipes,  $cwd = refnull;,  $env_vars = refnull;,  $options = refnull;):resource|false | Execute a command and open file pointers for input/output
proc_terminate ( resource $process, int $signal = 15):bool | Kills a process opened by proc_open
shell_exec ( string $command):string|false|null | Execute command via shell and return the complete output as a string
system ( string $command, int $result_code = refnull;):string|false | Execute an external program and display the output
exif_imagetype ( string $filename):int|false | Determine the type of an image
exif_read_data (  $file,  $required_sections = refnull;, bool $as_arrays = reffalse;, bool $read_thumbnail = reffalse;):array|false | Reads the  headers from an image file
exif_tagname ( int $index):string|false | Get the header name for an index
exif_thumbnail (  $file, int $width = refnull;, int $height = refnull;, int $image_type = refnull;):string|false | Retrieve the embedded thumbnail of an image
read_exif_data (  $file,  $required_sections = refnull;, bool $as_arrays = reffalse;, bool $read_thumbnail = reffalse;):array|false | Reads the  headers from an image file
expect_expectl ( resource $expect, array $cases, array $match):int | Waits until the output from a process matches one   of the patterns, a specified time period has passed, or an  is seen
expect_popen ( string $command):resource | Execute command via Bourne shell, and open the PTY stream to   the process
fann_cascadetrain_on_data ( resource $ann, resource $data, int $max_neurons, int $neurons_between_reports, float $desired_error):bool | Trains on an entire dataset, for a period of time using the Cascade2 training algorithm
fann_cascadetrain_on_file ( resource $ann, string $filename, int $max_neurons, int $neurons_between_reports, float $desired_error):bool | Trains on an entire dataset read from file, for a period of time using the Cascade2 training algorithm
fann_clear_scaling_params ( resource $ann):bool | Clears scaling parameters
fann_copy ( resource $ann):resource | Creates a copy of a fann structure
fann_create_from_file ( string $configuration_file):resource | Constructs a backpropagation neural network from a configuration file
fann_create_shortcut_array ( int $num_layers, array $layers):resource | Creates a standard backpropagation neural network which is not fully connectected and has shortcut connections
fann_create_shortcut ( int $num_layers, int $num_neurons1, int $num_neurons2, int $num_neuronsN):resource | Creates a standard backpropagation neural network which is not fully connectected and has shortcut connections
fann_create_sparse_array ( float $connection_rate, int $num_layers, array $layers):resource | Creates a standard backpropagation neural network, which is not fully connected using an array of layer sizes
fann_create_sparse ( float $connection_rate, int $num_layers, int $num_neurons1, int $num_neurons2, int $num_neuronsN):resource | Creates a standard backpropagation neural network, which is not fully connected
fann_create_standard_array ( int $num_layers, array $layers):resource | Creates a standard fully connected backpropagation neural network using an array of layer sizes
fann_create_standard ( int $num_layers, int $num_neurons1, int $num_neurons2, int $num_neuronsN):resource | Creates a standard fully connected backpropagation neural network
fann_create_train_from_callback ( int $num_data, int $num_input, int $num_output, callable $user_function):resource | Creates the training data struct from a user supplied function
fann_create_train ( int $num_data, int $num_input, int $num_output):resource | Creates an empty training data struct
fann_descale_input ( resource $ann, array $input_vector):bool | Scale data in input vector after get it from ann based on previously calculated parameters
fann_descale_output ( resource $ann, array $output_vector):bool | Scale data in output vector after get it from ann based on previously calculated parameters
fann_descale_train ( resource $ann, resource $train_data):bool | Descale input and output data based on previously calculated parameters
fann_destroy_train ( resource $train_data):bool | Destructs the training data
fann_destroy ( resource $ann):bool | Destroys the entire network and properly freeing all the associated memory
fann_duplicate_train_data ( resource $data):resource | Returns an exact copy of a fann train data
fann_get_activation_function ( resource $ann, int $layer, int $neuron):int | Returns the activation function
fann_get_activation_steepness ( resource $ann, int $layer, int $neuron):float | Returns the activation steepness for supplied neuron and layer number
fann_get_bias_array ( resource $ann):array | Get the number of bias in each layer in the network
fann_get_bit_fail_limit ( resource $ann):float | Returns the bit fail limit used during training
fann_get_bit_fail ( resource $ann):int | The number of fail bits
fann_get_cascade_activation_functions_count ( resource $ann):int | Returns the number of cascade activation functions
fann_get_cascade_activation_functions ( resource $ann):array | Returns the cascade activation functions
fann_get_cascade_activation_steepnesses_count ( resource $ann):int | The number of activation steepnesses
fann_get_cascade_activation_steepnesses ( resource $ann):array | Returns the cascade activation steepnesses
fann_get_cascade_candidate_change_fraction ( resource $ann):float | Returns the cascade candidate change fraction
fann_get_cascade_candidate_limit ( resource $ann):float | Return the candidate limit
fann_get_cascade_candidate_stagnation_epochs ( resource $ann):int | Returns the number of cascade candidate stagnation epochs
fann_get_cascade_max_cand_epochs ( resource $ann):int | Returns the maximum candidate epochs
fann_get_cascade_max_out_epochs ( resource $ann):int | Returns the maximum out epochs
fann_get_cascade_min_cand_epochs ( resource $ann):int | Returns the minimum candidate epochs
fann_get_cascade_min_out_epochs ( resource $ann):int | Returns the minimum out epochs
fann_get_cascade_num_candidate_groups ( resource $ann):int | Returns the number of candidate groups
fann_get_cascade_num_candidates ( resource $ann):int | Returns the number of candidates used during training
fann_get_cascade_output_change_fraction ( resource $ann):float | Returns the cascade output change fraction
fann_get_cascade_output_stagnation_epochs ( resource $ann):int | Returns the number of cascade output stagnation epochs
fann_get_cascade_weight_multiplier ( resource $ann):float | Returns the weight multiplier
fann_get_connection_array ( resource $ann):array | Get connections in the network
fann_get_connection_rate ( resource $ann):float | Get the connection rate used when the network was created
fann_get_errno ( resource $errdat):int | Returns the last error number
fann_get_errstr ( resource $errdat):string | Returns the last errstr
fann_get_layer_array ( resource $ann):array | Get the number of neurons in each layer in the network
fann_get_learning_momentum ( resource $ann):float | Returns the learning momentum
fann_get_learning_rate ( resource $ann):float | Returns the learning rate
fann_get_MSE ( resource $ann):float | Reads the mean square error from the network
fann_get_network_type ( resource $ann):int | Get the type of neural network it was created as
fann_get_num_input ( resource $ann):int | Get the number of input neurons
fann_get_num_layers ( resource $ann):int | Get the number of layers in the neural network
fann_get_num_output ( resource $ann):int | Get the number of output neurons
fann_get_quickprop_decay ( resource $ann):float | Returns the decay which is a factor that weights should decrease in each iteration during quickprop training
fann_get_quickprop_mu ( resource $ann):float | Returns the mu factor
fann_get_rprop_decrease_factor ( resource $ann):float | Returns the increase factor used during RPROP training
fann_get_rprop_delta_max ( resource $ann):float | Returns the maximum step-size
fann_get_rprop_delta_min ( resource $ann):float | Returns the minimum step-size
fann_get_rprop_delta_zero ( resource $ann):int | Returns the initial step-size
fann_get_rprop_increase_factor ( resource $ann):float | Returns the increase factor used during RPROP training
fann_get_sarprop_step_error_shift ( resource $ann):float | Returns the sarprop step error shift
fann_get_sarprop_step_error_threshold_factor ( resource $ann):float | Returns the sarprop step error threshold factor
fann_get_sarprop_temperature ( resource $ann):float | Returns the sarprop temperature
fann_get_sarprop_weight_decay_shift ( resource $ann):float | Returns the sarprop weight decay shift
fann_get_total_connections ( resource $ann):int | Get the total number of connections in the entire network
fann_get_total_neurons ( resource $ann):int | Get the total number of neurons in the entire network
fann_get_train_error_function ( resource $ann):int | Returns the error function used during training
fann_get_train_stop_function ( resource $ann):int | Returns the stop function used during training
fann_get_training_algorithm ( resource $ann):int | Returns the training algorithm
fann_init_weights ( resource $ann, resource $train_data):bool | Initialize the weights using Widrow + Nguyen’s algorithm
fann_length_train_data ( resource $data):int | Returns the number of training patterns in the train data
fann_merge_train_data ( resource $data1, resource $data2):resource | Merges the train data
fann_num_input_train_data ( resource $data):int | Returns the number of inputs in each of the training patterns in the train data
fann_num_output_train_data ( resource $data):int | Returns the number of outputs in each of the training patterns in the train data
fann_print_error ( resource $errdat):void | Prints the error string
fann_randomize_weights ( resource $ann, float $min_weight, float $max_weight):bool | Give each connection a random weight between min_weight and max_weight
fann_read_train_from_file ( string $filename):resource | Reads a file that stores training data
fann_reset_errno ( resource $errdat):void | Resets the last error number
fann_reset_errstr ( resource $errdat):void | Resets the last error string
fann_reset_MSE ( string $ann):bool | Resets the mean square error from the network
fann_run ( resource $ann, array $input):array | Will run input through the neural network
fann_save_train ( resource $data, string $file_name):bool | Save the training structure to a file
fann_save ( resource $ann, string $configuration_file):bool | Saves the entire network to a configuration file
fann_scale_input_train_data ( resource $train_data, float $new_min, float $new_max):bool | Scales the inputs in the training data to the specified range
fann_scale_input ( resource $ann, array $input_vector):bool | Scale data in input vector before feed it to ann based on previously calculated parameters
fann_scale_output_train_data ( resource $train_data, float $new_min, float $new_max):bool | Scales the outputs in the training data to the specified range
fann_scale_output ( resource $ann, array $output_vector):bool | Scale data in output vector before feed it to ann based on previously calculated parameters
fann_scale_train_data ( resource $train_data, float $new_min, float $new_max):bool | Scales the inputs and outputs in the training data to the specified range
fann_scale_train ( resource $ann, resource $train_data):bool | Scale input and output data based on previously calculated parameters
fann_set_activation_function_hidden ( resource $ann, int $activation_function):bool | Sets the activation function for all of the hidden layers
fann_set_activation_function_layer ( resource $ann, int $activation_function, int $layer):bool | Sets the activation function for all the neurons in the supplied layer
fann_set_activation_function_output ( resource $ann, int $activation_function):bool | Sets the activation function for the output layer
fann_set_activation_function ( resource $ann, int $activation_function, int $layer, int $neuron):bool | Sets the activation function for supplied neuron and layer
fann_set_activation_steepness_hidden ( resource $ann, float $activation_steepness):bool | Sets the steepness of the activation steepness for all neurons in the all hidden layers
fann_set_activation_steepness_layer ( resource $ann, float $activation_steepness, int $layer):bool | Sets the activation steepness for all of the neurons in the supplied layer number
fann_set_activation_steepness_output ( resource $ann, float $activation_steepness):bool | Sets the steepness of the activation steepness in the output layer
fann_set_activation_steepness ( resource $ann, float $activation_steepness, int $layer, int $neuron):bool | Sets the activation steepness for supplied neuron and layer number
fann_set_bit_fail_limit ( resource $ann, float $bit_fail_limit):bool | Set the bit fail limit used during training
fann_set_callback ( resource $ann, callable $callback):bool | Sets the callback function for use during training
fann_set_cascade_activation_functions ( resource $ann, array $cascade_activation_functions):bool | Sets the array of cascade candidate activation functions
fann_set_cascade_activation_steepnesses ( resource $ann, array $cascade_activation_steepnesses_count):bool | Sets the array of cascade candidate activation steepnesses
fann_set_cascade_candidate_change_fraction ( resource $ann, float $cascade_candidate_change_fraction):bool | Sets the cascade candidate change fraction
fann_set_cascade_candidate_limit ( resource $ann, float $cascade_candidate_limit):bool | Sets the candidate limit
fann_set_cascade_candidate_stagnation_epochs ( resource $ann, int $cascade_candidate_stagnation_epochs):bool | Sets the number of cascade candidate stagnation epochs
fann_set_cascade_max_cand_epochs ( resource $ann, int $cascade_max_cand_epochs):bool | Sets the max candidate epochs
fann_set_cascade_max_out_epochs ( resource $ann, int $cascade_max_out_epochs):bool | Sets the maximum out epochs
fann_set_cascade_min_cand_epochs ( resource $ann, int $cascade_min_cand_epochs):bool | Sets the min candidate epochs
fann_set_cascade_min_out_epochs ( resource $ann, int $cascade_min_out_epochs):bool | Sets the minimum out epochs
fann_set_cascade_num_candidate_groups ( resource $ann, int $cascade_num_candidate_groups):bool | Sets the number of candidate groups
fann_set_cascade_output_change_fraction ( resource $ann, float $cascade_output_change_fraction):bool | Sets the cascade output change fraction
fann_set_cascade_output_stagnation_epochs ( resource $ann, int $cascade_output_stagnation_epochs):bool | Sets the number of cascade output stagnation epochs
fann_set_cascade_weight_multiplier ( resource $ann, float $cascade_weight_multiplier):bool | Sets the weight multiplier
fann_set_error_log ( resource $errdat, string $log_file):void | Sets where the errors are logged to
fann_set_input_scaling_params ( resource $ann, resource $train_data, float $new_input_min, float $new_input_max):bool | Calculate input scaling parameters for future use based on training data
fann_set_learning_momentum ( resource $ann, float $learning_momentum):bool | Sets the learning momentum
fann_set_learning_rate ( resource $ann, float $learning_rate):bool | Sets the learning rate
fann_set_output_scaling_params ( resource $ann, resource $train_data, float $new_output_min, float $new_output_max):bool | Calculate output scaling parameters for future use based on training data
fann_set_quickprop_decay ( resource $ann, float $quickprop_decay):bool | Sets the quickprop decay factor
fann_set_quickprop_mu ( resource $ann, float $quickprop_mu):bool | Sets the quickprop mu factor
fann_set_rprop_decrease_factor ( resource $ann, float $rprop_decrease_factor):bool | Sets the decrease factor used during RPROP training
fann_set_rprop_delta_max ( resource $ann, float $rprop_delta_max):bool | Sets the maximum step-size
fann_set_rprop_delta_min ( resource $ann, float $rprop_delta_min):bool | Sets the minimum step-size
fann_set_rprop_delta_zero ( resource $ann, float $rprop_delta_zero):bool | Sets the initial step-size
fann_set_rprop_increase_factor ( resource $ann, float $rprop_increase_factor):bool | Sets the increase factor used during RPROP training
fann_set_sarprop_step_error_shift ( resource $ann, float $sarprop_step_error_shift):bool | Sets the sarprop step error shift
fann_set_sarprop_step_error_threshold_factor ( resource $ann, float $sarprop_step_error_threshold_factor):bool | Sets the sarprop step error threshold factor
fann_set_sarprop_temperature ( resource $ann, float $sarprop_temperature):bool | Sets the sarprop temperature
fann_set_sarprop_weight_decay_shift ( resource $ann, float $sarprop_weight_decay_shift):bool | Sets the sarprop weight decay shift
fann_set_scaling_params ( resource $ann, resource $train_data, float $new_input_min, float $new_input_max, float $new_output_min, float $new_output_max):bool | Calculate input and output scaling parameters for future use based on training data
fann_set_train_error_function ( resource $ann, int $error_function):bool | Sets the error function used during training
fann_set_train_stop_function ( resource $ann, int $stop_function):bool | Sets the stop function used during training
fann_set_training_algorithm ( resource $ann, int $training_algorithm):bool | Sets the training algorithm
fann_set_weight_array ( resource $ann, array $connections):bool | Set connections in the network
fann_set_weight ( resource $ann, int $from_neuron, int $to_neuron, float $weight):bool | Set a connection in the network
fann_shuffle_train_data ( resource $train_data):bool | Shuffles training data, randomizing the order
fann_subset_train_data ( resource $data, int $pos, int $length):resource | Returns an copy of a subset of the train data
fann_test_data ( resource $ann, resource $data):float | Test a set of training data and calculates the MSE for the training data
fann_test ( resource $ann, array $input, array $desired_output):array | Test with a set of inputs, and a set of desired outputs
fann_train_epoch ( resource $ann, resource $data):float | Train one epoch with a set of training data
fann_train_on_data ( resource $ann, resource $data, int $max_epochs, int $epochs_between_reports, float $desired_error):bool | Trains on an entire dataset for a period of time
fann_train_on_file ( resource $ann, string $filename, int $max_epochs, int $epochs_between_reports, float $desired_error):bool | Trains on an entire dataset, which is read from file, for a period of time
fann_train ( resource $ann, array $input, array $desired_output):bool | Train one iteration with a set of inputs, and a set of desired outputs
fdf_add_doc_javascript ( resource $fdf_document, string $script_name, string $script_code):bool | Adds javascript code to the FDF document
fdf_add_template ( resource $fdf_document, int $newpage, string $filename, string $template, int $rename):bool | Adds a template into the FDF document
fdf_close ( resource $fdf_document):void | Close an FDF document
fdf_create ( ):resource | Create a new FDF document
fdf_enum_values ( resource $fdf_document, callable $function, mixed $userdata):bool | Call a user defined function for each document value
fdf_errno ( ):int | Return error code for last fdf operation
fdf_error ( int $error_code = -1):string | Return error description for FDF error code
fdf_get_ap ( resource $fdf_document, string $field, int $face, string $filename):bool | Get the appearance of a field
fdf_get_attachment ( resource $fdf_document, string $fieldname, string $savepath):array | Extracts uploaded file embedded in the FDF
fdf_get_encoding ( resource $fdf_document):string | Get the value of the /Encoding key
fdf_get_file ( resource $fdf_document):string | Get the value of the /F key
fdf_get_flags ( resource $fdf_document, string $fieldname, int $whichflags):int | Gets the flags of a field
fdf_get_opt ( resource $fdf_document, string $fieldname, int $element = -1):mixed | Gets a value from the opt array of a field
fdf_get_status ( resource $fdf_document):string | Get the value of the /STATUS key
fdf_get_value ( resource $fdf_document, string $fieldname, int $which = -1):mixed | Get the value of a field
fdf_get_version ( resource $fdf_document):string | Gets version number for FDF API or file
fdf_header ( ):void | Sets FDF-specific output headers
fdf_next_field_name ( resource $fdf_document, string $fieldname):string | Get the next field name
fdf_open_string ( string $fdf_data):resource | Read a FDF document from a string
fdf_open ( string $filename):resource | Open a FDF document
fdf_remove_item ( resource $fdf_document, string $fieldname, int $item):bool | Sets target frame for form
fdf_save_string ( resource $fdf_document):string | Returns the FDF document as a string
fdf_save ( resource $fdf_document, string $filename):bool | Save a FDF document
fdf_set_ap ( resource $fdf_document, string $field_name, int $face, string $filename, int $page_number):bool | Set the appearance of a field
fdf_set_encoding ( resource $fdf_document, string $encoding):bool | Sets FDF character encoding
fdf_set_file ( resource $fdf_document, string $url, string $target_frame):bool | Set PDF document to display FDF data in
fdf_set_flags ( resource $fdf_document, string $fieldname, int $whichFlags, int $newFlags):bool | Sets a flag of a field
fdf_set_javascript_action ( resource $fdf_document, string $fieldname, int $trigger, string $script):bool | Sets an javascript action of a field
fdf_set_on_import_javascript ( resource $fdf_document, string $script, bool $before_data_import):bool | Adds javascript code to be executed when Acrobat opens the FDF
fdf_set_opt ( resource $fdf_document, string $fieldname, int $element, string $str1, string $str2):bool | Sets an option of a field
fdf_set_status ( resource $fdf_document, string $status):bool | Set the value of the /STATUS key
fdf_set_submit_form_action ( resource $fdf_document, string $fieldname, int $trigger, string $script, int $flags):bool | Sets a submit form action of a field
fdf_set_target_frame ( resource $fdf_document, string $frame_name):bool | Set target frame for form display
fdf_set_value ( resource $fdf_document, string $fieldname, mixed $value, int $isName):bool | Set the value of a field
fdf_set_version ( resource $fdf_document, string $version):bool | Sets version number for a FDF file
finfo_buffer ( finfo $finfo, string $string, int $flags = FILEINFO_NONE,  $context = refnull;):string|false | Return information about a string buffer
finfo_close ( finfo $finfo):bool | Close finfo instance
finfo_file ( finfo $finfo, string $filename, int $flags = FILEINFO_NONE,  $context = refnull;):string|false | Return information about a file
finfo_open ( int $flags = FILEINFO_NONE,  $magic_database = refnull;):finfo|false | Create a new finfo instance
finfo_set_flags ( finfo $finfo, int $flags):bool | Set libmagic configuration options
mime_content_type (  $filename):string|false | Detect MIME Content-type for a file
basename ( string $path, string $suffix = ""):string | Returns trailing name component of path
chgrp ( string $filename,  $group):bool | Changes file group
chmod ( string $filename, int $permissions):bool | Changes file mode
chown ( string $filename,  $user):bool | Changes file owner
clearstatcache ( bool $clear_realpath_cache = reffalse;, string $filename = ""):void | Clears file status cache
copy ( string $from, string $to,  $context = refnull;):bool | Copies file
delete ( string $filename,  $context = refnull;):bool | Deletes a file
dirname ( string $path, int $levels = 1):string | Returns a parent directory's path
disk_free_space ( string $directory):float|false | Returns available space on filesystem or disk partition
disk_total_space ( string $directory):float|false | Returns the total size of a filesystem or disk partition
diskfreespace ( string $directory):float|false | Returns available space on filesystem or disk partition
fclose ( resource $stream):bool | Closes an open file pointer
fdatasync ( resource $stream):bool | Synchronizes data (but not meta-data) to the file
feof ( resource $stream):bool | Tests for end-of-file on a file pointer
fflush ( resource $stream):bool | Flushes the output to a file
fgetc ( resource $stream):string|false | Gets character from file pointer
fgetcsv ( resource $stream,  $length = refnull;, string $separator = ",", string $enclosure = "\"", string $escape = "\\"):array|false | Gets line from file pointer and parse for CSV fields
fgets ( resource $stream,  $length = refnull;):string|false | Gets line from file pointer
fgetss ( resource $handle, int $length, string $allowable_tags):string | Gets line from file pointer and strip HTML tags
file_exists ( string $filename):bool | Checks whether a file or directory exists
file_get_contents ( string $filename, bool $use_include_path = reffalse;,  $context = refnull;, int $offset = 0,  $length = refnull;):string|false | Reads entire file into a string
file_put_contents ( string $filename, mixed $data, int $flags = 0,  $context = refnull;):int|false | Write data to a file
file ( string $filename, int $flags = 0,  $context = refnull;):array|false | Reads entire file into an array
fileatime ( string $filename):int|false | Gets last access time of file
filectime ( string $filename):int|false | Gets inode change time of file
filegroup ( string $filename):int|false | Gets file group
fileinode ( string $filename):int|false | Gets file inode
filemtime ( string $filename):int|false | Gets file modification time
fileowner ( string $filename):int|false | Gets file owner
fileperms ( string $filename):int|false | Gets file permissions
filesize ( string $filename):int|false | Gets file size
filetype ( string $filename):string|false | Gets file type
flock ( resource $stream, int $operation, int $would_block = refnull;):bool | Portable advisory file locking
fnmatch ( string $pattern, string $filename, int $flags = 0):bool | Match filename against a pattern
fopen ( string $filename, string $mode, bool $use_include_path = reffalse;,  $context = refnull;):resource|false | Opens file or URL
fpassthru ( resource $stream):int | Output all remaining data on a file pointer
fputcsv ( resource $stream, array $fields, string $separator = ",", string $enclosure = "\"", string $escape = "\\", string $eol = "\n"):int|false | Format line as CSV and write to file pointer
fputs ( resource $stream, string $data,  $length = refnull;):int|false | Binary-safe file write
fread ( resource $stream, int $length):string|false | Binary-safe file read
fscanf ( resource $stream, string $format, mixed $vars):array|int|false|null | Parses input from a file according to a format
fseek ( resource $stream, int $offset, int $whence = SEEK_SET):int | Seeks on a file pointer
fstat ( resource $stream):array|false | Gets information about a file using an open file pointer
fsync ( resource $stream):bool | Synchronizes changes to the file (including meta-data)
ftell ( resource $stream):int|false | Returns the current position of the file read/write pointer
ftruncate ( resource $stream, int $size):bool | Truncates a file to a given length
fwrite ( resource $stream, string $data,  $length = refnull;):int|false | Binary-safe file write
glob ( string $pattern, int $flags = 0):array|false | Find pathnames matching a pattern
is_dir ( string $filename):bool | Tells whether the filename is a directory
is_executable ( string $filename):bool | Tells whether the filename is executable
is_file ( string $filename):bool | Tells whether the filename is a regular file
is_link ( string $filename):bool | Tells whether the filename is a symbolic link
is_readable ( string $filename):bool | Tells whether a file exists and is readable
is_uploaded_file ( string $filename):bool | Tells whether the file was uploaded via HTTP POST
is_writable ( string $filename):bool | Tells whether the filename is writable
is_writeable ( string $filename):bool | Tells whether the filename is writable
lchgrp ( string $filename,  $group):bool | Changes group ownership of symlink
lchown ( string $filename,  $user):bool | Changes user ownership of symlink
link ( string $target, string $link):bool | Create a hard link
linkinfo ( string $path):int|false | Gets information about a link
lstat ( string $filename):array|false | Gives information about a file or symbolic link
mkdir ( string $directory, int $permissions = 0777, bool $recursive = reffalse;,  $context = refnull;):bool | Makes directory
move_uploaded_file ( string $from, string $to):bool | Moves an uploaded file to a new location
parse_ini_file ( string $filename, bool $process_sections = reffalse;, int $scanner_mode = INI_SCANNER_NORMAL):array|false | Parse a configuration file
parse_ini_string ( string $ini_string, bool $process_sections = reffalse;, int $scanner_mode = INI_SCANNER_NORMAL):array|false | Parse a configuration string
pathinfo ( string $path, int $flags = PATHINFO_ALL):array|string | Returns information about a file path
pclose ( resource $handle):int | Closes process file pointer
popen ( string $command, string $mode):resource|false | Opens process file pointer
readfile ( string $filename, bool $use_include_path = reffalse;,  $context = refnull;):int|false | Outputs a file
readlink ( string $path):string|false | Returns the target of a symbolic link
realpath_cache_get ( ):array | Get realpath cache entries
realpath_cache_size ( ):int | Get realpath cache size
realpath ( string $path):string|false | Returns canonicalized absolute pathname
rename ( string $from, string $to,  $context = refnull;):bool | Renames a file or directory
rewind ( resource $stream):bool | Rewind the position of a file pointer
rmdir ( string $directory,  $context = refnull;):bool | Removes directory
set_file_buffer ( resource $stream, int $size):int | Sets write file buffering on the given stream
stat ( string $filename):array|false | Gives information about a file
symlink ( string $target, string $link):bool | Creates a symbolic link
tempnam ( string $directory, string $prefix):string|false | Create file with unique file name
tmpfile ( ):resource|false | Creates a temporary file
touch ( string $filename,  $mtime = refnull;,  $atime = refnull;):bool | Sets access and modification time of file
umask (  $mask = refnull;):int | Changes the current umask
unlink ( string $filename,  $context = refnull;):bool | Deletes a file
filter_has_var ( int $input_type, string $var_name):bool | Checks if variable of specified type exists
filter_id ( string $name):int|false | Returns the filter ID belonging to a named filter
filter_input_array ( int $type,  $options = FILTER_DEFAULT, bool $add_empty = reftrue;):array|false|null | Gets external variables and optionally filters them
filter_input ( int $type, string $var_name, int $filter = FILTER_DEFAULT,  $options = 0):mixed | Gets a specific external variable by name and optionally filters it
filter_list ( ):array | Returns a list of all supported filters
filter_var_array ( array $array,  $options = FILTER_DEFAULT, bool $add_empty = reftrue;):array|false|null | Gets multiple variables and optionally filters them
filter_var ( mixed $value, int $filter = FILTER_DEFAULT,  $options = 0):mixed | Filters a variable with a specified filter
fastcgi_finish_request ( ):bool | Flushes all response data to the client
fpm_get_status ( ):array|false | Returns the current FPM pool status
ftp_alloc ( FTP\Connection $ftp, int $size, string $response = refnull;):bool | Allocates space for a file to be uploaded
ftp_append ( FTP\Connection $ftp, string $remote_filename, string $local_filename, int $mode = FTP_BINARY):bool | Append the contents of a file to another file on the FTP server
ftp_cdup ( FTP\Connection $ftp):bool | Changes to the parent directory
ftp_chdir ( FTP\Connection $ftp, string $directory):bool | Changes the current directory on a FTP server
ftp_chmod ( FTP\Connection $ftp, int $permissions, string $filename):int|false | Set permissions on a file via FTP
ftp_close ( FTP\Connection $ftp):bool | Closes an FTP connection
ftp_connect ( string $hostname, int $port = 21, int $timeout = 90):FTP\Connection|false | Opens an FTP connection
ftp_delete ( FTP\Connection $ftp, string $filename):bool | Deletes a file on the FTP server
ftp_exec ( FTP\Connection $ftp, string $command):bool | Requests execution of a command on the FTP server
ftp_fget ( FTP\Connection $ftp, resource $stream, string $remote_filename, int $mode = FTP_BINARY, int $offset = 0):bool | Downloads a file from the FTP server and saves to an open file
ftp_fput ( FTP\Connection $ftp, string $remote_filename, resource $stream, int $mode = FTP_BINARY, int $offset = 0):bool | Uploads from an open file to the FTP server
ftp_get_option ( FTP\Connection $ftp, int $option):int|bool | Retrieves various runtime behaviours of the current FTP connection
ftp_get ( FTP\Connection $ftp, string $local_filename, string $remote_filename, int $mode = FTP_BINARY, int $offset = 0):bool | Downloads a file from the FTP server
ftp_login ( FTP\Connection $ftp, string $username, string $password):bool | Logs in to an FTP connection
ftp_mdtm ( FTP\Connection $ftp, string $filename):int | Returns the last modified time of the given file
ftp_mkdir ( FTP\Connection $ftp, string $directory):string|false | Creates a directory
ftp_mlsd ( FTP\Connection $ftp, string $directory):array|false | Returns a list of files in the given directory
ftp_nb_continue ( FTP\Connection $ftp):int | Continues retrieving/sending a file (non-blocking)
ftp_nb_fget ( FTP\Connection $ftp, resource $stream, string $remote_filename, int $mode = FTP_BINARY, int $offset = 0):int | Retrieves a file from the FTP server and writes it to an open file (non-blocking)
ftp_nb_fput ( FTP\Connection $ftp, string $remote_filename, resource $stream, int $mode = FTP_BINARY, int $offset = 0):int | Stores a file from an open file to the FTP server (non-blocking)
ftp_nb_get ( FTP\Connection $ftp, string $local_filename, string $remote_filename, int $mode = FTP_BINARY, int $offset = 0):int|false | Retrieves a file from the FTP server and writes it to a local file (non-blocking)
ftp_nb_put ( FTP\Connection $ftp, string $remote_filename, string $local_filename, int $mode = FTP_BINARY, int $offset = 0):int|false | Stores a file on the FTP server (non-blocking)
ftp_nlist ( FTP\Connection $ftp, string $directory):array|false | Returns a list of files in the given directory
ftp_pasv ( FTP\Connection $ftp, bool $enable):bool | Turns passive mode on or off
ftp_put ( FTP\Connection $ftp, string $remote_filename, string $local_filename, int $mode = FTP_BINARY, int $offset = 0):bool | Uploads a file to the FTP server
ftp_pwd ( FTP\Connection $ftp):string|false | Returns the current directory name
ftp_quit ( FTP\Connection $ftp):bool | Closes an FTP connection
ftp_raw ( FTP\Connection $ftp, string $command):array|null | Sends an arbitrary command to an FTP server
ftp_rawlist ( FTP\Connection $ftp, string $directory, bool $recursive = reffalse;):array|false | Returns a detailed list of files in the given directory
ftp_rename ( FTP\Connection $ftp, string $from, string $to):bool | Renames a file or a directory on the FTP server
ftp_rmdir ( FTP\Connection $ftp, string $directory):bool | Removes a directory
ftp_set_option ( FTP\Connection $ftp, int $option,  $value):bool | Set miscellaneous runtime FTP options
ftp_site ( FTP\Connection $ftp, string $command):bool | Sends a SITE command to the server
ftp_size ( FTP\Connection $ftp, string $filename):int | Returns the size of the given file
ftp_ssl_connect ( string $hostname, int $port = 21, int $timeout = 90):FTP\Connection|false | Opens a Secure SSL-FTP connection
ftp_systype ( FTP\Connection $ftp):string|false | Returns the system type identifier of the remote FTP server
call_user_func_array ( callable $callback, array $args):mixed | Call a callback with an array of parameters
call_user_func ( callable $callback, mixed $args):mixed | Call the callback given by the first parameter
create_function ( string $args, string $code):string | Create a function dynamically by evaluating a string of code
forward_static_call_array ( callable $callback, array $args):mixed | Call a static method and pass the arguments as array
forward_static_call ( callable $callback, mixed $args):mixed | Call a static method
func_get_arg ( int $position):mixed | Return an item from the argument list
func_get_args ( ):array | Returns an array comprising a function's argument list
func_num_args ( ):int | Returns the number of arguments passed to the function
function_exists ( string $function):bool | Return reftrue; if the given function has been defined
get_defined_functions ( bool $exclude_disabled = reftrue;):array | Returns an array of all defined functions
register_shutdown_function ( callable $callback, mixed $args):void | Register a function for execution on shutdown
register_tick_function ( callable $callback, mixed $args):bool | Register a function for execution on each tick
unregister_tick_function ( callable $callback):void | De-register a function for execution on each tick
geoip_asnum_by_name ( string $hostname):string | Get the Autonomous System Numbers (ASN)
geoip_continent_code_by_name ( string $hostname):string | Get the two letter continent code
geoip_country_code_by_name ( string $hostname):string | Get the two letter country code
geoip_country_code3_by_name ( string $hostname):string | Get the three letter country code
geoip_country_name_by_name ( string $hostname):string | Get the full country name
geoip_database_info ( int $database = GEOIP_COUNTRY_EDITION):string | Get GeoIP Database information
geoip_db_avail ( int $database):bool | Determine if GeoIP Database is available
geoip_db_filename ( int $database):string | Returns the filename of the corresponding GeoIP Database
geoip_db_get_all_info ( ):array | Returns detailed information about all GeoIP database types
geoip_domain_by_name ( string $hostname):string | Get the second level domain name
geoip_id_by_name ( string $hostname):int | Get the Internet connection type
geoip_isp_by_name ( string $hostname):string | Get the Internet Service Provider (ISP) name
geoip_netspeedcell_by_name ( string $hostname):string | Get the Internet connection speed
geoip_org_by_name ( string $hostname):string | Get the organization name
geoip_record_by_name ( string $hostname):array | Returns the detailed City information found in the GeoIP Database
geoip_region_by_name ( string $hostname):array | Get the country code and region
geoip_region_name_by_code ( string $country_code, string $region_code):string | Returns the region name for some country and region code combo
geoip_setup_custom_directory ( string $path):void | Set a custom directory for the GeoIP database
geoip_time_zone_by_country_and_region ( string $country_code, string $region_code):string | Returns the time zone for some country and region code combo
bind_textdomain_codeset ( string $domain,  $codeset):string|false | Specify or get the character encoding in which the messages from the DOMAIN message catalog will be returned
bindtextdomain ( string $domain,  $directory):string|false | Sets or gets the path for a domain
dcgettext ( string $domain, string $message, int $category):string | Overrides the domain for a single lookup
dcngettext ( string $domain, string $singular, string $plural, int $count, int $category):string | Plural version of dcgettext
dgettext ( string $domain, string $message):string | Override the current domain
dngettext ( string $domain, string $singular, string $plural, int $count):string | Plural version of dgettext
gettext ( string $message):string | Lookup a message in the current domain
ngettext ( string $singular, string $plural, int $count):string | Plural version of gettext
textdomain (  $domain):string | Sets the default domain
gmp_abs (  $num):GMP | Absolute value
gmp_add (  $num1,  $num2):GMP | Add numbers
gmp_and (  $num1,  $num2):GMP | Bitwise AND
gmp_binomial (  $n, int $k):GMP | Calculates binomial coefficient
gmp_clrbit ( GMP $num, int $index):void | Clear bit
gmp_cmp (  $num1,  $num2):int | Compare numbers
gmp_com (  $num):GMP | Calculates one's complement
gmp_div_q (  $num1,  $num2, int $rounding_mode = GMP_ROUND_ZERO):GMP | Divide numbers
gmp_div_qr (  $num1,  $num2, int $rounding_mode = GMP_ROUND_ZERO):array | Divide numbers and get quotient and remainder
gmp_div_r (  $num1,  $num2, int $rounding_mode = GMP_ROUND_ZERO):GMP | Remainder of the division of numbers
gmp_div (  $num1,  $num2, int $rounding_mode = GMP_ROUND_ZERO):GMP | Divide numbers
gmp_divexact (  $num1,  $num2):GMP | Exact division of numbers
gmp_export (  $num, int $word_size = 1, int $flags = GMP_MSW_FIRST | GMP_NATIVE_ENDIAN):string | Export to a binary string
gmp_fact (  $num):GMP | Factorial
gmp_gcd (  $num1,  $num2):GMP | Calculate GCD
gmp_gcdext (  $num1,  $num2):array | Calculate GCD and multipliers
gmp_hamdist (  $num1,  $num2):int | Hamming distance
gmp_import ( string $data, int $word_size = 1, int $flags = GMP_MSW_FIRST | GMP_NATIVE_ENDIAN):GMP | Import from a binary string
gmp_init (  $num, int $base = 0):GMP | Create GMP number
gmp_intval (  $num):int | Convert GMP number to integer
gmp_invert (  $num1,  $num2):GMP|false | Inverse by modulo
gmp_jacobi (  $num1,  $num2):int | Jacobi symbol
gmp_kronecker (  $num1,  $num2):int | Kronecker symbol
gmp_lcm (  $num1,  $num2):GMP | Calculate LCM
gmp_legendre (  $num1,  $num2):int | Legendre symbol
gmp_mod (  $num1,  $num2):GMP | Modulo operation
gmp_mul (  $num1,  $num2):GMP | Multiply numbers
gmp_neg (  $num):GMP | Negate number
gmp_nextprime (  $num):GMP | Find next prime number
gmp_or (  $num1,  $num2):GMP | Bitwise OR
gmp_perfect_power (  $num):bool | Perfect power check
gmp_perfect_square (  $num):bool | Perfect square check
gmp_popcount (  $num):int | Population count
gmp_pow (  $num, int $exponent):GMP | Raise number into power
gmp_powm (  $num,  $exponent,  $modulus):GMP | Raise number into power with modulo
gmp_prob_prime (  $num, int $repetitions = 10):int | Check if number is "probably prime"
gmp_random_bits ( int $bits):GMP | Random number
gmp_random_range (  $min,  $max):GMP | Get a uniformly selected integer
gmp_random_seed (  $seed):void | Sets the RNG seed
gmp_random ( int $limiter = 20):GMP | Random number
gmp_root (  $num, int $nth):GMP | Take the integer part of nth root
gmp_rootrem (  $num, int $nth):array | Take the integer part and remainder of nth root
gmp_scan0 (  $num1, int $start):int | Scan for 0
gmp_scan1 (  $num1, int $start):int | Scan for 1
gmp_setbit ( GMP $num, int $index, bool $value = reftrue;):void | Set bit
gmp_sign (  $num):int | Sign of number
gmp_sqrt (  $num):GMP | Calculate square root
gmp_sqrtrem (  $num):array | Square root with remainder
gmp_strval (  $num, int $base = 10):string | Convert GMP number to string
gmp_sub (  $num1,  $num2):GMP | Subtract numbers
gmp_testbit (  $num, int $index):bool | Tests if a bit is set
gmp_xor (  $num1,  $num2):GMP | Bitwise XOR
gnupg_adddecryptkey ( resource $identifier, string $fingerprint, string $passphrase):bool | Add a key for decryption
gnupg_addencryptkey ( resource $identifier, string $fingerprint):bool | Add a key for encryption
gnupg_addsignkey ( resource $identifier, string $fingerprint, string $passphrase):bool | Add a key for signing
gnupg_cleardecryptkeys ( resource $identifier):bool | Removes all keys which were set for decryption before
gnupg_clearencryptkeys ( resource $identifier):bool | Removes all keys which were set for encryption before
gnupg_clearsignkeys ( resource $identifier):bool | Removes all keys which were set for signing before
gnupg_decrypt ( resource $identifier, string $text):string|false | Decrypts a given text
gnupg_decryptverify ( resource $identifier, string $text, string $plaintext):array|false | Decrypts and verifies a given text
gnupg_deletekey ( resource $identifier, string $key, bool $allow_secret):bool | Delete a key from the keyring
gnupg_encrypt ( resource $identifier, string $plaintext):string|false | Encrypts a given text
gnupg_encryptsign ( resource $identifier, string $plaintext):string|false | Encrypts and signs a given text
gnupg_export ( resource $identifier, string $fingerprint):string|false | Exports a key
gnupg_getengineinfo ( resource $identifier):array | Returns the engine info
gnupg_geterror ( resource $identifier):string|false | Returns the errortext, if a function fails
gnupg_geterrorinfo ( resource $identifier):array | Returns the error info
gnupg_getprotocol ( resource $identifier):int | Returns the currently active protocol for all operations
gnupg_gettrustlist ( resource $identifier, string $pattern):array|null | Search the trust items
gnupg_import ( resource $identifier, string $keydata):array|false | Imports a key
gnupg_init (  $options = refnull;):resource | Initialize a connection
gnupg_keyinfo ( resource $identifier, string $pattern):array|false | Returns an array with information about all keys that matches the given pattern
gnupg_listsignatures ( resource $identifier, string $keyid):array|null | List key signatures
gnupg_setarmor ( resource $identifier, int $armor):bool | Toggle armored output
gnupg_seterrormode ( resource $identifier, int $errormode):void | Sets the mode for error_reporting
gnupg_setsignmode ( resource $identifier, int $signmode):bool | Sets the mode for signing
gnupg_sign ( resource $identifier, string $plaintext):string|false | Signs a given text
gnupg_verify ( resource $identifier, string $signed_text, string $signature, string $plaintext):array|false | Verifies a signed text
hash_algos ( ):array | Return a list of registered hashing algorithms
hash_copy ( HashContext $context):HashContext | Copy hashing context
hash_equals ( string $known_string, string $user_string):bool | Timing attack safe string comparison
hash_file ( string $algo, string $filename, bool $binary = reffalse;, array $options = []):string|false | Generate a hash value using the contents of a given file
hash_final ( HashContext $context, bool $binary = reffalse;):string | Finalize an incremental hash and return resulting digest
hash_hkdf ( string $algo, string $key, int $length = 0, string $info = "", string $salt = ""):string | Generate a HKDF key derivation of a supplied key input
hash_hmac_algos ( ):array | Return a list of registered hashing algorithms suitable for hash_hmac
hash_hmac_file ( string $algo, string $filename, string $key, bool $binary = reffalse;):string|false | Generate a keyed hash value using the HMAC method and the contents of a given file
hash_hmac ( string $algo, string $data, string $key, bool $binary = reffalse;):string | Generate a keyed hash value using the HMAC method
hash_init ( string $algo, int $flags = 0, string $key = "", array $options = []):HashContext | Initialize an incremental hashing context
hash_pbkdf2 ( string $algo, string $password, string $salt, int $iterations, int $length = 0, bool $binary = reffalse;):string | Generate a PBKDF2 key derivation of a supplied password
hash_update_file ( HashContext $context, string $filename,  $stream_context = refnull;):bool | Pump data into an active hashing context from a file
hash_update_stream ( HashContext $context, resource $stream, int $length = -1):int | Pump data into an active hashing context from an open stream
hash_update ( HashContext $context, string $data):bool | Pump data into an active hashing context
hash ( string $algo, string $data, bool $binary = reffalse;, array $options = []):string | Generate a hash value (message digest)
fbird_add_user ( resource $service_handle, string $user_name, string $password, string $first_name, string $middle_name, string $last_name):bool | Add a user to a security database
fbird_affected_rows ( resource $link_identifier):int | Return the number of rows that were affected by the previous query
fbird_backup ( resource $service_handle, string $source_db, string $dest_file, int $options = 0, bool $verbose = reffalse;):mixed | Initiates a backup task in the service manager and returns immediately
fbird_blob_add ( resource $blob_handle, string $data):void | Add data into a newly created blob
fbird_blob_cancel ( resource $blob_handle):bool | Cancel creating blob
fbird_blob_close ( resource $blob_handle):mixed | Close blob
fbird_blob_create ( resource $link_identifier = refnull;):resource|false | Create a new blob for adding data
fbird_blob_echo ( string $blob_id):bool | Output blob contents to browser
fbird_blob_get ( resource $blob_handle, int $len):string | Get len bytes data from open blob
fbird_blob_import ( resource $link_identifier, resource $file_handle):string | Create blob, copy file in it, and close it
fbird_blob_info ( resource $link_identifier, string $blob_id):array | Return blob length and other useful info
fbird_blob_open ( resource $link_identifier, string $blob_id):resource|false | Open blob for retrieving data parts
fbird_close ( resource $connection_id = refnull;):bool | Close a connection to an InterBase database
fbird_commit_ret ( resource $link_or_trans_identifier = refnull;):bool | Commit a transaction without closing it
fbird_commit ( resource $link_or_trans_identifier = refnull;):bool | Commit a transaction
fbird_connect ( string $database, string $username, string $password, string $charset, int $buffers, int $dialect, string $role, int $sync):resource | Open a connection to a database
fbird_db_info ( resource $service_handle, string $db, int $action, int $argument = 0):string | Request statistics about a database
fbird_delete_user ( resource $service_handle, string $user_name):bool | Delete a user from a security database
fbird_drop_db ( resource $connection = refnull;):bool | Drops a database
fbird_errcode ( ):int | Return an error code
fbird_errmsg ( ):string | Return error messages
fbird_execute ( resource $query, mixed $values):resource | Execute a previously prepared query
fbird_fetch_assoc ( resource $result, int $fetch_flag = 0):array | Fetch a result row from a query as an associative array
fbird_fetch_object ( resource $result_id, int $fetch_flag = 0):object | Get an object from a InterBase database
fbird_fetch_row ( resource $result_identifier, int $fetch_flag = 0):array | Fetch a row from an InterBase database
fbird_field_info ( resource $result, int $field_number):array | Get information about a field
fbird_free_event_handler ( resource $event):bool | Cancels a registered event handler
fbird_free_query ( resource $query):bool | Free memory allocated by a prepared query
fbird_free_result ( resource $result_identifier):bool | Free a result set
fbird_gen_id ( string $generator, int $increment = 1, resource $link_identifier = refnull;):mixed | Increments the named generator and returns its new value
fbird_maintain_db ( resource $service_handle, string $db, int $action, int $argument = 0):bool | Execute a maintenance command on the database server
fbird_modify_user ( resource $service_handle, string $user_name, string $password, string $first_name, string $middle_name, string $last_name):bool | Modify a user to a security database
fbird_name_result ( resource $result, string $name):bool | Assigns a name to a result set
fbird_num_fields ( resource $result_id):int | Get the number of fields in a result set
fbird_num_params ( resource $query):int | Return the number of parameters in a prepared query
fbird_param_info ( resource $query, int $param_number):array | Return information about a parameter in a prepared query
fbird_pconnect ( string $database, string $username, string $password, string $charset, int $buffers, int $dialect, string $role, int $sync):resource | Open a persistent connection to an InterBase database
fbird_prepare ( string $query):resource | Prepare a query for later binding of parameter placeholders and execution
fbird_query ( resource $link_identifier, string $query, int $bind_args):resource | Execute a query on an InterBase database
fbird_restore ( resource $service_handle, string $source_file, string $dest_db, int $options = 0, bool $verbose = reffalse;):mixed | Initiates a restore task in the service manager and returns immediately
fbird_rollback_ret ( resource $link_or_trans_identifier = refnull;):bool | Roll back a transaction without closing it
fbird_rollback ( resource $link_or_trans_identifier = refnull;):bool | Roll back a transaction
fbird_server_info ( resource $service_handle, int $action):string | Request information about a database server
fbird_service_attach ( string $host, string $dba_username, string $dba_password):resource|false | Connect to the service manager
fbird_service_detach ( resource $service_handle):bool | Disconnect from the service manager
fbird_set_event_handler ( callable $event_handler, string $event_name, string $even_names):resource | Register a callback function to be called when events are posted
fbird_trans ( int $trans_args, resource $link_identifier):resource | Begin a transaction
fbird_wait_event ( string $event_name, string $event_names):string | Wait for an event to be posted by the database
ibase_add_user ( resource $service_handle, string $user_name, string $password, string $first_name, string $middle_name, string $last_name):bool | Add a user to a security database
ibase_affected_rows ( resource $link_identifier):int | Return the number of rows that were affected by the previous query
ibase_backup ( resource $service_handle, string $source_db, string $dest_file, int $options = 0, bool $verbose = reffalse;):mixed | Initiates a backup task in the service manager and returns immediately
ibase_blob_add ( resource $blob_handle, string $data):void | Add data into a newly created blob
ibase_blob_cancel ( resource $blob_handle):bool | Cancel creating blob
ibase_blob_close ( resource $blob_handle):mixed | Close blob
ibase_blob_create ( resource $link_identifier = refnull;):resource|false | Create a new blob for adding data
ibase_blob_echo ( string $blob_id):bool | Output blob contents to browser
ibase_blob_get ( resource $blob_handle, int $len):string | Get len bytes data from open blob
ibase_blob_import ( resource $link_identifier, resource $file_handle):string | Create blob, copy file in it, and close it
ibase_blob_info ( resource $link_identifier, string $blob_id):array | Return blob length and other useful info
ibase_blob_open ( resource $link_identifier, string $blob_id):resource|false | Open blob for retrieving data parts
ibase_close ( resource $connection_id = refnull;):bool | Close a connection to an InterBase database
ibase_commit_ret ( resource $link_or_trans_identifier = refnull;):bool | Commit a transaction without closing it
ibase_commit ( resource $link_or_trans_identifier = refnull;):bool | Commit a transaction
ibase_connect ( string $database, string $username, string $password, string $charset, int $buffers, int $dialect, string $role, int $sync):resource | Open a connection to a database
ibase_db_info ( resource $service_handle, string $db, int $action, int $argument = 0):string | Request statistics about a database
ibase_delete_user ( resource $service_handle, string $user_name):bool | Delete a user from a security database
ibase_drop_db ( resource $connection = refnull;):bool | Drops a database
ibase_errcode ( ):int | Return an error code
ibase_errmsg ( ):string | Return error messages
ibase_execute ( resource $query, mixed $values):resource | Execute a previously prepared query
ibase_fetch_assoc ( resource $result, int $fetch_flag = 0):array | Fetch a result row from a query as an associative array
ibase_fetch_object ( resource $result_id, int $fetch_flag = 0):object | Get an object from a InterBase database
ibase_fetch_row ( resource $result_identifier, int $fetch_flag = 0):array | Fetch a row from an InterBase database
ibase_field_info ( resource $result, int $field_number):array | Get information about a field
ibase_free_event_handler ( resource $event):bool | Cancels a registered event handler
ibase_free_query ( resource $query):bool | Free memory allocated by a prepared query
ibase_free_result ( resource $result_identifier):bool | Free a result set
ibase_gen_id ( string $generator, int $increment = 1, resource $link_identifier = refnull;):mixed | Increments the named generator and returns its new value
ibase_maintain_db ( resource $service_handle, string $db, int $action, int $argument = 0):bool | Execute a maintenance command on the database server
ibase_modify_user ( resource $service_handle, string $user_name, string $password, string $first_name, string $middle_name, string $last_name):bool | Modify a user to a security database
ibase_name_result ( resource $result, string $name):bool | Assigns a name to a result set
ibase_num_fields ( resource $result_id):int | Get the number of fields in a result set
ibase_num_params ( resource $query):int | Return the number of parameters in a prepared query
ibase_param_info ( resource $query, int $param_number):array | Return information about a parameter in a prepared query
ibase_pconnect ( string $database, string $username, string $password, string $charset, int $buffers, int $dialect, string $role, int $sync):resource | Open a persistent connection to an InterBase database
ibase_prepare ( string $query):resource | Prepare a query for later binding of parameter placeholders and execution
ibase_query ( resource $link_identifier, string $query, int $bind_args):resource | Execute a query on an InterBase database
ibase_restore ( resource $service_handle, string $source_file, string $dest_db, int $options = 0, bool $verbose = reffalse;):mixed | Initiates a restore task in the service manager and returns immediately
ibase_rollback_ret ( resource $link_or_trans_identifier = refnull;):bool | Roll back a transaction without closing it
ibase_rollback ( resource $link_or_trans_identifier = refnull;):bool | Roll back a transaction
ibase_server_info ( resource $service_handle, int $action):string | Request information about a database server
ibase_service_attach ( string $host, string $dba_username, string $dba_password):resource|false | Connect to the service manager
ibase_service_detach ( resource $service_handle):bool | Disconnect from the service manager
ibase_set_event_handler ( callable $event_handler, string $event_name, string $even_names):resource | Register a callback function to be called when events are posted
ibase_trans ( int $trans_args, resource $link_identifier):resource | Begin a transaction
ibase_wait_event ( string $event_name, string $event_names):string | Wait for an event to be posted by the database
db2_autocommit ( resource $connection, int $value):int|bool | Returns or sets the AUTOCOMMIT state for a database connection
db2_bind_param ( resource $stmt, int $parameter_number, string $variable_name, int $parameter_type = DB2_PARAM_IN, int $data_type = 0, int $precision = -1, int $scale = 0):bool | Binds a PHP variable to an SQL statement parameter
db2_client_info ( resource $connection):stdClass|false | Returns an object with properties that describe the DB2 database client
db2_close ( resource $connection):bool | Closes a database connection
db2_column_privileges ( resource $connection,  $qualifier = refnull;,  $schema = refnull;,  $table_name = refnull;,  $column_name = refnull;):resource | Returns a result set listing the columns and associated privileges for a table
db2_columns ( resource $connection,  $qualifier = refnull;,  $schema = refnull;,  $table_name = refnull;,  $column_name = refnull;):resource | Returns a result set listing the columns and associated metadata for a table
db2_commit ( resource $connection):bool | Commits a transaction
db2_conn_error (  $connection = refnull;):string | Returns a string containing the SQLSTATE returned by the last connection attempt
db2_conn_errormsg (  $connection = refnull;):string | Returns the last connection error message and SQLCODE value
db2_connect ( string $database,  $username,  $password, array $options = []):resource|false | Returns a connection to a database
db2_cursor_type ( resource $stmt):int | Returns the cursor type used by a statement resource
db2_escape_string ( string $string_literal):string | Used to escape certain characters
db2_exec ( resource $connection, string $statement, array $options = []):resource|false | Executes an SQL statement directly
db2_execute ( resource $stmt, array $parameters = []):bool | Executes a prepared SQL statement
db2_fetch_array ( resource $stmt, int $row_number = -1):array|false | Returns an array, indexed by column position, representing a row in a result set
db2_fetch_assoc ( resource $stmt, int $row_number = -1):array|false | Returns an array, indexed by column name, representing a row in a result set
db2_fetch_both ( resource $stmt, int $row_number = -1):array|false | Returns an array, indexed by both column name and position, representing a row in a result set
db2_fetch_object ( resource $stmt, int $row_number = -1):stdClass|false | Returns an object with properties representing columns in the fetched row
db2_fetch_row ( resource $stmt, int $row_number = -1):bool | Sets the result set pointer to the next row or requested row
db2_field_display_size ( resource $stmt,  $column):int|false | Returns the maximum number of bytes required to display a column
db2_field_name ( resource $stmt,  $column):string|false | Returns the name of the column in the result set
db2_field_num ( resource $stmt,  $column):int|false | Returns the position of the named column in a result set
db2_field_precision ( resource $stmt,  $column):int|false | Returns the precision of the indicated column in a result set
db2_field_scale ( resource $stmt,  $column):int|false | Returns the scale of the indicated column in a result set
db2_field_type ( resource $stmt,  $column):string|false | Returns the data type of the indicated column in a result set
db2_field_width ( resource $stmt,  $column):int|false | Returns the width of the current value of the indicated column in a result set
db2_foreign_keys ( resource $connection,  $qualifier,  $schema, string $table_name):resource | Returns a result set listing the foreign keys for a table
db2_free_result ( resource $stmt):bool | Frees resources associated with a result set
db2_free_stmt ( resource $stmt):bool | Frees resources associated with the indicated statement resource
db2_get_option ( resource $resource, string $option):string|false | Retrieves an option value for a statement resource or a connection resource
db2_last_insert_id ( resource $resource):string|null | Returns the auto generated ID of the last insert query that successfully    executed on this connection
db2_lob_read ( resource $stmt, int $colnum, int $length):string|false | Gets a user defined size of LOB files with each invocation
db2_next_result ( resource $stmt):resource|false | Requests the next result set from a stored procedure
db2_num_fields ( resource $stmt):int|false | Returns the number of fields contained in a result set
db2_num_rows ( resource $stmt):int|false | Returns the number of rows affected by an SQL statement
db2_pclose ( resource $connection):bool | Closes a persistent database connection
db2_pconnect ( string $database,  $username,  $password, array $options = []):resource|false | Returns a persistent connection to a database
db2_prepare ( resource $connection, string $statement, array $options = []):resource|false | Prepares an SQL statement to be executed
db2_primary_keys ( resource $connection,  $qualifier,  $schema, string $table_name):resource | Returns a result set listing primary keys for a table
db2_procedure_columns ( resource $connection,  $qualifier, string $schema, string $procedure,  $parameter):resource | Returns a result set listing stored procedure parameters
db2_procedures ( resource $connection,  $qualifier, string $schema, string $procedure):resource | Returns a result set listing the stored procedures registered in a database
db2_result ( resource $stmt,  $column):mixed|null | Returns a single column from a row in the result set
db2_rollback ( resource $connection):bool | Rolls back a transaction
db2_server_info ( resource $connection):stdClass|false | Returns an object with properties that describe the DB2 database server
db2_set_option ( resource $resource, array $options, int $type):bool | Set options for connection or statement resources
db2_special_columns ( resource $connection,  $qualifier, string $schema, string $table_name, int $scope):resource | Returns a result set listing the unique row identifier columns for a table
db2_statistics ( resource $connection,  $qualifier,  $schema, string $table_name, bool $unique):resource | Returns a result set listing the index and statistics for a table
db2_stmt_error (  $stmt = refnull;):string | Returns a string containing the SQLSTATE returned by an SQL statement
db2_stmt_errormsg (  $stmt = refnull;):string | Returns a string containing the last SQL statement error message
db2_table_privileges ( resource $connection,  $qualifier = refnull;,  $schema = refnull;,  $table_name = refnull;):resource | Returns a result set listing the tables and associated privileges in a database
db2_tables ( resource $connection,  $qualifier = refnull;,  $schema = refnull;,  $table_name = refnull;,  $table_type = refnull;):resource | Returns a result set listing the tables and associated metadata in a database
iconv_get_encoding ( string $type = "all"):array|string|false | Retrieve internal configuration variables of iconv extension
iconv_mime_decode_headers ( string $headers, int $mode = 0,  $encoding = refnull;):array|false | Decodes multiple  header fields at once
iconv_mime_decode ( string $string, int $mode = 0,  $encoding = refnull;):string|false | Decodes a  header field
iconv_mime_encode ( string $field_name, string $field_value, array $options = []):string|false | Composes a  header field
iconv_set_encoding ( string $type, string $encoding):bool | Set current setting for character encoding conversion
iconv_strlen ( string $string,  $encoding = refnull;):int|false | Returns the character count of string
iconv_strpos ( string $haystack, string $needle, int $offset = 0,  $encoding = refnull;):int|false | Finds position of first occurrence of a needle within a haystack
iconv_strrpos ( string $haystack, string $needle,  $encoding = refnull;):int|false | Finds the last occurrence of a needle within a haystack
iconv_substr ( string $string, int $offset,  $length = refnull;,  $encoding = refnull;):string|false | Cut out part of a string
iconv ( string $from_encoding, string $to_encoding, string $string):string|false | Convert a string from one character encoding to another
ob_iconv_handler ( string $contents, int $status):string | Convert character encoding as output buffer handler
igbinary_serialize ( mixed $value):string|false | Generates a compact, storable binary representation of a value
igbinary_unserialize ( mixed $value):string|false | Generates a compact, storable binary representation of a value
gd_info ( ):array | Retrieve information about the currently installed GD library
getimagesize ( string $filename, array $image_info = refnull;):array|false | Get the size of an image
getimagesizefromstring ( string $string, array $image_info = refnull;):array|false | Get the size of an image from a string
image_type_to_extension ( int $image_type, bool $include_dot = reftrue;):string|false | Get file extension for image type
image_type_to_mime_type ( int $image_type):string | Get Mime-Type for image-type returned by getimagesize,    exif_read_data, exif_thumbnail, exif_imagetype
image2wbmp ( resource $image, string $filename, int $foreground):bool | refgd.image.output;
imageaffine ( GdImage $image, array $affine,  $clip = refnull;):GdImage|false | Return an image containing the affine transformed src image, using an optional clipping area
imageaffinematrixconcat ( array $matrix1, array $matrix2):array|false | Concatenate two affine transformation matrices
imageaffinematrixget ( int $type,  $options):array|false | Get an affine transformation matrix
imagealphablending ( GdImage $image, bool $enable):bool | Set the blending mode for an image
imageantialias ( GdImage $image, bool $enable):bool | Should antialias functions be used or not
imagearc ( GdImage $image, int $center_x, int $center_y, int $width, int $height, int $start_angle, int $end_angle, int $color):bool | Draws an arc
imageavif ( GdImage $image,  $file = refnull;, int $quality = -1, int $speed = -1):bool | refgd.image.output;
imagebmp ( GdImage $image,  $file = refnull;, bool $compressed = reftrue;):bool | Output a BMP image to browser or file
imagechar ( GdImage $image,  $font, int $x, int $y, string $char, int $color):bool | Draw a character horizontally
imagecharup ( GdImage $image,  $font, int $x, int $y, string $char, int $color):bool | Draw a character vertically
imagecolorallocate ( GdImage $image, int $red, int $green, int $blue):int|false | Allocate a color for an image
imagecolorallocatealpha ( GdImage $image, int $red, int $green, int $blue, int $alpha):int|false | Allocate a color for an image
imagecolorat ( GdImage $image, int $x, int $y):int|false | Get the index of the color of a pixel
imagecolorclosest ( GdImage $image, int $red, int $green, int $blue):int | Get the index of the closest color to the specified color
imagecolorclosestalpha ( GdImage $image, int $red, int $green, int $blue, int $alpha):int | Get the index of the closest color to the specified color + alpha
imagecolorclosesthwb ( GdImage $image, int $red, int $green, int $blue):int | Get the index of the color which has the hue, white and blackness
imagecolordeallocate ( GdImage $image, int $color):bool | De-allocate a color for an image
imagecolorexact ( GdImage $image, int $red, int $green, int $blue):int | Get the index of the specified color
imagecolorexactalpha ( GdImage $image, int $red, int $green, int $blue, int $alpha):int | Get the index of the specified color + alpha
imagecolormatch ( GdImage $image1, GdImage $image2):bool | Makes the colors of the palette version of an image more closely match the true color version
imagecolorresolve ( GdImage $image, int $red, int $green, int $blue):int | Get the index of the specified color or its closest possible alternative
imagecolorresolvealpha ( GdImage $image, int $red, int $green, int $blue, int $alpha):int | Get the index of the specified color + alpha or its closest possible alternative
imagecolorset ( GdImage $image, int $color, int $red, int $green, int $blue, int $alpha = 0):false|null | Set the color for the specified palette index
imagecolorsforindex ( GdImage $image, int $color):array | Get the colors for an index
imagecolorstotal ( GdImage $image):int | Find out the number of colors in an image's palette
imagecolortransparent ( GdImage $image,  $color = refnull;):int | Define a color as transparent
imageconvolution ( GdImage $image, array $matrix, float $divisor, float $offset):bool | Apply a 3x3 convolution matrix, using coefficient and offset
imagecopy ( GdImage $dst_image, GdImage $src_image, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_width, int $src_height):bool | Copy part of an image
imagecopymerge ( GdImage $dst_image, GdImage $src_image, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_width, int $src_height, int $pct):bool | Copy and merge part of an image
imagecopymergegray ( GdImage $dst_image, GdImage $src_image, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_width, int $src_height, int $pct):bool | Copy and merge part of an image with gray scale
imagecopyresampled ( GdImage $dst_image, GdImage $src_image, int $dst_x, int $dst_y, int $src_x, int $src_y, int $dst_width, int $dst_height, int $src_width, int $src_height):bool | Copy and resize part of an image with resampling
imagecopyresized ( GdImage $dst_image, GdImage $src_image, int $dst_x, int $dst_y, int $src_x, int $src_y, int $dst_width, int $dst_height, int $src_width, int $src_height):bool | Copy and resize part of an image
imagecreate ( int $width, int $height):GdImage|false | Create a new palette based image
imagecreatefromavif ( string $filename):GdImage|false | refgd.image.new;
imagecreatefrombmp ( string $filename):GdImage|false | refgd.image.new;
imagecreatefromgd ( string $filename):GdImage|false | Create a new image from GD file or URL
imagecreatefromgd2 ( string $filename):GdImage|false | Create a new image from GD2 file or URL
imagecreatefromgd2part ( string $filename, int $x, int $y, int $width, int $height):GdImage|false | Create a new image from a given part of GD2 file or URL
imagecreatefromgif ( string $filename):GdImage|false | refgd.image.new;
imagecreatefromjpeg ( string $filename):GdImage|false | refgd.image.new;
imagecreatefrompng ( string $filename):GdImage|false | refgd.image.new;
imagecreatefromstring ( string $data):GdImage|false | Create a new image from the image stream in the string
imagecreatefromtga ( string $filename):GdImage|false | refgd.image.new;
imagecreatefromwbmp ( string $filename):GdImage|false | refgd.image.new;
imagecreatefromwebp ( string $filename):GdImage|false | refgd.image.new;
imagecreatefromxbm ( string $filename):GdImage|false | refgd.image.new;
imagecreatefromxpm ( string $filename):GdImage|false | refgd.image.new;
imagecreatetruecolor ( int $width, int $height):GdImage|false | Create a new true color image
imagecrop ( GdImage $image, array $rectangle):GdImage|false | Crop an image to the given rectangle
imagecropauto ( GdImage $image, int $mode = IMG_CROP_DEFAULT, float $threshold = 0.5, int $color = -1):GdImage|false | Crop an image automatically using one of the available modes
imagedashedline ( GdImage $image, int $x1, int $y1, int $x2, int $y2, int $color):bool | Draw a dashed line
imagedestroy ( GdImage $image):bool | Destroy an image
imageellipse ( GdImage $image, int $center_x, int $center_y, int $width, int $height, int $color):bool | Draw an ellipse
imagefill ( GdImage $image, int $x, int $y, int $color):bool | Flood fill
imagefilledarc ( GdImage $image, int $center_x, int $center_y, int $width, int $height, int $start_angle, int $end_angle, int $color, int $style):bool | Draw a partial arc and fill it
imagefilledellipse ( GdImage $image, int $center_x, int $center_y, int $width, int $height, int $color):bool | Draw a filled ellipse
imagefilledpolygon ( GdImage $image, array $points, int $color):bool | Draw a filled polygon
imagefilledrectangle ( GdImage $image, int $x1, int $y1, int $x2, int $y2, int $color):bool | Draw a filled rectangle
imagefilltoborder ( GdImage $image, int $x, int $y, int $border_color, int $color):bool | Flood fill to specific color
imagefilter ( GdImage $image, int $filter,  $args):bool | Applies a filter to an image
imageflip ( GdImage $image, int $mode):bool | Flips an image using a given mode
imagefontheight (  $font):int | Get font height
imagefontwidth (  $font):int | Get font width
imageftbbox ( float $size, float $angle, string $font_filename, string $string, array $options = []):array|false | Give the bounding box of a text using fonts via freetype2
imagefttext ( GdImage $image, float $size, float $angle, int $x, int $y, int $color, string $font_filename, string $text, array $options = []):array|false | Write text to the image using fonts using FreeType 2
imagegammacorrect ( GdImage $image, float $input_gamma, float $output_gamma):bool | Apply a gamma correction to a GD image
imagegd ( GdImage $image,  $file = refnull;):bool | Output GD image to browser or file
imagegd2 ( GdImage $image,  $file = refnull;, int $chunk_size = 128, int $mode = IMG_GD2_RAW):bool | Output GD2 image to browser or file
imagegetclip ( GdImage $image):array | Get the clipping rectangle
imagegetinterpolation ( GdImage $image):int | Get the interpolation method
imagegif ( GdImage $image,  $file = refnull;):bool | refgd.image.output;
imagegrabscreen ( ):GdImage|false | Captures the whole screen
imagegrabwindow ( int $handle, bool $client_area = reffalse;):GdImage|false | Captures a window
imageinterlace ( GdImage $image,  $enable = refnull;):bool | Enable or disable interlace
imageistruecolor ( GdImage $image):bool | Finds whether an image is a truecolor image
imagejpeg ( GdImage $image,  $file = refnull;, int $quality = -1):bool | refgd.image.output;
imagelayereffect ( GdImage $image, int $effect):bool | Set the alpha blending flag to use layering effects
imageline ( GdImage $image, int $x1, int $y1, int $x2, int $y2, int $color):bool | Draw a line
imageloadfont ( string $filename):GdFont|false | Load a new font
imageopenpolygon ( GdImage $image, array $points, int $color):bool | Draws an open polygon
imagepalettecopy ( GdImage $dst, GdImage $src):void | Copy the palette from one image to another
imagepalettetotruecolor ( GdImage $image):bool | Converts a palette based image to true color
imagepng ( GdImage $image,  $file = refnull;, int $quality = -1, int $filters = -1):bool | Output a PNG image to either the browser or a file
imagepolygon ( GdImage $image, array $points, int $color):bool | Draws a polygon
imagerectangle ( GdImage $image, int $x1, int $y1, int $x2, int $y2, int $color):bool | Draw a rectangle
imageresolution ( GdImage $image,  $resolution_x = refnull;,  $resolution_y = refnull;):array|bool | Get or set the resolution of the image
imagerotate ( GdImage $image, float $angle, int $background_color):GdImage|false | Rotate an image with a given angle
imagesavealpha ( GdImage $image, bool $enable):bool | Whether to retain full alpha channel information when saving images
imagescale ( GdImage $image, int $width, int $height = -1, int $mode = IMG_BILINEAR_FIXED):GdImage|false | Scale an image using the given new width and height
imagesetbrush ( GdImage $image, GdImage $brush):bool | Set the brush image for line drawing
imagesetclip ( GdImage $image, int $x1, int $y1, int $x2, int $y2):bool | Set the clipping rectangle
imagesetinterpolation ( GdImage $image, int $method = IMG_BILINEAR_FIXED):bool | Set the interpolation method
imagesetpixel ( GdImage $image, int $x, int $y, int $color):bool | Set a single pixel
imagesetstyle ( GdImage $image, array $style):bool | Set the style for line drawing
imagesetthickness ( GdImage $image, int $thickness):bool | Set the thickness for line drawing
imagesettile ( GdImage $image, GdImage $tile):bool | Set the tile image for filling
imagestring ( GdImage $image,  $font, int $x, int $y, string $string, int $color):bool | Draw a string horizontally
imagestringup ( GdImage $image,  $font, int $x, int $y, string $string, int $color):bool | Draw a string vertically
imagesx ( GdImage $image):int | Get image width
imagesy ( GdImage $image):int | Get image height
imagetruecolortopalette ( GdImage $image, bool $dither, int $num_colors):bool | Convert a true color image to a palette image
imagettfbbox ( float $size, float $angle, string $font_filename, string $string, array $options = []):array|false | Give the bounding box of a text using TrueType fonts
imagettftext ( GdImage $image, float $size, float $angle, int $x, int $y, int $color, string $font_filename, string $text, array $options = []):array|false | Write text to the image using TrueType fonts
imagetypes ( ):int | Return the image types supported by this PHP build
imagewbmp ( GdImage $image,  $file = refnull;,  $foreground_color = refnull;):bool | refgd.image.output;
imagewebp ( GdImage $image,  $file = refnull;, int $quality = -1):bool | Output a WebP image to browser or file
imagexbm ( GdImage $image,  $filename,  $foreground_color = refnull;):bool | Output an XBM image to browser or file
iptcembed ( string $iptc_data, string $filename, int $spool = 0):string|bool | Embeds binary IPTC data into a JPEG image
iptcparse ( string $iptc_block):array|false | Parse a binary IPTC block into single tags
jpeg2wbmp ( string $jpegname, string $wbmpname, int $dest_height, int $dest_width, int $threshold):bool | Convert JPEG image file to WBMP image file
png2wbmp ( string $pngname, string $wbmpname, int $dest_height, int $dest_width, int $threshold):bool | Convert PNG image file to WBMP image file
imap_8bit ( string $string):string|false | Convert an 8bit string to a quoted-printable string
imap_alerts ( ):array|false | Returns all IMAP alert messages that have occurred
imap_append ( IMAP\Connection $imap, string $folder, string $message,  $options = refnull;,  $internal_date = refnull;):bool | Append a string message to a specified mailbox
imap_base64 ( string $string):string|false | Decode BASE64 encoded text
imap_binary ( string $string):string|false | Convert an 8bit string to a base64 string
imap_body ( IMAP\Connection $imap, int $message_num, int $flags = 0):string|false | Read the message body
imap_bodystruct ( IMAP\Connection $imap, int $message_num, string $section):stdClass|false | Read the structure of a specified body section of a specific message
imap_check ( IMAP\Connection $imap):stdClass|false | Check current mailbox
imap_clearflag_full ( IMAP\Connection $imap, string $sequence, string $flag, int $options = 0):true | Clears flags on messages
imap_close ( IMAP\Connection $imap, int $flags = 0):true | Close an IMAP stream
imap_create ( IMAP\Connection $imap, string $mailbox):bool | Create a new mailbox
imap_createmailbox ( IMAP\Connection $imap, string $mailbox):bool | Create a new mailbox
imap_delete ( IMAP\Connection $imap, string $message_nums, int $flags = 0):true | Mark a message for deletion from current mailbox
imap_deletemailbox ( IMAP\Connection $imap, string $mailbox):bool | Delete a mailbox
imap_errors ( ):array|false | Returns all of the IMAP errors that have occurred
imap_expunge ( IMAP\Connection $imap):true | Delete all messages marked for deletion
imap_fetch_overview ( IMAP\Connection $imap, string $sequence, int $flags = 0):array|false | Read an overview of the information in the headers of the given message
imap_fetchbody ( IMAP\Connection $imap, int $message_num, string $section, int $flags = 0):string|false | Fetch a particular section of the body of the message
imap_fetchheader ( IMAP\Connection $imap, int $message_num, int $flags = 0):string|false | Returns header for a message
imap_fetchmime ( IMAP\Connection $imap, int $message_num, string $section, int $flags = 0):string|false | Fetch MIME headers for a particular section of the message
imap_fetchstructure ( IMAP\Connection $imap, int $message_num, int $flags = 0):stdClass|false | Read the structure of a particular message
imap_fetchtext ( IMAP\Connection $imap, int $message_num, int $flags = 0):string|false | Read the message body
imap_gc ( IMAP\Connection $imap, int $flags):true | Clears IMAP cache
imap_get_quota ( IMAP\Connection $imap, string $quota_root):array|false | Retrieve the quota level settings, and usage statics per mailbox
imap_get_quotaroot ( IMAP\Connection $imap, string $mailbox):array|false | Retrieve the quota settings per user
imap_getacl ( IMAP\Connection $imap, string $mailbox):array|false | Gets the ACL for a given mailbox
imap_getmailboxes ( IMAP\Connection $imap, string $reference, string $pattern):array|false | Read the list of mailboxes, returning detailed information on each one
imap_getsubscribed ( IMAP\Connection $imap, string $reference, string $pattern):array|false | List all the subscribed mailboxes
imap_header ( IMAP\Connection $imap, int $message_num, int $from_length = 0, int $subject_length = 0):stdClass|false | Read the header of the message
imap_headerinfo ( IMAP\Connection $imap, int $message_num, int $from_length = 0, int $subject_length = 0):stdClass|false | Read the header of the message
imap_headers ( IMAP\Connection $imap):array|false | Returns headers for all messages in a mailbox
imap_is_open ( IMAP\Connection $imap):bool | Check if the  stream is still valid
imap_last_error ( ):string|false | Gets the last IMAP error that occurred during this page request
imap_list ( IMAP\Connection $imap, string $reference, string $pattern):array|false | Read the list of mailboxes
imap_listmailbox ( IMAP\Connection $imap, string $reference, string $pattern):array|false | Read the list of mailboxes
imap_listscan ( IMAP\Connection $imap, string $reference, string $pattern, string $content):array|false | Returns the list of mailboxes that matches the given text
imap_listsubscribed ( IMAP\Connection $imap, string $reference, string $pattern):array|false | List all the subscribed mailboxes
imap_lsub ( IMAP\Connection $imap, string $reference, string $pattern):array|false | List all the subscribed mailboxes
imap_mail_compose ( array $envelope, array $bodies):string|false | Create a MIME message based on given envelope and body sections
imap_mail_copy ( IMAP\Connection $imap, string $message_nums, string $mailbox, int $flags = 0):bool | Copy specified messages to a mailbox
imap_mail_move ( IMAP\Connection $imap, string $message_nums, string $mailbox, int $flags = 0):bool | Move specified messages to a mailbox
imap_mail ( string $to, string $subject, string $message,  $additional_headers = refnull;,  $cc = refnull;,  $bcc = refnull;,  $return_path = refnull;):bool | Send an email message
imap_mailboxmsginfo ( IMAP\Connection $imap):stdClass | Get information about the current mailbox
imap_mime_header_decode ( string $string):array|false | Decode MIME header elements
imap_msgno ( IMAP\Connection $imap, int $message_uid):int | Gets the message sequence number for the given UID
imap_mutf7_to_utf8 ( string $string):string|false | Decode a modified UTF-7 string to UTF-8
imap_num_msg ( IMAP\Connection $imap):int|false | Gets the number of messages in the current mailbox
imap_num_recent ( IMAP\Connection $imap):int | Gets the number of recent messages in current mailbox
imap_open ( string $mailbox, string $user, string $password, int $flags = 0, int $retries = 0, array $options = []):IMAP\Connection|false | Open an  stream to a mailbox
imap_ping ( IMAP\Connection $imap):bool | Check if the IMAP stream is still active
imap_qprint ( string $string):string|false | Convert a quoted-printable string to an 8 bit string
imap_rename ( IMAP\Connection $imap, string $from, string $to):bool | Rename an old mailbox to new mailbox
imap_renamemailbox ( IMAP\Connection $imap, string $from, string $to):bool | Rename an old mailbox to new mailbox
imap_reopen ( IMAP\Connection $imap, string $mailbox, int $flags = 0, int $retries = 0):bool | Reopen  stream to new mailbox
imap_rfc822_parse_adrlist ( string $string, string $default_hostname):array | Parses an address string
imap_rfc822_parse_headers ( string $headers, string $default_hostname = "UNKNOWN"):stdClass | Parse mail headers from a string
imap_rfc822_write_address ( string $mailbox, string $hostname, string $personal):string|false | Returns a properly formatted email address given the mailbox, host, and personal info
imap_savebody ( IMAP\Connection $imap,  $file, int $message_num, string $section = "", int $flags = 0):bool | Save a specific body section to a file
imap_scan ( IMAP\Connection $imap, string $reference, string $pattern, string $content):array|false | Returns the list of mailboxes that matches the given text
imap_scanmailbox ( IMAP\Connection $imap, string $reference, string $pattern, string $content):array|false | Returns the list of mailboxes that matches the given text
imap_search ( IMAP\Connection $imap, string $criteria, int $flags = SE_FREE, string $charset = ""):array|false | This function returns an array of messages matching the given search criteria
imap_set_quota ( IMAP\Connection $imap, string $quota_root, int $mailbox_size):bool | Sets a quota for a given mailbox
imap_setacl ( IMAP\Connection $imap, string $mailbox, string $user_id, string $rights):bool | Sets the ACL for a given mailbox
imap_setflag_full ( IMAP\Connection $imap, string $sequence, string $flag, int $options = 0):true | Sets flags on messages
imap_sort ( IMAP\Connection $imap, int $criteria, bool $reverse, int $flags = 0,  $search_criteria = refnull;,  $charset = refnull;):array|false | Gets and sort messages
imap_status ( IMAP\Connection $imap, string $mailbox, int $flags):stdClass|false | Returns status information on a mailbox
imap_subscribe ( IMAP\Connection $imap, string $mailbox):bool | Subscribe to a mailbox
imap_thread ( IMAP\Connection $imap, int $flags = SE_FREE):array|false | Returns a tree of threaded message
imap_timeout ( int $timeout_type, int $timeout = -1):int|bool | Set or fetch imap timeout
imap_uid ( IMAP\Connection $imap, int $message_num):int|false | This function returns the UID for the given message sequence number
imap_undelete ( IMAP\Connection $imap, string $message_nums, int $flags = 0):true | Unmark the message which is marked deleted
imap_unsubscribe ( IMAP\Connection $imap, string $mailbox):bool | Unsubscribe from a mailbox
imap_utf7_decode ( string $string):string|false | Decodes a modified UTF-7 encoded string
imap_utf7_encode ( string $string):string | Converts ISO-8859-1 string to modified UTF-7 text
imap_utf8_to_mutf7 ( string $string):string|false | Encode a UTF-8 string to modified UTF-7
imap_utf8 ( string $mime_encoded_text):string | Converts MIME-encoded text to UTF-8
assert_options ( int $option, mixed $value):mixed | Set/get the various assert flags
assert ( mixed $assertion,  $description = refnull;):bool | Checks an assertion
cli_get_process_title ( ):string|null | Returns the current process title
cli_set_process_title ( string $title):bool | Sets the process title
dl ( string $extension_filename):bool | Loads a PHP extension at runtime
extension_loaded ( string $extension):bool | Find out whether an extension is loaded
gc_collect_cycles ( ):int | Forces collection of any existing garbage cycles
gc_disable ( ):void | Deactivates the circular reference collector
gc_enable ( ):void | Activates the circular reference collector
gc_enabled ( ):bool | Returns status of the circular reference collector
gc_mem_caches ( ):int | Reclaims memory used by the Zend Engine memory manager
gc_status ( ):array | Gets information about the garbage collector
get_cfg_var ( string $option):string|array|false | Gets the value of a PHP configuration option
get_current_user ( ):string | Gets the name of the owner of the current PHP script
get_defined_constants ( bool $categorize = reffalse;):array | Returns an associative array with the names of all the constants and their values
get_extension_funcs ( string $extension):array|false | Returns an array with the names of the functions of a module
get_include_path ( ):string|false | Gets the current include_path configuration option
get_included_files ( ):array | Returns an array with the names of included or required files
get_loaded_extensions ( bool $zend_extensions = reffalse;):array | Returns an array with the names of all modules compiled and loaded
get_magic_quotes_gpc ( ):false | Gets the current configuration setting of magic_quotes_gpc
get_magic_quotes_runtime ( ):false | Gets the current active configuration setting of magic_quotes_runtime
get_required_files ( ):array | Returns an array with the names of included or required files
get_resources (  $type = refnull;):array | Returns active resources
getenv (  $name = refnull;, bool $local_only = reffalse;):string|array|false | Gets the value of a single or all environment variables
getlastmod ( ):int|false | Gets time of last page modification
getmygid ( ):int|false | Get PHP script owner's GID
getmyinode ( ):int|false | Gets the inode of the current script
getmypid ( ):int|false | Gets PHP's process ID
getmyuid ( ):int|false | Gets PHP script owner's UID
getopt ( string $short_options, array $long_options = [], int $rest_index = refnull;):array|false | Gets options from the command line argument list
getrusage ( int $mode = 0):array|false | Gets the current resource usages
ini_alter ( string $option,  $value):string|false | Sets the value of a configuration option
ini_get_all (  $extension = refnull;, bool $details = reftrue;):array|false | Gets all configuration options
ini_get ( string $option):string|false | Gets the value of a configuration option
ini_parse_quantity ( string $shorthand):int | Get interpreted size from ini shorthand syntax
ini_restore ( string $option):void | Restores the value of a configuration option
ini_set ( string $option,  $value):string|false | Sets the value of a configuration option
memory_get_peak_usage ( bool $real_usage = reffalse;):int | Returns the peak of memory allocated by PHP
memory_get_usage ( bool $real_usage = reffalse;):int | Returns the amount of memory allocated to PHP
memory_reset_peak_usage ( ):void | Reset the peak memory usage
php_ini_loaded_file ( ):string|false | Retrieve a path to the loaded php.ini file
php_ini_scanned_files ( ):string|false | Return a list of .ini files parsed from the additional ini dir
php_sapi_name ( ):string|false | Returns the type of interface between web server and PHP
php_uname ( string $mode = "a"):string | Returns information about the operating system PHP is running on
phpcredits ( int $flags = CREDITS_ALL):true | Prints out the credits for PHP
phpinfo ( int $flags = INFO_ALL):true | Outputs information about PHP's configuration
phpversion (  $extension = refnull;):string|false | Gets the current PHP version
putenv ( string $assignment):bool | Sets the value of an environment variable
restore_include_path ( ):void | Restores the value of the include_path configuration option
set_include_path ( string $include_path):string|false | Sets the include_path configuration option
set_time_limit ( int $seconds):bool | Limits the maximum execution time
sys_get_temp_dir ( ):string | Returns directory path used for temporary files
version_compare ( string $version1, string $version2,  $operator = refnull;):int|bool | Compares two "PHP-standardized" version number strings
zend_thread_id ( ):int | Returns a unique identifier for the current thread
zend_version ( ):string | Gets the version of the current Zend engine
inotify_add_watch ( resource $inotify_instance, string $pathname, int $mask):int | Add a watch to an initialized inotify instance
inotify_init ( ):resource | Initialize an inotify instance
inotify_queue_len ( resource $inotify_instance):int | Return a number upper than zero if there are pending events
inotify_read ( resource $inotify_instance):array | Read events from an inotify instance
inotify_rm_watch ( resource $inotify_instance, int $watch_descriptor):bool | Remove an existing watch from an inotify instance
intl_error_name ( int $errorCode):string | Get symbolic name for a given error code
intl_get_error_code ( ):int | Get the last error code
intl_get_error_message ( ):string | Get description of the last error
intl_is_failure ( int $errorCode):bool | Check whether the given error code indicates failure
json_decode ( string $json,  $associative = refnull;, int $depth = 512, int $flags = 0):mixed | Decodes a JSON string
json_encode ( mixed $value, int $flags = 0, int $depth = 512):string|false | Returns the JSON representation of a value
json_last_error_msg ( ):string | Returns the error string of the last json_encode() or json_decode() call
json_last_error ( ):int | Returns the last error occurred
json_validate ( string $json, int $depth = 512, int $flags = 0):bool | Checks if a string contains valid JSON
ldap_8859_to_t61 ( string $value):string|false | Translate 8859 characters to t61 characters
ldap_add_ext ( LDAP\Connection $ldap, string $dn, array $entry,  $controls = refnull;):LDAP\Result|false | Add entries to LDAP directory
ldap_add ( LDAP\Connection $ldap, string $dn, array $entry,  $controls = refnull;):bool | Add entries to LDAP directory
ldap_bind_ext ( LDAP\Connection $ldap,  $dn = refnull;,  $password = refnull;,  $controls = refnull;):LDAP\Result|false | Bind to LDAP directory
ldap_bind ( LDAP\Connection $ldap,  $dn = refnull;,  $password = refnull;):bool | Bind to LDAP directory
ldap_close ( LDAP\Connection $ldap):bool | Unbind from LDAP directory
ldap_compare ( LDAP\Connection $ldap, string $dn, string $attribute, string $value,  $controls = refnull;):bool|int | Compare value of attribute found in entry specified with DN
ldap_connect_wallet (  $uri = refnull;, string $wallet, string $password, int $auth_mode = GSLC_SSL_NO_AUTH):LDAP\Connection|false | Connect to an LDAP server
ldap_connect (  $uri = refnull;):LDAP\Connection|false | Connect to an LDAP server
ldap_control_paged_result_response ( resource $link, resource $result, string $cookie, int $estimated):bool | Retrieve the LDAP pagination cookie
ldap_control_paged_result ( resource $link, int $pagesize, bool $iscritical = reffalse;, string $cookie = ""):bool | Send LDAP pagination control
ldap_count_entries ( LDAP\Connection $ldap, LDAP\Result $result):int | Count the number of entries in a search
ldap_count_references ( LDAP\Connection $ldap, LDAP\Result $result):int | Counts the number of references in a search result
ldap_delete_ext ( LDAP\Connection $ldap, string $dn,  $controls = refnull;):LDAP\Result|false | Delete an entry from a directory
ldap_delete ( LDAP\Connection $ldap, string $dn,  $controls = refnull;):bool | Delete an entry from a directory
ldap_dn2ufn ( string $dn):string|false | Convert DN to User Friendly Naming format
ldap_err2str ( int $errno):string | Convert LDAP error number into string error message
ldap_errno ( LDAP\Connection $ldap):int | Return the LDAP error number of the last LDAP command
ldap_error ( LDAP\Connection $ldap):string | Return the LDAP error message of the last LDAP command
ldap_escape ( string $value, string $ignore = "", int $flags = 0):string | Escape a string for use in an LDAP filter or DN
ldap_exop_passwd ( LDAP\Connection $ldap, string $user = "", string $old_password = "", string $new_password = "", array $controls = refnull;):string|bool | PASSWD extended operation helper
ldap_exop_refresh ( LDAP\Connection $ldap, string $dn, int $ttl):int|false | Refresh extended operation helper
ldap_exop_sync ( LDAP\Connection $ldap, string $request_oid, string $request_data = refnull;, array $controls = refnull;, string $response_data = refnull;, string $response_oid = refnull;):LDAP\Result|bool | Performs an extended operation
ldap_exop_whoami ( LDAP\Connection $ldap):string|false | WHOAMI extended operation helper
ldap_exop ( LDAP\Connection $ldap, string $request_oid, string $request_data = refnull;, array $controls = refnull;, string $response_data, string $response_oid):mixed | Performs an extended operation
ldap_explode_dn ( string $dn, int $with_attrib):array|false | Splits DN into its component parts
ldap_first_attribute ( LDAP\Connection $ldap, LDAP\ResultEntry $entry):string|false | Return first attribute
ldap_first_entry ( LDAP\Connection $ldap, LDAP\Result $result):LDAP\ResultEntry|false | Return first result id
ldap_first_reference ( LDAP\Connection $ldap, LDAP\Result $result):LDAP\ResultEntry|false | Return first reference
ldap_free_result ( LDAP\Result $result):bool | Free result memory
ldap_get_attributes ( LDAP\Connection $ldap, LDAP\ResultEntry $entry):array | Get attributes from a search result entry
ldap_get_dn ( LDAP\Connection $ldap, LDAP\ResultEntry $entry):string|false | Get the DN of a result entry
ldap_get_entries ( LDAP\Connection $ldap, LDAP\Result $result):array|false | Get all result entries
ldap_get_option ( LDAP\Connection $ldap, int $option,  $value = refnull;):bool | Get the current value for given option
ldap_get_values_len ( LDAP\Connection $ldap, LDAP\ResultEntry $entry, string $attribute):array|false | Get all binary values from a result entry
ldap_get_values ( LDAP\Connection $ldap, LDAP\ResultEntry $entry, string $attribute):array|false | Get all values from a result entry
ldap_list (  $ldap,  $base,  $filter, array $attributes = [], int $attributes_only = 0, int $sizelimit = -1, int $timelimit = -1, int $deref = LDAP_DEREF_NEVER,  $controls = refnull;):LDAP\Result|array|false | Single-level search
ldap_mod_add_ext ( LDAP\Connection $ldap, string $dn, array $entry,  $controls = refnull;):LDAP\Result|false | Add attribute values to current attributes
ldap_mod_add ( LDAP\Connection $ldap, string $dn, array $entry,  $controls = refnull;):bool | Add attribute values to current attributes
ldap_mod_del_ext ( LDAP\Connection $ldap, string $dn, array $entry,  $controls = refnull;):LDAP\Result|false | Delete attribute values from current attributes
ldap_mod_del ( LDAP\Connection $ldap, string $dn, array $entry,  $controls = refnull;):bool | Delete attribute values from current attributes
ldap_mod_replace_ext ( LDAP\Connection $ldap, string $dn, array $entry,  $controls = refnull;):LDAP\Result|false | Replace attribute values with new ones
ldap_mod_replace ( LDAP\Connection $ldap, string $dn, array $entry,  $controls = refnull;):bool | Replace attribute values with new ones
ldap_modify_batch ( LDAP\Connection $ldap, string $dn, array $modifications_info,  $controls = refnull;):bool | Batch and execute modifications on an LDAP entry
ldap_modify ( LDAP\Connection $ldap, string $dn, array $entry,  $controls = refnull;):bool | Replace attribute values with new ones
ldap_next_attribute ( LDAP\Connection $ldap, LDAP\ResultEntry $entry):string|false | Get the next attribute in result
ldap_next_entry ( LDAP\Connection $ldap, LDAP\ResultEntry $entry):LDAP\ResultEntry|false | Get next result entry
ldap_next_reference ( LDAP\Connection $ldap, LDAP\ResultEntry $entry):LDAP\ResultEntry|false | Get next reference
ldap_parse_exop ( LDAP\Connection $ldap, LDAP\Result $result, string $response_data = refnull;, string $response_oid = refnull;):bool | Parse result object from an LDAP extended operation
ldap_parse_reference ( LDAP\Connection $ldap, LDAP\ResultEntry $entry, array $referrals):bool | Extract information from reference entry
ldap_parse_result ( LDAP\Connection $ldap, LDAP\Result $result, int $error_code, string $matched_dn = refnull;, string $error_message = refnull;, array $referrals = refnull;, array $controls = refnull;):bool | Extract information from result
ldap_read (  $ldap,  $base,  $filter, array $attributes = [], int $attributes_only = 0, int $sizelimit = -1, int $timelimit = -1, int $deref = LDAP_DEREF_NEVER,  $controls = refnull;):LDAP\Result|array|false | Read an entry
ldap_rename_ext ( LDAP\Connection $ldap, string $dn, string $new_rdn, string $new_parent, bool $delete_old_rdn,  $controls = refnull;):LDAP\Result|false | Modify the name of an entry
ldap_rename ( LDAP\Connection $ldap, string $dn, string $new_rdn, string $new_parent, bool $delete_old_rdn,  $controls = refnull;):bool | Modify the name of an entry
ldap_sasl_bind ( LDAP\Connection $ldap,  $dn = refnull;,  $password = refnull;,  $mech = refnull;,  $realm = refnull;,  $authc_id = refnull;,  $authz_id = refnull;,  $props = refnull;):bool | Bind to LDAP directory using SASL
ldap_search (  $ldap,  $base,  $filter, array $attributes = [], int $attributes_only = 0, int $sizelimit = -1, int $timelimit = -1, int $deref = LDAP_DEREF_NEVER,  $controls = refnull;):LDAP\Result|array|false | Search LDAP tree
ldap_set_option (  $ldap, int $option,  $value):bool | Set the value of the given option
ldap_set_rebind_proc ( LDAP\Connection $ldap,  $callback):bool | Set a callback function to do re-binds on referral chasing
ldap_sort ( resource $link, resource $result, string $sortfilter):bool | Sort LDAP result entries on the client side
ldap_start_tls ( LDAP\Connection $ldap):bool | Start TLS
ldap_t61_to_8859 ( string $value):string|false | Translate t61 characters to 8859 characters
ldap_unbind ( LDAP\Connection $ldap):bool | Unbind from LDAP directory
libxml_clear_errors ( ):void | Clear libxml error buffer
libxml_disable_entity_loader ( bool $disable = reftrue;):bool | Disable the ability to load external entities
libxml_get_errors ( ):array | Retrieve array of errors
libxml_get_external_entity_loader ( ):callable|null | Get the current external entity loader
libxml_get_last_error ( ):LibXMLError|false | Retrieve last error from libxml
libxml_set_external_entity_loader (  $resolver_function):bool | Changes the default external entity loader
libxml_set_streams_context ( resource $context):void | Set the streams context for the next libxml document load or write
libxml_use_internal_errors (  $use_errors = refnull;):bool | Disable libxml errors and allow user to fetch error information as needed
lzf_compress ( string $data):string | LZF compression
lzf_decompress ( string $data):string | LZF decompression
lzf_optimized_for ( ):int | Determines what LZF extension was optimized for
ezmlm_hash ( string $addr):int | Calculate the hash value needed by EZMLM
mail ( string $to, string $subject, string $message,  $additional_headers = [], string $additional_params = ""):bool | Send mail
mailparse_determine_best_xfer_encoding ( resource $fp):string | Gets the best way of encoding
mailparse_msg_create ( ):resource | Create a mime mail resource
mailparse_msg_extract_part_file ( resource $mimemail, mixed $filename, callable $callbackfunc):string | Extracts/decodes a message section
mailparse_msg_extract_part ( resource $mimemail, string $msgbody, callable $callbackfunc):void | Extracts/decodes a message section
mailparse_msg_extract_whole_part_file ( resource $mimemail, string $filename, callable $callbackfunc):string | Extracts a message section including headers without decoding the transfer encoding
mailparse_msg_free ( resource $mimemail):bool | Frees a MIME resource
mailparse_msg_get_part_data ( resource $mimemail):array | Returns an associative array of info about the message
mailparse_msg_get_part ( resource $mimemail, string $mimesection):resource | Returns a handle on a given section in a mimemessage
mailparse_msg_get_structure ( resource $mimemail):array | Returns an array of mime section names in the supplied message
mailparse_msg_parse_file ( string $filename):resource | Parses a file
mailparse_msg_parse ( resource $mimemail, string $data):bool | Incrementally parse data into buffer
mailparse_rfc822_parse_addresses ( string $addresses):array | Parse RFC 822 compliant addresses
mailparse_stream_encode ( resource $sourcefp, resource $destfp, string $encoding):bool | Streams data from source file pointer, apply encoding and write to destfp
mailparse_uudecode_all ( resource $fp):array | Scans the data from fp and extract each embedded uuencoded file
abs (  $num):int|float | Absolute value
acos ( float $num):float | Arc cosine
acosh ( float $num):float | Inverse hyperbolic cosine
asin ( float $num):float | Arc sine
asinh ( float $num):float | Inverse hyperbolic sine
atan ( float $num):float | Arc tangent
atan2 ( float $y, float $x):float | Arc tangent of two variables
atanh ( float $num):float | Inverse hyperbolic tangent
base_convert ( string $num, int $from_base, int $to_base):string | Convert a number between arbitrary bases
bindec ( string $binary_string):int|float | Binary to decimal
ceil (  $num):float | Round fractions up
cos ( float $num):float | Cosine
cosh ( float $num):float | Hyperbolic cosine
decbin ( int $num):string | Decimal to binary
dechex ( int $num):string | Decimal to hexadecimal
decoct ( int $num):string | Decimal to octal
deg2rad ( float $num):float | Converts the number in degrees to the radian equivalent
exp ( float $num):float | Calculates the exponent of
expm1 ( float $num):float | Returns , computed in a way that is accurate even    when the value of number is close to zero
fdiv ( float $num1, float $num2):float | Divides two numbers, according to IEEE 754
floor (  $num):float | Round fractions down
fmod ( float $num1, float $num2):float | Returns the floating point remainder (modulo) of the division   of the arguments
hexdec ( string $hex_string):int|float | Hexadecimal to decimal
hypot ( float $x, float $y):float | Calculate the length of the hypotenuse of a right-angle triangle
intdiv ( int $num1, int $num2):int | Integer division
is_finite ( float $num):bool | Checks whether a float is finite
is_infinite ( float $num):bool | Checks whether a float is infinite
is_nan ( float $num):bool | Checks whether a float is NAN
log ( float $num, float $base = M_E):float | Natural logarithm
log10 ( float $num):float | Base-10 logarithm
log1p ( float $num):float | Returns log(1 + number), computed in a way that is accurate even when    the value of number is close to zero
max ( mixed $value, mixed $values):mixed | Find highest value
min ( mixed $value, mixed $values):mixed | Find lowest value
octdec ( string $octal_string):int|float | Octal to decimal
pi ( ):float | Get value of pi
pow ( mixed $num, mixed $exponent):int|float|object | Exponential expression
rad2deg ( float $num):float | Converts the radian number to the equivalent number in degrees
round (  $num, int $precision = 0, int $mode = PHP_ROUND_HALF_UP):float | Rounds a float
sin ( float $num):float | Sine
sinh ( float $num):float | Hyperbolic sine
sqrt ( float $num):float | Square root
tan ( float $num):float | Tangent
tanh ( float $num):float | Hyperbolic tangent
mb_check_encoding (  $value = refnull;,  $encoding = refnull;):bool | Check if strings are valid for the specified encoding
mb_chr ( int $codepoint,  $encoding = refnull;):string|false | Return character by Unicode code point value
mb_convert_case ( string $string, int $mode,  $encoding = refnull;):string | Perform case folding on a string
mb_convert_encoding (  $string, string $to_encoding,  $from_encoding = refnull;):array|string|false | Convert a string from one character encoding to another
mb_convert_kana ( string $string, string $mode = "KV",  $encoding = refnull;):string | Convert "kana" one from another ("zen-kaku", "han-kaku" and more)
mb_convert_variables ( string $to_encoding,  $from_encoding, mixed $var, mixed $vars):string|false | Convert character code in variable(s)
mb_decode_mimeheader ( string $string):string | Decode string in MIME header field
mb_decode_numericentity ( string $string, array $map,  $encoding = refnull;):string | Decode HTML numeric string reference to character
mb_detect_encoding ( string $string,  $encodings = refnull;, bool $strict = reffalse;):string|false | Detect character encoding
mb_detect_order (  $encoding = refnull;):array|bool | Set/Get character encoding detection order
mb_encode_mimeheader ( string $string,  $charset = refnull;,  $transfer_encoding = refnull;, string $newline = "\r\n", int $indent = 0):string | Encode string for MIME header
mb_encode_numericentity ( string $string, array $map,  $encoding = refnull;, bool $hex = reffalse;):string | Encode character to HTML numeric string reference
mb_encoding_aliases ( string $encoding):array | Get aliases of a known encoding type
mb_ereg_match ( string $pattern, string $string,  $options = refnull;):bool | Regular expression match for multibyte string
mb_ereg_replace_callback ( string $pattern, callable $callback, string $string,  $options = refnull;):string|false|null | Perform a regular expression search and replace with multibyte support using a callback
mb_ereg_replace ( string $pattern, string $replacement, string $string,  $options = refnull;):string|false|null | Replace regular expression with multibyte support
mb_ereg_search_getpos ( ):int | Returns start point for next regular expression match
mb_ereg_search_getregs ( ):array|false | Retrieve the result from the last multibyte regular expression match
mb_ereg_search_init ( string $string,  $pattern = refnull;,  $options = refnull;):bool | Setup string and regular expression for a multibyte regular expression match
mb_ereg_search_pos (  $pattern = refnull;,  $options = refnull;):array|false | Returns position and length of a matched part of the multibyte regular expression for a predefined multibyte string
mb_ereg_search_regs (  $pattern = refnull;,  $options = refnull;):array|false | Returns the matched part of a multibyte regular expression
mb_ereg_search_setpos ( int $offset):bool | Set start point of next regular expression match
mb_ereg_search (  $pattern = refnull;,  $options = refnull;):bool | Multibyte regular expression match for predefined multibyte string
mb_ereg ( string $pattern, string $string, array $matches = refnull;):bool | Regular expression match with multibyte support
mb_eregi_replace ( string $pattern, string $replacement, string $string,  $options = refnull;):string|false|null | Replace regular expression with multibyte support ignoring case
mb_eregi ( string $pattern, string $string, array $matches = refnull;):bool | Regular expression match ignoring case with multibyte support
mb_get_info ( string $type = "all"):array|string|int|false | Get internal settings of mbstring
mb_http_input (  $type = refnull;):array|string|false | Detect HTTP input character encoding
mb_http_output (  $encoding = refnull;):string|bool | Set/Get HTTP output character encoding
mb_internal_encoding (  $encoding = refnull;):string|bool | Set/Get internal character encoding
mb_language (  $language = refnull;):string|bool | Set/Get current language
mb_list_encodings ( ):array | Returns an array of all supported encodings
mb_ord ( string $string,  $encoding = refnull;):int|false | Get Unicode code point of character
mb_output_handler ( string $string, int $status):string | Callback function converts character encoding in output buffer
mb_parse_str ( string $string, array $result):bool | Parse GET/POST/COOKIE data and set global variable
mb_preferred_mime_name ( string $encoding):string|false | Get MIME charset string
mb_regex_encoding (  $encoding = refnull;):string|bool | Set/Get character encoding for multibyte regex
mb_regex_set_options (  $options = refnull;):string | Set/Get the default options for mbregex functions
mb_scrub ( string $string,  $encoding = refnull;):string | Replace ill-formed byte sequences with the substitute character
mb_send_mail ( string $to, string $subject, string $message,  $additional_headers = [],  $additional_params = refnull;):bool | Send encoded mail
mb_split ( string $pattern, string $string, int $limit = -1):array|false | Split multibyte string using regular expression
mb_str_pad ( string $string, int $length, string $pad_string = " ", int $pad_type = STR_PAD_RIGHT,  $encoding = refnull;):string | Pad a multibyte string to a certain length with another multibyte string
mb_str_split ( string $string, int $length = 1,  $encoding = refnull;):array | Given a multibyte string, return an array of its characters
mb_strcut ( string $string, int $start,  $length = refnull;,  $encoding = refnull;):string | Get part of string
mb_strimwidth ( string $string, int $start, int $width, string $trim_marker = "",  $encoding = refnull;):string | Get truncated string with specified width
mb_stripos ( string $haystack, string $needle, int $offset = 0,  $encoding = refnull;):int|false | Finds position of first occurrence of a string within another, case insensitive
mb_stristr ( string $haystack, string $needle, bool $before_needle = reffalse;,  $encoding = refnull;):string|false | Finds first occurrence of a string within another, case insensitive
mb_strlen ( string $string,  $encoding = refnull;):int | Get string length
mb_strpos ( string $haystack, string $needle, int $offset = 0,  $encoding = refnull;):int|false | Find position of first occurrence of string in a string
mb_strrchr ( string $haystack, string $needle, bool $before_needle = reffalse;,  $encoding = refnull;):string|false | Finds the last occurrence of a character in a string within another
mb_strrichr ( string $haystack, string $needle, bool $before_needle = reffalse;,  $encoding = refnull;):string|false | Finds the last occurrence of a character in a string within another, case insensitive
mb_strripos ( string $haystack, string $needle, int $offset = 0,  $encoding = refnull;):int|false | Finds position of last occurrence of a string within another, case insensitive
mb_strrpos ( string $haystack, string $needle, int $offset = 0,  $encoding = refnull;):int|false | Find position of last occurrence of a string in a string
mb_strstr ( string $haystack, string $needle, bool $before_needle = reffalse;,  $encoding = refnull;):string|false | Finds first occurrence of a string within another
mb_strtolower ( string $string,  $encoding = refnull;):string | Make a string lowercase
mb_strtoupper ( string $string,  $encoding = refnull;):string | Make a string uppercase
mb_strwidth ( string $string,  $encoding = refnull;):int | Return width of string
mb_substitute_character (  $substitute_character = refnull;):string|int|bool | Set/Get substitution character
mb_substr_count ( string $haystack, string $needle,  $encoding = refnull;):int | Count the number of substring occurrences
mb_substr ( string $string, int $start,  $length = refnull;,  $encoding = refnull;):string | Get part of string
mcrypt_create_iv ( int $size, int $source = MCRYPT_DEV_URANDOM):string | Creates an initialization vector (IV) from a random source
mcrypt_decrypt ( string $cipher, string $key, string $data, string $mode, string $iv):string|false | Decrypts crypttext with given parameters
mcrypt_enc_get_algorithms_name ( resource $td):string | Returns the name of the opened algorithm
mcrypt_enc_get_block_size ( resource $td):int | Returns the blocksize of the opened algorithm
mcrypt_enc_get_iv_size ( resource $td):int | Returns the size of the IV of the opened algorithm
mcrypt_enc_get_key_size ( resource $td):int | Returns the maximum supported keysize of the opened mode
mcrypt_enc_get_modes_name ( resource $td):string | Returns the name of the opened mode
mcrypt_enc_get_supported_key_sizes ( resource $td):array | Returns an array with the supported keysizes of the opened algorithm
mcrypt_enc_is_block_algorithm_mode ( resource $td):bool | Checks whether the encryption of the opened mode works on blocks
mcrypt_enc_is_block_algorithm ( resource $td):bool | Checks whether the algorithm of the opened mode is a block algorithm
mcrypt_enc_is_block_mode ( resource $td):bool | Checks whether the opened mode outputs blocks
mcrypt_enc_self_test ( resource $td):int | Runs a self test on the opened module
mcrypt_encrypt ( string $cipher, string $key, string $data, string $mode, string $iv):string|false | Encrypts plaintext with given parameters
mcrypt_generic_deinit ( resource $td):bool | This function deinitializes an encryption module
mcrypt_generic_init ( resource $td, string $key, string $iv):int | This function initializes all buffers needed for encryption
mcrypt_generic ( resource $td, string $data):string | This function encrypts data
mcrypt_get_block_size ( int $cipher):int|false | Gets the block size of the specified cipher
mcrypt_get_cipher_name ( int $cipher):string | Gets the name of the specified cipher
mcrypt_get_iv_size ( string $cipher, string $mode):int | Returns the size of the IV belonging to a specific cipher/mode combination
mcrypt_get_key_size ( int $cipher):int|false | Gets the key size of the specified cipher
mcrypt_list_algorithms ( string $lib_dir = ini_get("mcrypt.algorithms_dir")):array | Gets an array of all supported ciphers
mcrypt_list_modes ( string $lib_dir = ini_get("mcrypt.modes_dir")):array | Gets an array of all supported modes
mcrypt_module_close ( resource $td):bool | Closes the mcrypt module
mcrypt_module_get_algo_block_size ( string $algorithm, string $lib_dir):int | Returns the blocksize of the specified algorithm
mcrypt_module_get_algo_key_size ( string $algorithm, string $lib_dir):int | Returns the maximum supported keysize of the opened mode
mcrypt_module_get_supported_key_sizes ( string $algorithm, string $lib_dir):array | Returns an array with the supported keysizes of the opened algorithm
mcrypt_module_is_block_algorithm_mode ( string $mode, string $lib_dir):bool | Returns if the specified module is a block algorithm or not
mcrypt_module_is_block_algorithm ( string $algorithm, string $lib_dir):bool | This function checks whether the specified algorithm is a block algorithm
mcrypt_module_is_block_mode ( string $mode, string $lib_dir):bool | Returns if the specified mode outputs blocks or not
mcrypt_module_open ( string $algorithm, string $algorithm_directory, string $mode, string $mode_directory):resource | Opens the module of the algorithm and the mode to be used
mcrypt_module_self_test ( string $algorithm, string $lib_dir):bool | This function runs a self test on the specified module
mdecrypt_generic ( resource $td, string $data):string | Decrypts data
memcache_debug ( bool $on_off):bool | Turn debug output on/off
mhash_count ( ):int | Gets the highest available hash ID
mhash_get_block_size ( int $algo):int|false | Gets the block size of the specified hash
mhash_get_hash_name ( int $algo):string|false | Gets the name of the specified hash
mhash_keygen_s2k ( int $algo, string $password, string $salt, int $length):string|false | Generates a key
mhash ( int $algo, string $data,  $key = refnull;):string|false | Computes hash
connection_aborted ( ):int | Check whether client disconnected
connection_status ( ):int | Returns connection status bitfield
constant ( string $name):mixed | Returns the value of a constant
define ( string $constant_name, mixed $value, bool $case_insensitive = reffalse;):bool | Defines a named constant
defined ( string $constant_name):bool | Checks whether a given named constant exists
die ( ): | Equivalent to
eval ( string $code):mixed | Evaluate a string as PHP code
exit ( string $status):void | Output a message and terminate the current script
get_browser (  $user_agent = refnull;, bool $return_array = reffalse;):object|array|false | Tells what the user's browser is capable of
__halt_compiler ( ):void | Halts the compiler execution
highlight_file ( string $filename, bool $return = reffalse;):string|bool | Syntax highlighting of a file
highlight_string ( string $string, bool $return = reffalse;):string|bool | Syntax highlighting of a string
hrtime ( bool $as_number = reffalse;):array|int|float|false | Get the system's high resolution time
ignore_user_abort (  $enable = refnull;):int | Set whether a client disconnect should abort script execution
pack ( string $format, mixed $values):string | Pack data into binary string
php_strip_whitespace ( string $filename):string | Return source with stripped comments and whitespace
sapi_windows_cp_conv (  $in_codepage,  $out_codepage, string $subject):string|null | Convert string from one codepage to another
sapi_windows_cp_get ( string $kind = ""):int | Get current codepage
sapi_windows_cp_is_utf8 ( ):bool | Indicates whether the codepage is UTF-8 compatible
sapi_windows_cp_set ( int $codepage):bool | Set process codepage
sapi_windows_generate_ctrl_event ( int $event, int $pid = 0):bool | Send a CTRL event to another process
sapi_windows_set_ctrl_handler (  $handler, bool $add = reftrue;):bool | Set or remove a CTRL event handler
sapi_windows_vt100_support ( resource $stream,  $enable = refnull;):bool | Get or set VT100 support for the specified stream associated to an output buffer of a Windows console.
show_source ( string $filename, bool $return = reffalse;):string|bool | Syntax highlighting of a file
sleep ( int $seconds):int | Delay execution
sys_getloadavg ( ):array|false | Gets system load average
time_nanosleep ( int $seconds, int $nanoseconds):array|bool | Delay for a number of seconds and nanoseconds
time_sleep_until ( float $timestamp):bool | Make the script sleep until the specified time
uniqid ( string $prefix = "", bool $more_entropy = reffalse;):string | Generate a unique ID
unpack ( string $format, string $string, int $offset = 0):array|false | Unpack data from binary string
usleep ( int $microseconds):void | Delay execution in microseconds
mqseries_back ( resource $hconn, resource $compCode, resource $reason):void | MQSeries MQBACK
mqseries_begin ( resource $hconn, array $beginOptions, resource $compCode, resource $reason):void | MQseries MQBEGIN
mqseries_close ( resource $hconn, resource $hobj, int $options, resource $compCode, resource $reason):void | MQSeries MQCLOSE
mqseries_cmit ( resource $hconn, resource $compCode, resource $reason):void | MQSeries MQCMIT
mqseries_conn ( string $qManagerName, resource $hconn, resource $compCode, resource $reason):void | MQSeries MQCONN
mqseries_connx ( string $qManagerName, array $connOptions, resource $hconn, resource $compCode, resource $reason):void | MQSeries MQCONNX
mqseries_disc ( resource $hconn, resource $compCode, resource $reason):void | MQSeries MQDISC
mqseries_get ( resource $hConn, resource $hObj, array $md, array $gmo, int $bufferLength, string $msg, int $data_length, resource $compCode, resource $reason):void | MQSeries MQGET
mqseries_inq ( resource $hconn, resource $hobj, int $selectorCount, array $selectors, int $intAttrCount, resource $intAttr, int $charAttrLength, resource $charAttr, resource $compCode, resource $reason):void | MQSeries MQINQ
mqseries_open ( resource $hconn, array $objDesc, int $option, resource $hobj, resource $compCode, resource $reason):void | MQSeries MQOPEN
mqseries_put ( resource $hConn, resource $hObj, array $md, array $pmo, string $message, resource $compCode, resource $reason):void | MQSeries MQPUT
mqseries_put1 ( resource $hconn, resource $objDesc, resource $msgDesc, resource $pmo, string $buffer, resource $compCode, resource $reason):void | MQSeries MQPUT1
mqseries_set ( resource $hConn, resource $hObj, int $selectorCount, array $selectors, int $intAttrCount, array $intAttrs, int $charAttrLength, array $charAttrs, resource $compCode, resource $reason):void | MQSeries MQSET
mqseries_strerror ( int $reason):string | Returns the error message corresponding to a result code (MQRC)
mysql_affected_rows ( resource $link_identifier = NULL):int | Get number of affected rows in previous MySQL operation
mysql_client_encoding ( resource $link_identifier = NULL):string | Returns the name of the character set
mysql_close ( resource $link_identifier = NULL):bool | Close MySQL connection
mysql_connect ( string $server = ini_get("mysql.default_host"), string $username = ini_get("mysql.default_user"), string $password = ini_get("mysql.default_password"), bool $new_link = reffalse;, int $client_flags = 0):resource|false | Open a connection to a MySQL Server
mysql_create_db ( string $database_name, resource $link_identifier = NULL):bool | Create a MySQL database
mysql_data_seek ( resource $result, int $row_number):bool | Move internal result pointer
mysql_db_name ( resource $link_identifier = NULL):resource | List databases available on a MySQL server
mysql_db_query ( string $database, string $query, resource $link_identifier = NULL):resource|bool | Selects a database and executes a query on it
mysql_drop_db ( string $database_name, resource $link_identifier = NULL):bool | Drop (delete) a MySQL database
mysql_errno ( resource $link_identifier = NULL):int | Returns the numerical value of the error message from previous MySQL operation
mysql_error ( resource $link_identifier = NULL):string | Returns the text of the error message from previous MySQL operation
mysql_escape_string ( string $unescaped_string):string | Escapes a string for use in a mysql_query
mysql_fetch_array ( resource $result, int $result_type = MYSQL_BOTH):array | Fetch a result row as an associative array, a numeric array, or both
mysql_fetch_assoc ( resource $result):array | Fetch a result row as an associative array
mysql_fetch_field ( resource $result, int $field_offset = 0):object | Get column information from a result and return as an object
mysql_fetch_lengths ( resource $result):array|false | Get the length of each output in a result
mysql_fetch_object ( resource $result, string $class_name, array $params):object | Fetch a result row as an object
mysql_fetch_row ( resource $result):array | Get a result row as an enumerated array
mysql_field_flags ( resource $result, int $field_offset):string|false | Get the flags associated with the specified field in a result
mysql_field_len ( resource $result, int $field_offset):int|false | Returns the length of the specified field
mysql_field_name ( resource $result, int $field_offset):string|false | Get the name of the specified field in a result
mysql_field_seek ( resource $result, int $field_offset):bool | Set result pointer to a specified field offset
mysql_field_table ( resource $result, int $field_offset):string | Get name of the table the specified field is in
mysql_field_type ( resource $result, int $field_offset):string | Get the type of the specified field in a result
mysql_free_result ( resource $result):bool | Free result memory
mysql_get_client_info ( ):string | Get MySQL client info
mysql_get_host_info ( resource $link_identifier = NULL):string|false | Get MySQL host info
mysql_get_proto_info ( resource $link_identifier = NULL):int|false | Get MySQL protocol info
mysql_get_server_info ( resource $link_identifier = NULL):string|false | Get MySQL server info
mysql_info ( resource $link_identifier = NULL):string | Get information about the most recent query
mysql_insert_id ( resource $link_identifier = NULL):int | Get the ID generated in the last query
mysql_list_dbs ( resource $link_identifier = NULL):resource | List databases available on a MySQL server
mysql_list_fields ( string $database_name, string $table_name, resource $link_identifier = NULL):resource | List MySQL table fields
mysql_list_processes ( resource $link_identifier = NULL):resource|false | List MySQL processes
mysql_list_tables ( string $database, resource $link_identifier = NULL):resource|false | List tables in a MySQL database
mysql_num_fields ( resource $result):int|false | Get number of fields in result
mysql_num_rows ( resource $result):int|false | Get number of rows in result
mysql_pconnect ( string $server = ini_get("mysql.default_host"), string $username = ini_get("mysql.default_user"), string $password = ini_get("mysql.default_password"), int $client_flags = 0):resource | Open a persistent connection to a MySQL server
mysql_ping ( resource $link_identifier = NULL):bool | Ping a server connection or reconnect if there is no connection
mysql_query ( string $query, resource $link_identifier = NULL):mixed | Send a MySQL query
mysql_real_escape_string ( string $unescaped_string, resource $link_identifier = NULL):string | Escapes special characters in a string for use in an SQL statement
mysql_result ( resource $result, int $row, mixed $field = 0):string | Get result data
mysql_select_db ( string $database_name, resource $link_identifier = NULL):bool | Select a MySQL database
mysql_set_charset ( string $charset, resource $link_identifier = NULL):bool | Sets the client character set
mysql_stat ( resource $link_identifier = NULL):string | Get current system status
mysql_tablename ( resource $result, int $i):string|false | Get table name of field
mysql_thread_id ( resource $link_identifier = NULL):int|false | Return the current thread ID
mysql_unbuffered_query ( string $query, resource $link_identifier = NULL):resource | Send an SQL query to MySQL without fetching and buffering the result rows
expression ( string $expression):object | Bind prepared statement variables as parameters
getSession ( string $uri):mysql_xdevapi\Session | Connect to a MySQL server
mysqli_connect ( ): | refAlias;
mysqli::escape_string ( ): | refAlias;
mysqli_execute ( ): | refAlias;
mysqli_get_client_stats ( ):array | Returns client per-process statistics
mysqli_get_links_stats ( ):array | Return information about open and cached links
mysqli_report ( ): | refAlias;
mysqli::set_opt ( ): | refAlias;
checkdnsrr ( string $hostname, string $type = "MX"):bool | Check DNS records corresponding to a given Internet host name or IP address
closelog ( ):true | Close connection to system logger
dns_check_record ( string $hostname, string $type = "MX"):bool | Check DNS records corresponding to a given Internet host name or IP address
dns_get_mx ( string $hostname, array $hosts, array $weights = refnull;):bool | Get MX records corresponding to a given Internet host name
dns_get_record ( string $hostname, int $type = DNS_ANY, array $authoritative_name_servers = refnull;, array $additional_records = refnull;, bool $raw = reffalse;):array|false | Fetch DNS Resource Records associated with a hostname
fsockopen ( string $hostname, int $port = -1, int $error_code = refnull;, string $error_message = refnull;,  $timeout = refnull;):resource|false | Open Internet or Unix domain socket connection
gethostbyaddr ( string $ip):string|false | Get the Internet host name corresponding to a given IP address
gethostbyname ( string $hostname):string | Get the IPv4 address corresponding to a given Internet host name
gethostbynamel ( string $hostname):array|false | Get a list of IPv4 addresses corresponding to a given Internet host    name
gethostname ( ):string|false | Gets the host name
getmxrr ( string $hostname, array $hosts, array $weights = refnull;):bool | Get MX records corresponding to a given Internet host name
getprotobyname ( string $protocol):int|false | Get protocol number associated with protocol name
getprotobynumber ( int $protocol):string|false | Get protocol name associated with protocol number
getservbyname ( string $service, string $protocol):int|false | Get port number associated with an Internet service and protocol
getservbyport ( int $port, string $protocol):string|false | Get Internet service which corresponds to port and protocol
header_register_callback ( callable $callback):bool | Call a header function
header_remove (  $name = refnull;):void | Remove previously set headers
header ( string $header, bool $replace = reftrue;, int $response_code = 0):void | Send a raw HTTP header
headers_list ( ):array | Returns a list of response headers sent (or ready to send)
headers_sent ( string $filename = refnull;, int $line = refnull;):bool | Checks if or where headers have been sent
http_response_code ( int $response_code = 0):int|bool | Get or Set the HTTP response code
inet_ntop ( string $ip):string|false | Converts a packed internet address to a human readable representation
inet_pton ( string $ip):string|false | Converts a human readable IP address to its packed in_addr representation
ip2long ( string $ip):int|false | Converts a string containing an (IPv4) Internet Protocol dotted address into a long integer
long2ip ( int $ip):string|false | Converts a long integer address into a string in (IPv4) Internet standard dotted format
net_get_interfaces ( ):array|false | Get network interfaces
openlog ( string $prefix, int $flags, int $facility):bool | Open connection to system logger
pfsockopen ( string $hostname, int $port = -1, int $error_code = refnull;, string $error_message = refnull;,  $timeout = refnull;):resource|false | Open persistent Internet or Unix domain socket connection
setcookie ( string $name, string $value = "", int $expires_or_options = 0, string $path = "", string $domain = "", bool $secure = reffalse;, bool $httponly = reffalse;):bool | Send a cookie
setrawcookie ( string $name, string $value, int $expires_or_options = 0, string $path, string $domain, bool $secure = reffalse;, bool $httponly = reffalse;):bool | Send a cookie without urlencoding the cookie value
socket_get_status ( resource $stream):array | Retrieves header/meta data from streams/file pointers
socket_set_blocking ( resource $stream, bool $enable):bool | Set blocking/non-blocking mode on a stream
socket_set_timeout ( resource $stream, int $seconds, int $microseconds = 0):bool | Set timeout period on a stream
syslog ( int $priority, string $message):true | Generate a system log message
oauth_get_sbs ( string $http_method, string $uri, array $request_parameters):string | Generate a Signature Base String
oauth_urlencode ( string $uri):string | Encode a URI to RFC 3986
oci_bind_array_by_name ( resource $statement, string $param, array $var, int $max_array_length, int $max_item_length = -1, int $type = SQLT_AFC):bool | Binds a PHP array to an Oracle PL/SQL array parameter
oci_bind_by_name ( resource $statement, string $param, mixed $var, int $max_length = -1, int $type = 0):bool | Binds a PHP variable to an Oracle placeholder
oci_cancel ( resource $statement):bool | Cancels reading from cursor
oci_client_version ( ):string | Returns the Oracle client library version
oci_close ( resource $connection):bool|null | Closes an Oracle connection
oci_commit ( resource $connection):bool | Commits the outstanding database transaction
oci_connect ( string $username, string $password,  $connection_string = refnull;, string $encoding = "", int $session_mode = OCI_DEFAULT):resource|false | Connect to an Oracle database
oci_define_by_name ( resource $statement, string $column, mixed $var, int $type = 0):bool | Associates a PHP variable with a column for query fetches
oci_error (  $connection_or_statement = refnull;):array|false | Returns the last error found
oci_execute ( resource $statement, int $mode = OCI_COMMIT_ON_SUCCESS):bool | Executes a statement
oci_fetch_all ( resource $statement, array $output, int $offset = 0, int $limit = -1, int $flags = OCI_FETCHSTATEMENT_BY_COLUMN | OCI_ASSOC):int | Fetches multiple rows from a query into a two-dimensional array
oci_fetch_array ( resource $statement, int $mode = OCI_BOTH | OCI_RETURN_NULLS):array|false | Returns the next row from a query as an associative or numeric array
oci_fetch_assoc ( resource $statement):array|false | Returns the next row from a query as an associative array
oci_fetch_object ( resource $statement, int $mode = OCI_ASSOC | OCI_RETURN_NULLS):stdClass|false | Returns the next row from a query as an object
oci_fetch_row ( resource $statement):array|false | Returns the next row from a query as a numeric array
oci_fetch ( resource $statement):bool | Fetches the next row from a query into internal buffers
oci_field_is_null ( resource $statement,  $column):bool | Checks if a field in the currently fetched row is refnull;
oci_field_name ( resource $statement,  $column):string|false | Returns the name of a field from the statement
oci_field_precision ( resource $statement,  $column):int|false | Tell the precision of a field
oci_field_scale ( resource $statement,  $column):int|false | Tell the scale of the field
oci_field_size ( resource $statement,  $column):int|false | Returns field's size
oci_field_type_raw ( resource $statement,  $column):int|false | Tell the raw Oracle data type of the field
oci_field_type ( resource $statement,  $column):string|int|false | Returns a field's data type name
oci_free_descriptor ( OCILob $lob):bool | Frees a descriptor
oci_free_statement ( resource $statement):bool | Frees all resources associated with statement or cursor
oci_get_implicit_resultset ( resource $statement):resource|false | Returns the next child statement resource from a parent statement resource that has Oracle Database Implicit Result Sets
oci_lob_copy ( OCILob $to, OCILob $from,  $length = refnull;):bool | Copies large object
oci_lob_is_equal ( OCILob $lob1, OCILob $lob2):bool | Compares two LOB/FILE locators for equality
oci_new_collection ( resource $connection, string $type_name,  $schema = refnull;):OCICollection|false | Allocates new collection object
oci_new_connect ( string $username, string $password,  $connection_string = refnull;, string $encoding = "", int $session_mode = OCI_DEFAULT):resource|false | Connect to the Oracle server using a unique connection
oci_new_cursor ( resource $connection):resource|false | Allocates and returns a new cursor (statement handle)
oci_new_descriptor ( resource $connection, int $type = OCI_DTYPE_LOB):OCILob|null | Initializes a new empty LOB or FILE descriptor
oci_num_fields ( resource $statement):int | Returns the number of result columns in a statement
oci_num_rows ( resource $statement):int|false | Returns number of rows affected during statement execution
oci_parse ( resource $connection, string $sql):resource|false | Prepares an Oracle statement for execution
oci_password_change ( resource $connection, string $username, string $old_password, string $new_password):bool | Changes password of Oracle's user
oci_pconnect ( string $username, string $password,  $connection_string = refnull;, string $encoding = "", int $session_mode = OCI_DEFAULT):resource|false | Connect to an Oracle database using a persistent connection
oci_register_taf_callback ( resource $connection,  $callback):bool | Register a user-defined callback function for Oracle Database TAF
oci_result ( resource $statement,  $column):mixed | Returns field's value from the fetched row
oci_rollback ( resource $connection):bool | Rolls back the outstanding database transaction
oci_server_version ( resource $connection):string|false | Returns the Oracle Database version
oci_set_action ( resource $connection, string $action):bool | Sets the action name
oci_set_call_timeout ( resource $connection, int $timeout):bool | Sets a millisecond timeout for database calls
oci_set_client_identifier ( resource $connection, string $client_id):bool | Sets the client identifier
oci_set_client_info ( resource $connection, string $client_info):bool | Sets the client information
oci_set_db_operation ( resource $connection, string $action):bool | Sets the database operation
oci_set_edition ( string $edition):bool | Sets the database edition
oci_set_module_name ( resource $connection, string $name):bool | Sets the module name
oci_set_prefetch_lob ( resource $statement, int $prefetch_lob_size):bool | Sets the amount of data prefetched for each CLOB or BLOB.
oci_set_prefetch ( resource $statement, int $rows):bool | Sets number of rows to be prefetched by queries
oci_statement_type ( resource $statement):string|false | Returns the type of a statement
oci_unregister_taf_callback ( resource $connection):bool | Unregister a user-defined callback function for Oracle Database TAF
opcache_compile_file ( string $filename):bool | Compiles and caches a PHP script without executing it
opcache_get_configuration ( ):array|false | Get configuration information about the cache
opcache_get_status ( bool $include_scripts = reftrue;):array|false | Get status information about the cache
opcache_invalidate ( string $filename, bool $force = reffalse;):bool | Invalidates a cached script
opcache_is_script_cached ( string $filename):bool | Tells whether a script is cached in OPCache
opcache_reset ( ):bool | Resets the contents of the opcode cache
openal_buffer_create ( ):resource | Generate OpenAL buffer
openal_buffer_data ( resource $buffer, int $format, string $data, int $freq):bool | Load a buffer with data
openal_buffer_destroy ( resource $buffer):bool | Destroys an OpenAL buffer
openal_buffer_get ( resource $buffer, int $property):int|false | Retrieve an OpenAL buffer property
openal_buffer_loadwav ( resource $buffer, string $wavfile):bool | Load a .wav file into a buffer
openal_context_create ( resource $device):resource | Create an audio processing context
openal_context_current ( resource $context):bool | Make the specified context current
openal_context_destroy ( resource $context):bool | Destroys a context
openal_context_process ( resource $context):bool | Process the specified context
openal_context_suspend ( resource $context):bool | Suspend the specified context
openal_device_close ( resource $device):bool | Close an OpenAL device
openal_device_open ( string $device_desc):resource | Initialize the OpenAL audio layer
openal_listener_get ( int $property):mixed | Retrieve a listener property
openal_listener_set ( int $property, mixed $setting):bool | Set a listener property
openal_source_create ( ):resource | Generate a source resource
openal_source_destroy ( resource $source):bool | Destroy a source resource
openal_source_get ( resource $source, int $property):mixed | Retrieve an OpenAL source property
openal_source_pause ( resource $source):bool | Pause the source
openal_source_play ( resource $source):bool | Start playing the source
openal_source_rewind ( resource $source):bool | Rewind the source
openal_source_set ( resource $source, int $property, mixed $setting):bool | Set source property
openal_source_stop ( resource $source):bool | Stop playing the source
openal_stream ( resource $source, int $format, int $rate):resource|false | Begin streaming on a source
openssl_cipher_iv_length ( string $cipher_algo):int|false | Gets the cipher iv length
openssl_cipher_key_length ( string $cipher_algo):int|false | Gets the cipher key length
openssl_cms_decrypt ( string $input_filename, string $output_filename,  $certificate,  $private_key = refnull;, int $encoding = OPENSSL_ENCODING_SMIME):bool | Decrypt a CMS message
openssl_cms_encrypt ( string $input_filename, string $output_filename,  $certificate,  $headers, int $flags = 0, int $encoding = OPENSSL_ENCODING_SMIME, int $cipher_algo = OPENSSL_CIPHER_AES_128_CBC):bool | Encrypt a CMS message
openssl_cms_read ( string $input_filename, array $certificates):bool | Export the CMS file to an array of  certificates
openssl_cms_sign ( string $input_filename, string $output_filename,  $certificate,  $private_key,  $headers, int $flags = 0, int $encoding = OPENSSL_ENCODING_SMIME,  $untrusted_certificates_filename = refnull;):bool | Sign a file
openssl_cms_verify ( string $input_filename, int $flags = 0,  $certificates = refnull;, array $ca_info = [],  $untrusted_certificates_filename = refnull;,  $content = refnull;,  $pk7 = refnull;,  $sigfile = refnull;, int $encoding = OPENSSL_ENCODING_SMIME):bool | Verify a CMS signature
openssl_csr_export_to_file (  $csr, string $output_filename, bool $no_text = reftrue;):bool | Exports a  to a file
openssl_csr_export (  $csr, string $output, bool $no_text = reftrue;):bool | Exports a  as a string
openssl_csr_get_public_key (  $csr, bool $short_names = reftrue;):OpenSSLAsymmetricKey|false | Returns the public key of a
openssl_csr_get_subject (  $csr, bool $short_names = reftrue;):array|false | Returns the subject of a
openssl_csr_new ( array $distinguished_names, OpenSSLAsymmetricKey $private_key,  $options = refnull;,  $extra_attributes = refnull;):OpenSSLCertificateSigningRequest|false | Generates a
openssl_csr_sign (  $csr,  $ca_certificate,  $private_key, int $days,  $options = refnull;, int $serial = 0):OpenSSLCertificate|false | Sign a  with another certificate (or itself) and generate a certificate
openssl_decrypt ( string $data, string $cipher_algo, string $passphrase, int $options = 0, string $iv = "",  $tag = refnull;, string $aad = ""):string|false | Decrypts data
openssl_dh_compute_key ( string $public_key, OpenSSLAsymmetricKey $private_key):string|false | Computes shared secret for public value of remote DH public key and local DH key
openssl_digest ( string $data, string $digest_algo, bool $binary = reffalse;):string|false | Computes a digest
openssl_encrypt ( string $data, string $cipher_algo, string $passphrase, int $options = 0, string $iv = "", string $tag = refnull;, string $aad = "", int $tag_length = 16):string|false | Encrypts data
openssl_error_string ( ):string|false | Return openSSL error message
openssl_free_key ( OpenSSLAsymmetricKey $key):void | Free key resource
openssl_get_cert_locations ( ):array | Retrieve the available certificate locations
openssl_get_cipher_methods ( bool $aliases = reffalse;):array | Gets available cipher methods
openssl_get_curve_names ( ):array|false | Gets list of available curve names for ECC
openssl_get_md_methods ( bool $aliases = reffalse;):array | Gets available digest methods
openssl_get_privatekey (  $private_key,  $passphrase = refnull;):OpenSSLAsymmetricKey|false | Get a private key
openssl_get_publickey (  $public_key):OpenSSLAsymmetricKey|false | Extract public key from certificate and prepare it for use
openssl_open ( string $data, string $output, string $encrypted_key,  $private_key, string $cipher_algo,  $iv = refnull;):bool | Open sealed data
openssl_pbkdf2 ( string $password, string $salt, int $key_length, int $iterations, string $digest_algo = "sha1"):string|false | Generates a PKCS5 v2 PBKDF2 string
openssl_pkcs12_export_to_file (  $certificate, string $output_filename,  $private_key, string $passphrase, array $options = []):bool | Exports a #12 Compatible Certificate Store File
openssl_pkcs12_export (  $certificate, string $output,  $private_key, string $passphrase, array $options = []):bool | Exports a #12 Compatible Certificate Store File to variable
openssl_pkcs12_read ( string $pkcs12, array $certificates, string $passphrase):bool | Parse a #12 Certificate Store into an array
openssl_pkcs7_decrypt ( string $input_filename, string $output_filename,  $certificate,  $private_key = refnull;):bool | Decrypts an S/MIME encrypted message
openssl_pkcs7_encrypt ( string $input_filename, string $output_filename,  $certificate,  $headers, int $flags = 0, int $cipher_algo = OPENSSL_CIPHER_AES_128_CBC):bool | Encrypt an S/MIME message
openssl_pkcs7_read ( string $data, array $certificates):bool | Export the PKCS7 file to an array of  certificates
openssl_pkcs7_sign ( string $input_filename, string $output_filename,  $certificate,  $private_key,  $headers, int $flags = PKCS7_DETACHED,  $untrusted_certificates_filename = refnull;):bool | Sign an S/MIME message
openssl_pkcs7_verify ( string $input_filename, int $flags,  $signers_certificates_filename = refnull;, array $ca_info = [],  $untrusted_certificates_filename = refnull;,  $content = refnull;,  $output_filename = refnull;):bool|int | Verifies the signature of an S/MIME signed message
openssl_pkey_derive (  $public_key,  $private_key, int $key_length = 0):string|false | Computes shared secret for public value of remote and local DH or ECDH key
openssl_pkey_export_to_file (  $key, string $output_filename,  $passphrase = refnull;,  $options = refnull;):bool | Gets an exportable representation of a key into a file
openssl_pkey_export (  $key, string $output,  $passphrase = refnull;,  $options = refnull;):bool | Gets an exportable representation of a key into a string
openssl_pkey_free ( OpenSSLAsymmetricKey $key):void | Frees a private key
openssl_pkey_get_details ( OpenSSLAsymmetricKey $key):array|false | Returns an array with the key details
openssl_pkey_get_private (  $private_key,  $passphrase = refnull;):OpenSSLAsymmetricKey|false | Get a private key
openssl_pkey_get_public (  $public_key):OpenSSLAsymmetricKey|false | Extract public key from certificate and prepare it for use
openssl_pkey_new (  $options = refnull;):OpenSSLAsymmetricKey|false | Generates a new private key
openssl_private_decrypt ( string $data, string $decrypted_data,  $private_key, int $padding = OPENSSL_PKCS1_PADDING):bool | Decrypts data with private key
openssl_private_encrypt ( string $data, string $encrypted_data,  $private_key, int $padding = OPENSSL_PKCS1_PADDING):bool | Encrypts data with private key
openssl_public_decrypt ( string $data, string $decrypted_data,  $public_key, int $padding = OPENSSL_PKCS1_PADDING):bool | Decrypts data with public key
openssl_public_encrypt ( string $data, string $encrypted_data,  $public_key, int $padding = OPENSSL_PKCS1_PADDING):bool | Encrypts data with public key
openssl_random_pseudo_bytes ( int $length, bool $strong_result = refnull;):string | Generate a pseudo-random string of bytes
openssl_seal ( string $data, string $sealed_data, array $encrypted_keys, array $public_key, string $cipher_algo, string $iv = refnull;):int|false | Seal (encrypt) data
openssl_sign ( string $data, string $signature,  $private_key,  $algorithm = OPENSSL_ALGO_SHA1):bool | Generate signature
openssl_spki_export_challenge ( string $spki):string|false | Exports the challenge associated with a signed public key and challenge
openssl_spki_export ( string $spki):string|false | Exports a valid  formatted public key signed public key and challenge
openssl_spki_new ( OpenSSLAsymmetricKey $private_key, string $challenge, int $digest_algo = OPENSSL_ALGO_MD5):string|false | Generate a new signed public key and challenge
openssl_spki_verify ( string $spki):bool | Verifies a signed public key and challenge
openssl_verify ( string $data, string $signature,  $public_key,  $algorithm = OPENSSL_ALGO_SHA1):int|false | Verify signature
openssl_x509_check_private_key (  $certificate,  $private_key):bool | Checks if a private key corresponds to a certificate
openssl_x509_checkpurpose (  $certificate, int $purpose, array $ca_info = [],  $untrusted_certificates_file = refnull;):bool|int | Verifies if a certificate can be used for a particular purpose
openssl_x509_export_to_file (  $certificate, string $output_filename, bool $no_text = reftrue;):bool | Exports a certificate to file
openssl_x509_export (  $certificate, string $output, bool $no_text = reftrue;):bool | Exports a certificate as a string
openssl_x509_fingerprint (  $certificate, string $digest_algo = "sha1", bool $binary = reffalse;):string|false | Calculates the fingerprint, or digest, of a given X.509 certificate
openssl_x509_free ( OpenSSLCertificate $certificate):void | Free certificate resource
openssl_x509_parse (  $certificate, bool $short_names = reftrue;):array|false | Parse an X509 certificate and return the information as an array
openssl_x509_read (  $certificate):OpenSSLCertificate|false | Parse an X.509 certificate and return an object for   it
openssl_x509_verify (  $certificate,  $public_key):int | Verifies digital signature of x509 certificate against a public key
flush ( ):void | Flush system output buffer
ob_clean ( ):bool | Clean (erase) the contents of the active output buffer
ob_end_clean ( ):bool | Clean (erase) the contents of the active output buffer and turn it off
ob_end_flush ( ):bool | Flush (send) the return value of the active output handler    and turn the active output buffer off
ob_flush ( ):bool | Flush (send) the return value of the active output handler
ob_get_clean ( ):string|false | Get the contents of the active output buffer and turn it off
ob_get_contents ( ):string|false | Return the contents of the output buffer
ob_get_flush ( ):string|false | Flush (send) the return value of the active output handler,    return the contents of the active output buffer and turn it off
ob_get_length ( ):int|false | Return the length of the output buffer
ob_get_level ( ):int | Return the nesting level of the output buffering mechanism
ob_get_status ( bool $full_status = reffalse;):array | Get status of output buffers
ob_implicit_flush ( bool $enable = reftrue;):void | Turn implicit flush on/off
ob_list_handlers ( ):array | List all output handlers in use
ob_start ( callable $callback = refnull;, int $chunk_size = 0, int $flags = PHP_OUTPUT_HANDLER_STDFLAGS):bool | Turn on output buffering
output_add_rewrite_var ( string $name, string $value):bool | Add URL rewriter values
output_reset_rewrite_vars ( ):bool | Reset URL rewriter values
parallel\bootstrap ( string $file):void | Bootstrapping
parallel\run ( Closure $task):Future|null | Execution
password_algos ( ):array | Get available password hashing algorithm IDs
password_get_info ( string $hash):array | Returns information about the given hash
password_hash ( string $password,  $algo, array $options = []):string | Creates a password hash
password_needs_rehash ( string $hash,  $algo, array $options = []):bool | Checks if the given hash matches the given options
password_verify ( string $password, string $hash):bool | Verifies that a password matches a hash
pcntl_alarm ( int $seconds):int | Set an alarm clock for delivery of a signal
pcntl_async_signals (  $enable = refnull;):bool | Enable/disable asynchronous signal handling or return the old setting
pcntl_errno ( ):int | Retrieve the error number set by the last pcntl function which failed
pcntl_exec ( string $path, array $args = [], array $env_vars = []):bool | Executes specified program in current process space
pcntl_fork ( ):int | Forks the currently running process
pcntl_get_last_error ( ):int | Retrieve the error number set by the last pcntl function which failed
pcntl_getpriority (  $process_id = refnull;, int $mode = PRIO_PROCESS):int|false | Get the priority of any process
pcntl_rfork ( int $flags, int $signal = 0):int | Manipulates process resources
pcntl_setpriority ( int $priority,  $process_id = refnull;, int $mode = PRIO_PROCESS):bool | Change the priority of any process
pcntl_signal_dispatch ( ):bool | Calls signal handlers for pending signals
pcntl_signal_get_handler ( int $signal):callable|int | Get the current handler for specified signal
pcntl_signal ( int $signal,  $handler, bool $restart_syscalls = reftrue;):bool | Installs a signal handler
pcntl_sigprocmask ( int $mode, array $signals, array $old_signals = refnull;):bool | Sets and retrieves blocked signals
pcntl_sigtimedwait ( array $signals, array $info = [], int $seconds = 0, int $nanoseconds = 0):int|false | Waits for signals, with a timeout
pcntl_sigwaitinfo ( array $signals, array $info = []):int|false | Waits for signals
pcntl_strerror ( int $error_code):string | Retrieve the system error message associated with the given errno
pcntl_unshare ( int $flags):bool | Dissociates parts of the process execution context
pcntl_wait ( int $status, int $flags = 0, array $resource_usage = []):int | Waits on or returns the status of a forked child
pcntl_waitpid ( int $process_id, int $status, int $flags = 0, array $resource_usage = []):int | Waits on or returns the status of a forked child
pcntl_wexitstatus ( int $status):int|false | Returns the return code of a terminated child
pcntl_wifexited ( int $status):bool | Checks if status code represents a normal exit
pcntl_wifsignaled ( int $status):bool | Checks whether the status code represents a termination due to a signal
pcntl_wifstopped ( int $status):bool | Checks whether the child process is currently stopped
pcntl_wstopsig ( int $status):int|false | Returns the signal which caused the child to stop
pcntl_wtermsig ( int $status):int|false | Returns the signal which caused the child to terminate
preg_filter (  $pattern,  $replacement,  $subject, int $limit = -1, int $count = refnull;):string|array|null | Perform a regular expression search and replace
preg_grep ( string $pattern, array $array, int $flags = 0):array|false | Return array entries that match the pattern
preg_last_error_msg ( ):string | Returns the error message of the last PCRE regex execution
preg_last_error ( ):int | Returns the error code of the last PCRE regex execution
preg_match_all ( string $pattern, string $subject, array $matches = refnull;, int $flags = 0, int $offset = 0):int|false | Perform a global regular expression match
preg_match ( string $pattern, string $subject, array $matches = refnull;, int $flags = 0, int $offset = 0):int|false | Perform a regular expression match
preg_quote ( string $str,  $delimiter = refnull;):string | Quote regular expression characters
preg_replace_callback_array ( array $pattern,  $subject, int $limit = -1, int $count = refnull;, int $flags = 0):string|array|null | Perform a regular expression search and replace using callbacks
preg_replace_callback (  $pattern, callable $callback,  $subject, int $limit = -1, int $count = refnull;, int $flags = 0):string|array|null | Perform a regular expression search and replace using a callback
preg_replace (  $pattern,  $replacement,  $subject, int $limit = -1, int $count = refnull;):string|array|null | Perform a regular expression search and replace
preg_split ( string $pattern, string $subject, int $limit = -1, int $flags = 0):array|false | Split string by a regular expression
pg_affected_rows ( PgSql\Result $result):int | Returns number of affected records (tuples)
pg_cancel_query ( PgSql\Connection $connection):bool | Cancel an asynchronous query
pg_client_encoding (  $connection = refnull;):string | Gets the client encoding
pg_close (  $connection = refnull;):true | Closes a PostgreSQL connection
pg_connect_poll ( PgSql\Connection $connection):int | Poll the status of an in-progress asynchronous PostgreSQL connection    attempt
pg_connect ( string $connection_string, int $flags = 0):PgSql\Connection|false | Open a PostgreSQL connection
pg_connection_busy ( PgSql\Connection $connection):bool | Get connection is busy or not
pg_connection_reset ( PgSql\Connection $connection):bool | Reset connection (reconnect)
pg_connection_status ( PgSql\Connection $connection):int | Get connection status
pg_consume_input ( PgSql\Connection $connection):bool | Reads input on the connection
pg_convert ( PgSql\Connection $connection, string $table_name, array $values, int $flags = 0):array|false | Convert associative array values into forms suitable for SQL statements
pg_copy_from ( PgSql\Connection $connection, string $table_name, array $rows, string $separator = "\t", string $null_as = "\\\\N"):bool | Insert records into a table from an array
pg_copy_to ( PgSql\Connection $connection, string $table_name, string $separator = "\t", string $null_as = "\\\\N"):array|false | Copy a table to an array
pg_dbname (  $connection = refnull;):string | Get the database name
pg_delete ( PgSql\Connection $connection, string $table_name, array $conditions, int $flags = PGSQL_DML_EXEC):string|bool | Deletes records
pg_end_copy (  $connection = refnull;):bool | Sync with PostgreSQL backend
pg_escape_bytea ( PgSql\Connection $connection, string $data):string | Escape a string for insertion into a bytea field
pg_escape_identifier ( PgSql\Connection $connection, string $data):string | Escape a identifier for insertion into a text field
pg_escape_literal ( PgSql\Connection $connection, string $data):string | Escape a literal for insertion into a text field
pg_escape_string ( PgSql\Connection $connection, string $data):string | Escape a string for query
pg_execute ( PgSql\Connection $connection, string $stmtname, array $params):PgSql\Result|false | Sends a request to execute a prepared statement with given parameters, and waits for the result
pg_fetch_all_columns ( PgSql\Result $result, int $field = 0):array | Fetches all rows in a particular result column as an array
pg_fetch_all ( PgSql\Result $result, int $mode = PGSQL_ASSOC):array | Fetches all rows from a result as an array
pg_fetch_array ( PgSql\Result $result,  $row = refnull;, int $mode = PGSQL_BOTH):array|false | Fetch a row as an array
pg_fetch_assoc ( PgSql\Result $result,  $row = refnull;):array|false | Fetch a row as an associative array
pg_fetch_object ( PgSql\Result $result,  $row = refnull;, string $class = "stdClass", array $constructor_args = []):object|false | Fetch a row as an object
pg_fetch_result ( PgSql\Result $result, int $row, mixed $field):string|false|null | Returns values from a result instance
pg_fetch_row ( PgSql\Result $result,  $row = refnull;, int $mode = PGSQL_NUM):array|false | Get a row as an enumerated array
pg_field_is_null ( PgSql\Result $result, int $row, mixed $field):int | Test if a field is SQL
pg_field_name ( PgSql\Result $result, int $field):string | Returns the name of a field
pg_field_num ( PgSql\Result $result, string $field):int | Returns the field number of the named field
pg_field_prtlen ( PgSql\Result $result, int $row_number, mixed $field_name_or_number):int | Returns the printed length
pg_field_size ( PgSql\Result $result, int $field):int | Returns the internal storage size of the named field
pg_field_table ( PgSql\Result $result, int $field, bool $oid_only = reffalse;):string|int|false | Returns the name or oid of the tables field
pg_field_type_oid ( PgSql\Result $result, int $field):string|int | Returns the type ID (OID) for the corresponding field number
pg_field_type ( PgSql\Result $result, int $field):string | Returns the type name for the corresponding field number
pg_flush ( PgSql\Connection $connection):int|bool | Flush outbound query data on the connection
pg_free_result ( PgSql\Result $result):bool | Free result memory
pg_get_notify ( PgSql\Connection $connection, int $mode = PGSQL_ASSOC):array|false | Gets SQL NOTIFY message
pg_get_pid ( PgSql\Connection $connection):int | Gets the backend's process ID
pg_get_result ( PgSql\Connection $connection):PgSql\Result|false | Get asynchronous query result
pg_host (  $connection = refnull;):string | Returns the host name associated with the connection
pg_insert ( PgSql\Connection $connection, string $table_name, array $values, int $flags = PGSQL_DML_EXEC):PgSql\Result|string|bool | Insert array into table
pg_last_error (  $connection = refnull;):string | Get the last error message string of a connection
pg_last_notice ( PgSql\Connection $connection, int $mode = PGSQL_NOTICE_LAST):array|string|bool | Returns the last notice message from PostgreSQL server
pg_last_oid ( PgSql\Result $result):string|int|false | Returns the last row's OID
pg_lo_close ( PgSql\Lob $lob):bool | Close a large object
pg_lo_create ( PgSql\Connection $connection, mixed $object_id):int | Create a large object
pg_lo_export ( PgSql\Connection $connection, int $oid, string $pathname):bool | Export a large object to file
pg_lo_import ( PgSql\Connection $connection, string $pathname, mixed $object_id):int | Import a large object from file
pg_lo_open ( PgSql\Connection $connection, int $oid, string $mode):PgSql\Lob|false | Open a large object
pg_lo_read_all ( PgSql\Lob $lob):int | Reads an entire large object and send straight to browser
pg_lo_read ( PgSql\Lob $lob, int $length = 8192):string|false | Read a large object
pg_lo_seek ( PgSql\Lob $lob, int $offset, int $whence = SEEK_CUR):bool | Seeks position within a large object
pg_lo_tell ( PgSql\Lob $lob):int | Returns current seek position a of large object
pg_lo_truncate ( PgSql\Lob $lob, int $size):bool | Truncates a large object
pg_lo_unlink ( PgSql\Connection $connection, int $oid):bool | Delete a large object
pg_lo_write ( PgSql\Lob $lob, string $data,  $length = refnull;):int|false | Write to a large object
pg_meta_data ( PgSql\Connection $connection, string $table_name, bool $extended = reffalse;):array|false | Get meta data for table
pg_num_fields ( PgSql\Result $result):int | Returns the number of fields in a result
pg_num_rows ( PgSql\Result $result):int | Returns the number of rows in a result
pg_options (  $connection = refnull;):string | Get the options associated with the connection
pg_parameter_status ( PgSql\Connection $connection, string $param_name):string | Looks up a current parameter setting of the server
pg_pconnect ( string $connection_string, int $flags = 0):PgSql\Connection|false | Open a persistent PostgreSQL connection
pg_ping (  $connection = refnull;):bool | Ping database connection
pg_port (  $connection = refnull;):string | Return the port number associated with the connection
pg_prepare ( PgSql\Connection $connection, string $stmtname, string $query):PgSql\Result|false | Submits a request to create a prepared statement with the    given parameters, and waits for completion
pg_put_line ( PgSql\Connection $connection, string $data):bool | Send a NULL-terminated string to PostgreSQL backend
pg_query_params ( PgSql\Connection $connection, string $query, array $params):PgSql\Result|false | Submits a command to the server and waits for the result, with the ability to pass parameters separately from the SQL command text
pg_query ( PgSql\Connection $connection, string $query):PgSql\Result|false | Execute a query
pg_result_error_field ( PgSql\Result $result, int $field_code):string|false|null | Returns an individual field of an error report
pg_result_error ( PgSql\Result $result):string|false | Get error message associated with result
pg_result_seek ( PgSql\Result $result, int $row):bool | Set internal row offset in result instance
pg_result_status ( PgSql\Result $result, int $mode = PGSQL_STATUS_LONG):string|int | Get status of query result
pg_select ( PgSql\Connection $connection, string $table_name, array $conditions, int $flags = PGSQL_DML_EXEC, int $mode = PGSQL_ASSOC):array|string|false | Select records
pg_send_execute ( PgSql\Connection $connection, string $statement_name, array $params):int|bool | Sends a request to execute a prepared statement with given parameters, without waiting for the result(s)
pg_send_prepare ( PgSql\Connection $connection, string $statement_name, string $query):int|bool | Sends a request to create a prepared statement with the given parameters, without waiting for completion
pg_send_query_params ( PgSql\Connection $connection, string $query, array $params):int|bool | Submits a command and separate parameters to the server without waiting for the result(s)
pg_send_query ( PgSql\Connection $connection, string $query):int|bool | Sends asynchronous query
pg_set_client_encoding ( PgSql\Connection $connection, string $encoding):int | Set the client encoding
pg_set_error_context_visibility (  $connection = refnull;):string | Get the last error message string of a connection
pg_set_error_verbosity (  $connection = refnull;):string | Get the last error message string of a connection
pg_socket ( PgSql\Connection $connection):resource|false | Get a read only handle to the socket underlying a PostgreSQL connection
pg_trace ( string $filename, string $mode = "w",  $connection = refnull;, int $trace_mode = 0):bool | Enable tracing a PostgreSQL connection
pg_transaction_status ( PgSql\Connection $connection):int | Returns the current in-transaction status of the server
pg_tty (  $connection = refnull;):string | Return the TTY name associated with the connection
pg_unescape_bytea ( string $string):string | Unescape binary for bytea type
pg_untrace (  $connection = refnull;):true | Disable tracing of a PostgreSQL connection
pg_update ( PgSql\Connection $connection, string $table_name, array $values, array $conditions, int $flags = PGSQL_DML_EXEC):string|bool | Update table
pg_version (  $connection = refnull;):array | Returns an array with client, protocol and server version (when available)
phpdbg_break_file ( string $file, int $line):void | Inserts a breakpoint at a line in a file
phpdbg_break_function ( string $function):void | Inserts a breakpoint at entry to a function
phpdbg_break_method ( string $class, string $method):void | Inserts a breakpoint at entry to a method
phpdbg_break_next ( ):void | Inserts a breakpoint at the next opcode
phpdbg_clear ( ):void | Clears all breakpoints
phpdbg_color ( int $element, string $color):void | Sets the color of certain elements
phpdbg_end_oplog ( array $options = []):array|null | 
phpdbg_exec ( string $context):string|bool | Attempts to set the execution context
phpdbg_get_executable ( array $options = []):array | 
phpdbg_prompt ( string $string):void | Sets the command prompt
phpdbg_start_oplog ( ):void | 
posix_access ( string $filename, int $flags = 0):bool | Determine accessibility of a file
posix_ctermid ( ):string|false | Get path name of controlling terminal
posix_eaccess ( string $filename, int $flags = 0):bool | Determine accessibility of a file
posix_errno ( ):int | Retrieve the error number set by the last posix function that failed
posix_fpathconf (  $file_descriptor, int $name):int|false | Returns the value of a configurable limit
posix_get_last_error ( ):int | Retrieve the error number set by the last posix function that failed
posix_getcwd ( ):string|false | Pathname of current directory
posix_getegid ( ):int | Return the effective group ID of the current process
posix_geteuid ( ):int | Return the effective user ID of the current process
posix_getgid ( ):int | Return the real group ID of the current process
posix_getgrgid ( int $group_id):array|false | Return info about a group by group id
posix_getgrnam ( string $name):array|false | Return info about a group by name
posix_getgroups ( ):array|false | Return the group set of the current process
posix_getlogin ( ):string|false | Return login name
posix_getpgid ( int $process_id):int|false | Get process group id for job control
posix_getpgrp ( ):int | Return the current process group identifier
posix_getpid ( ):int | Return the current process identifier
posix_getppid ( ):int | Return the parent process identifier
posix_getpwnam ( string $username):array|false | Return info about a user by username
posix_getpwuid ( int $user_id):array|false | Return info about a user by user id
posix_getrlimit (  $resource = refnull;):array|false | Return info about system resource limits
posix_getsid ( int $process_id):int|false | Get the current sid of the process
posix_getuid ( ):int | Return the real user ID of the current process
posix_initgroups ( string $username, int $group_id):bool | Calculate the group access list
posix_isatty (  $file_descriptor):bool | Determine if a file descriptor is an interactive terminal
posix_kill ( int $process_id, int $signal):bool | Send a signal to a process
posix_mkfifo ( string $filename, int $permissions):bool | Create a fifo special file (a named pipe)
posix_mknod ( string $filename, int $flags, int $major = 0, int $minor = 0):bool | Create a special or ordinary file (POSIX.1)
posix_pathconf ( string $path, int $name):int|false | Returns the value of a configurable limit
posix_setegid ( int $group_id):bool | Set the effective GID of the current process
posix_seteuid ( int $user_id):bool | Set the effective UID of the current process
posix_setgid ( int $group_id):bool | Set the GID of the current process
posix_setpgid ( int $process_id, int $process_group_id):bool | Set process group id for job control
posix_setrlimit ( int $resource, int $soft_limit, int $hard_limit):bool | Set system resource limits
posix_setsid ( ):int | Make the current process a session leader
posix_setuid ( int $user_id):bool | Set the UID of the current process
posix_strerror ( int $error_code):string | Retrieve the system error message associated with the given errno
posix_sysconf ( int $conf_id):int | Returns system runtime information
posix_times ( ):array|false | Get process times
posix_ttyname (  $file_descriptor):string|false | Determine terminal device name
posix_uname ( ):array|false | Get system name
ps_add_bookmark ( resource $psdoc, string $text, int $parent = 0, int $open = 0):int | Add bookmark to current page
ps_add_launchlink ( resource $psdoc, float $llx, float $lly, float $urx, float $ury, string $filename):bool | Adds link which launches file
ps_add_locallink ( resource $psdoc, float $llx, float $lly, float $urx, float $ury, int $page, string $dest):bool | Adds link to a page in the same document
ps_add_note ( resource $psdoc, float $llx, float $lly, float $urx, float $ury, string $contents, string $title, string $icon, int $open):bool | Adds note to current page
ps_add_pdflink ( resource $psdoc, float $llx, float $lly, float $urx, float $ury, string $filename, int $page, string $dest):bool | Adds link to a page in a second pdf document
ps_add_weblink ( resource $psdoc, float $llx, float $lly, float $urx, float $ury, string $url):bool | Adds link to a web location
ps_arc ( resource $psdoc, float $x, float $y, float $radius, float $alpha, float $beta):bool | Draws an arc counterclockwise
ps_arcn ( resource $psdoc, float $x, float $y, float $radius, float $alpha, float $beta):bool | Draws an arc clockwise
ps_begin_page ( resource $psdoc, float $width, float $height):bool | Start a new page
ps_begin_pattern ( resource $psdoc, float $width, float $height, float $xstep, float $ystep, int $painttype):int|false | Start a new pattern
ps_begin_template ( resource $psdoc, float $width, float $height):int | Start a new template
ps_circle ( resource $psdoc, float $x, float $y, float $radius):bool | Draws a circle
ps_clip ( resource $psdoc):bool | Clips drawing to current path
ps_close_image ( resource $psdoc, int $imageid):void|false | Closes image and frees memory
ps_close ( resource $psdoc):bool | Closes a PostScript document
ps_closepath_stroke ( resource $psdoc):bool | Closes and strokes path
ps_closepath ( resource $psdoc):bool | Closes path
ps_continue_text ( resource $psdoc, string $text):bool | Continue text in next line
ps_curveto ( resource $psdoc, float $x1, float $y1, float $x2, float $y2, float $x3, float $y3):bool | Draws a curve
ps_delete ( resource $psdoc):bool | Deletes all resources of a PostScript document
ps_end_page ( resource $psdoc):bool | End a page
ps_end_pattern ( resource $psdoc):bool | End a pattern
ps_end_template ( resource $psdoc):bool | End a template
ps_fill_stroke ( resource $psdoc):bool | Fills and strokes the current path
ps_fill ( resource $psdoc):bool | Fills the current path
ps_findfont ( resource $psdoc, string $fontname, string $encoding, bool $embed = reffalse;):int | Loads a font
ps_get_buffer ( resource $psdoc):string | Fetches the full buffer containig the generated PS data
ps_get_parameter ( resource $psdoc, string $name, float $modifier):string|false | Gets certain parameters
ps_get_value ( resource $psdoc, string $name, float $modifier):float | Gets certain values
ps_hyphenate ( resource $psdoc, string $text):array|false | Hyphenates a word
ps_include_file ( resource $psdoc, string $file):bool | Reads an external file with raw PostScript code
ps_lineto ( resource $psdoc, float $x, float $y):bool | Draws a line
ps_makespotcolor ( resource $psdoc, string $name, int $reserved = 0):int | Create spot color
ps_moveto ( resource $psdoc, float $x, float $y):bool | Sets current point
ps_new ( ):resource|false | Creates a new PostScript document object
ps_open_file ( resource $psdoc, string $filename):bool | Opens a file for output
ps_open_image_file ( resource $psdoc, string $type, string $filename, string $stringparam, int $intparam = 0):int | Opens image from file
ps_open_image ( resource $psdoc, string $type, string $source, string $data, int $lenght, int $width, int $height, int $components, int $bpc, string $params):int | Reads an image for later placement
ps_open_memory_image ( resource $psdoc, int $gd):int | Takes an GD image and returns an image for placement in a PS document
ps_place_image ( resource $psdoc, int $imageid, float $x, float $y, float $scale):bool | Places image on the page
ps_rect ( resource $psdoc, float $x, float $y, float $width, float $height):bool | Draws a rectangle
ps_restore ( resource $psdoc):bool | Restore previously save context
ps_rotate ( resource $psdoc, float $rot):bool | Sets rotation factor
ps_save ( resource $psdoc):bool | Save current context
ps_scale ( resource $psdoc, float $x, float $y):bool | Sets scaling factor
ps_set_border_color ( resource $psdoc, float $red, float $green, float $blue):bool | Sets color of border for annotations
ps_set_border_dash ( resource $psdoc, float $black, float $white):bool | Sets length of dashes for border of annotations
ps_set_border_style ( resource $psdoc, string $style, float $width):bool | Sets border style of annotations
ps_set_info ( resource $p, string $key, string $val):bool | Sets information fields of document
ps_set_parameter ( resource $psdoc, string $name, string $value):bool | Sets certain parameters
ps_set_text_pos ( resource $psdoc, float $x, float $y):bool | Sets position for text output
ps_set_value ( resource $psdoc, string $name, float $value):bool | Sets certain values
ps_setcolor ( resource $psdoc, string $type, string $colorspace, float $c1, float $c2, float $c3, float $c4):bool | Sets current color
ps_setdash ( resource $psdoc, float $on, float $off):bool | Sets appearance of a dashed line
ps_setflat ( resource $psdoc, float $value):bool | Sets flatness
ps_setfont ( resource $psdoc, int $fontid, float $size):bool | Sets font to use for following output
ps_setgray ( resource $psdoc, float $gray):bool | Sets gray value
ps_setlinecap ( resource $psdoc, int $type):bool | Sets appearance of line ends
ps_setlinejoin ( resource $psdoc, int $type):bool | Sets how contected lines are joined
ps_setlinewidth ( resource $psdoc, float $width):bool | Sets width of a line
ps_setmiterlimit ( resource $psdoc, float $value):bool | Sets the miter limit
ps_setoverprintmode ( resource $psdoc, int $mode):bool | Sets overprint mode
ps_setpolydash ( resource $psdoc, float $arr):bool | Sets appearance of a dashed line
ps_shading_pattern ( resource $psdoc, int $shadingid, string $optlist):int|false | Creates a pattern based on a shading
ps_shading ( resource $psdoc, string $type, float $x0, float $y0, float $x1, float $y1, float $c1, float $c2, float $c3, float $c4, string $optlist):int|false | Creates a shading for later use
ps_shfill ( resource $psdoc, int $shadingid):bool | Fills an area with a shading
ps_show_boxed ( resource $psdoc, string $text, float $left, float $bottom, float $width, float $height, string $hmode, string $feature):int | Output text in a box
ps_show_xy ( resource $psdoc, string $text, float $x, float $y):bool | Output text at given position
ps_show_xy2 ( resource $psdoc, string $text, int $len, float $xcoor, float $ycoor):bool | Output text at position
ps_show ( resource $psdoc, string $text):bool | Output text
ps_show2 ( resource $psdoc, string $text, int $len):bool | Output a text at current position
ps_string_geometry ( resource $psdoc, string $text, int $fontid = 0, float $size = 0.0):array | Gets geometry of a string
ps_stringwidth ( resource $psdoc, string $text, int $fontid = 0, float $size = 0.0):float | Gets width of a string
ps_stroke ( resource $psdoc):bool | Draws the current path
ps_symbol_name ( resource $psdoc, int $ord, int $fontid = 0):string | Gets name of a glyph
ps_symbol_width ( resource $psdoc, int $ord, int $fontid = 0, float $size = 0.0):float | Gets width of a glyph
ps_symbol ( resource $psdoc, int $ord):bool | Output a glyph
ps_translate ( resource $psdoc, float $x, float $y):bool | Sets translation
pspell_add_to_personal ( PSpell\Dictionary $dictionary, string $word):bool | Add the word to a personal wordlist
pspell_add_to_session ( PSpell\Dictionary $dictionary, string $word):bool | Add the word to the wordlist in the current session
pspell_check ( PSpell\Dictionary $dictionary, string $word):bool | Check a word
pspell_clear_session ( PSpell\Dictionary $dictionary):bool | Clear the current session
pspell_config_create ( string $language, string $spelling = "", string $jargon = "", string $encoding = ""):PSpell\Config | Create a config used to open a dictionary
pspell_config_data_dir ( PSpell\Config $config, string $directory):bool | Location of language data files
pspell_config_dict_dir ( PSpell\Config $config, string $directory):bool | Location of the main word list
pspell_config_ignore ( PSpell\Config $config, int $min_length):bool | Ignore words less than N characters long
pspell_config_mode ( PSpell\Config $config, int $mode):bool | Change the mode number of suggestions returned
pspell_config_personal ( PSpell\Config $config, string $filename):bool | Set a file that contains personal wordlist
pspell_config_repl ( PSpell\Config $config, string $filename):bool | Set a file that contains replacement pairs
pspell_config_runtogether ( PSpell\Config $config, bool $allow):bool | Consider run-together words as valid compounds
pspell_config_save_repl ( PSpell\Config $config, bool $save):bool | Determine whether to save a replacement pairs list   along with the wordlist
pspell_new_config ( PSpell\Config $config):PSpell\Dictionary|false | Load a new dictionary with settings based on a given config
pspell_new_personal ( string $filename, string $language, string $spelling = "", string $jargon = "", string $encoding = "", int $mode = 0):PSpell\Dictionary|false | Load a new dictionary with personal wordlist
pspell_new ( string $language, string $spelling = "", string $jargon = "", string $encoding = "", int $mode = 0):PSpell\Dictionary|false | Load a new dictionary
pspell_save_wordlist ( PSpell\Dictionary $dictionary):bool | Save the personal wordlist to a file
pspell_store_replacement ( PSpell\Dictionary $dictionary, string $misspelled, string $correct):bool | Store a replacement pair for a word
pspell_suggest ( PSpell\Dictionary $dictionary, string $word):array|false | Suggest spellings of a word
radius_acct_open ( ):resource | Creates a Radius handle for accounting
radius_add_server ( resource $radius_handle, string $hostname, int $port, string $secret, int $timeout, int $max_tries):bool | Adds a server
radius_auth_open ( ):resource | Creates a Radius handle for authentication
radius_close ( resource $radius_handle):bool | Frees all ressources
radius_config ( resource $radius_handle, string $file):bool | Causes the library to read the given configuration file
radius_create_request ( resource $radius_handle, int $type):bool | Create accounting or authentication request
radius_cvt_addr ( string $data):string | Converts raw data to IP-Address
radius_cvt_int ( string $data):int | Converts raw data to integer
radius_cvt_string ( string $data):string | Converts raw data to string
radius_demangle_mppe_key ( resource $radius_handle, string $mangled):string | Derives mppe-keys from mangled data
radius_demangle ( resource $radius_handle, string $mangled):string | Demangles data
radius_get_attr ( resource $radius_handle):mixed | Extracts an attribute
radius_get_tagged_attr_data ( string $data):string|false | Extracts the data from a tagged attribute
radius_get_tagged_attr_tag ( string $data):int|false | Extracts the tag from a tagged attribute
radius_get_vendor_attr ( string $data):array | Extracts a vendor specific attribute
radius_put_addr ( resource $radius_handle, int $type, string $addr, int $options = 0, int $tag):bool | Attaches an IP address attribute
radius_put_attr ( resource $radius_handle, int $type, string $value, int $options = 0, int $tag):bool | Attaches a binary attribute
radius_put_int ( resource $radius_handle, int $type, int $value, int $options = 0, int $tag):bool | Attaches an integer attribute
radius_put_string ( resource $radius_handle, int $type, string $value, int $options = 0, int $tag):bool | Attaches a string attribute
radius_put_vendor_addr ( resource $radius_handle, int $vendor, int $type, string $addr):bool | Attaches a vendor specific IP address attribute
radius_put_vendor_attr ( resource $radius_handle, int $vendor, int $type, string $value, int $options = 0, int $tag):bool | Attaches a vendor specific binary attribute
radius_put_vendor_int ( resource $radius_handle, int $vendor, int $type, int $value, int $options = 0, int $tag):bool | Attaches a vendor specific integer attribute
radius_put_vendor_string ( resource $radius_handle, int $vendor, int $type, string $value, int $options = 0, int $tag):bool | Attaches a vendor specific string attribute
radius_request_authenticator ( resource $radius_handle):string | Returns the request authenticator
radius_salt_encrypt_attr ( resource $radius_handle, string $data):string|false | Salt-encrypts a value
radius_send_request ( resource $radius_handle):int | Sends the request and waits for a reply
radius_server_secret ( resource $radius_handle):string | Returns the shared secret
radius_strerror ( resource $radius_handle):string | Returns an error message
getrandmax ( ):int | Show largest possible random value
lcg_value ( ):float | Combined linear congruential generator
mt_getrandmax ( ):int | Show largest possible random value
mt_rand ( ):int | Generate a random value via the Mersenne Twister Random Number Generator
mt_srand (  $seed = refnull;, int $mode = MT_RAND_MT19937):void | Seeds the Mersenne Twister Random Number Generator
rand ( ):int | Generate a random integer
random_bytes ( int $length):string | Get cryptographically secure random bytes
random_int ( int $min, int $max):int | Get a cryptographically secure, uniformly selected integer
srand (  $seed = refnull;, int $mode = MT_RAND_MT19937):void | Seed the random number generator
rar_wrapper_cache_stats ( ):string | Cache hits and misses for the URL wrapper
readline_add_history ( string $prompt):bool | Adds a line to the history
readline_callback_handler_install ( string $prompt, callable $callback):bool | Initializes the readline callback interface and terminal, prints the prompt and returns immediately
readline_callback_handler_remove ( ):bool | Removes a previously installed callback handler and restores terminal settings
readline_callback_read_char ( ):void | Reads a character and informs the readline callback interface when a line is received
readline_clear_history ( ):bool | Clears the history
readline_completion_function ( callable $callback):bool | Registers a completion function
readline_info (  $var_name = refnull;,  $value = refnull;):mixed | Gets/sets various internal readline variables
readline_list_history ( ):array | Lists the history
readline_on_new_line ( ):void | Inform readline that the cursor has moved to a new line
readline_read_history (  $filename = refnull;):bool | Reads the history
readline_redisplay ( ):void | Redraws the display
readline_write_history (  $filename = refnull;):bool | Writes the history
readline (  $prompt = refnull;):string|false | Reads a line
recode_file ( string $request, resource $input, resource $output):bool | Recode from file to file according to recode request
recode_string ( string $request, string $string):string | Recode a string according to a recode request
recode ( string $request, string $string):string | Recode a string according to a recode request
rnp_backend_string ( ):string | Return cryptographic backend library name
rnp_backend_version ( ):string | Return cryptographic backend library version
rnp_decrypt ( RnpFFI $ffi, string $input):string|false | Decrypt PGP message
rnp_dump_packets_to_json ( string $input, int $flags):string|false | Dump OpenPGP packets stream information to the JSON string
rnp_dump_packets ( string $input, int $flags):string|false | Dump OpenPGP packets stream information in humand-readable format
rnp_ffi_create ( string $pub_format, string $sec_format):RnpFFI|false | Create the top-level object used for interacting with the library
rnp_ffi_destroy ( RnpFFI $ffi):void | Destroy the top-level object used for interacting with the library
rnp_ffi_set_pass_provider ( RnpFFI $ffi, callable $password_callback):bool | Set password provider callback function
rnp_import_keys ( RnpFFI $ffi, string $input, int $flags):string|false | Import keys from PHP string to the keyring and receive JSON describing new/updated keys
rnp_import_signatures ( RnpFFI $ffi, string $input, int $flags):string|false | Import standalone signatures to the keyring and receive JSON describing updated keys
rnp_key_export_autocrypt ( RnpFFI $ffi, string $key_fp, string $subkey_fp, string $uid, int $flags):string|false | Export minimal key for autocrypt feature (just 5 packets: key, uid, signature,    encryption subkey, signature)
rnp_key_export_revocation ( RnpFFI $ffi, string $key_fp, int $flags, array $options):string|false | Generate and export primary key revocation signature
rnp_key_export ( RnpFFI $ffi, string $key_fp, int $flags):string|false | Export a key
rnp_key_get_info ( RnpFFI $ffi, string $key_fp):array|false | Get information about the key
rnp_key_remove ( RnpFFI $ffi, string $key_fp, int $flags):bool | Remove a key from keyring(s)
rnp_key_revoke ( RnpFFI $ffi, string $key_fp, int $flags, array $options):bool | Revoke a key or subkey by generating and adding revocation signature
rnp_list_keys ( RnpFFI $ffi, string $identifier_type):array|false | Enumerate all keys present in a keyring by specified identifer type
rnp_load_keys_from_path ( RnpFFI $ffi, string $format, string $input_path, int $flags):bool | Load keys from specified path
rnp_load_keys ( RnpFFI $ffi, string $format, string $input, int $flags):bool | Load keys from PHP string
rnp_locate_key ( RnpFFI $ffi, string $identifier_type, string $identifier):string|false | Search for the key
rnp_op_encrypt ( RnpFFI $ffi, string $message, array $recipient_keys_fp, array $options):string|false | Encrypt message
rnp_op_generate_key ( RnpFFI $ffi, string $userid, string $key_alg, string $sub_alg, array $options):string|false | Generate key
rnp_op_sign_cleartext ( RnpFFI $ffi, string $data, array $keys_fp, array $options):string|false | Perform signing operation on a textual data, return cleartext signed message
rnp_op_sign_detached ( RnpFFI $ffi, string $data, array $keys_fp, array $options):string|false | Perform signing operation, return detached signature(s)
rnp_op_sign ( RnpFFI $ffi, string $data, array $keys_fp, array $options):string|false | Perform signing operation on a binary data, return embedded signature(s)
rnp_op_verify_detached ( RnpFFI $ffi, string $data, string $signature):array|false | Verify detached signatures
rnp_op_verify ( RnpFFI $ffi, string $data):array|false | Verify embedded or cleartext signatures
rnp_save_keys_to_path ( RnpFFI $ffi, string $format, string $output_path, int $flags):bool | Save keys to specified path
rnp_save_keys ( RnpFFI $ffi, string $format, string $output, int $flags):bool | Save keys to PHP string
rnp_supported_features ( string $type):string|false | Get supported features in JSON format
rnp_version_string_full ( ):string | Full version string of RNP library
rnp_version_string ( ):string | RNP library version
rpmaddtag ( int $tag):bool | Add tag retrieved in query
rpmdbinfo ( string $nevr, bool $full = reffalse;):array|null | Get information from installed RPM
rpmdbsearch ( string $pattern, int $rpmtag = RPMTAG_NAME, int $rpmmire = -1, bool $full = reffalse;):array|null | Search RPM packages
rpmgetsymlink ( string $path, string $name):string|null | Get target of a symlink
rpminfo ( string $path, bool $full = reffalse;, string $error):array|null | Get information from a RPM file
rpmvercmp ( string $evr1, string $evr2,  $operator = refnull;):int|bool | RPM version comparison
rrd_create ( string $filename, array $options):bool | Creates rrd database file
rrd_error ( ):string | Gets latest error message
rrd_fetch ( string $filename, array $options):array | Fetch the data for graph as array
rrd_first ( string $file, int $raaindex = 0):int | Gets the timestamp of the first sample from rrd file
rrd_graph ( string $filename, array $options):array | Creates image from a data
rrd_info ( string $filename):array | Gets information about rrd file
rrd_last ( string $filename):int | Gets unix timestamp of the last sample
rrd_lastupdate ( string $filename):array | Gets information about last updated data
rrd_restore ( string $xml_file, string $rrd_file, array $options):bool | Restores the RRD file from XML dump
rrd_tune ( string $filename, array $options):bool | Tunes some RRD database file header options
rrd_update ( string $filename, array $options):bool | Updates the RRD database
rrd_version ( ):string | Gets information about underlying rrdtool library
rrd_xport ( array $options):array | Exports the information about RRD database
rrdc_disconnect ( ):void | Close any outstanding connection to rrd caching daemon
runkit7_constant_add ( string $constant_name, mixed $value, int $newVisibility):bool | Similar to define(), but allows defining in class definitions as well
runkit7_constant_redefine ( string $constant_name, mixed $value, int $new_visibility):bool | Redefine an already defined constant
runkit7_constant_remove ( string $constant_name):bool | Remove/Delete an already defined constant
runkit7_function_add ( string $args, string $code):string | Create a function dynamically by evaluating a string of code
runkit7_function_copy ( string $source_name, string $target_name):bool | Copy a function to a new function name
runkit7_function_redefine ( string $function_name, string $argument_list, string $code, bool $return_by_reference = refnull;, string $doc_comment = refnull;, string $return_type, bool $is_strict):bool | Replace a function definition with a new implementation
runkit7_function_remove ( string $function_name):bool | Remove a function definition
runkit7_function_rename ( string $source_name, string $target_name):bool | Change a function's name
runkit7_import ( string $filename, int $flags):bool | Process a PHP file importing function and class definitions, overwriting where appropriate
runkit7_method_add ( string $class_name, string $method_name, string $argument_list, string $code, int $flags = RUNKIT7_ACC_PUBLIC, string $doc_comment = refnull;, string $return_type, bool $is_strict):bool | Dynamically adds a new method to a given class
runkit7_method_copy ( string $destination_class, string $destination_method_name, string $source_class, string $source_method_name):bool | Copies a method from class to another
runkit7_method_redefine ( string $class_name, string $method_name, string $argument_list, string $code, int $flags = RUNKIT7_ACC_PUBLIC, string $doc_comment = refnull;, string $return_type, bool $is_strict):bool | Dynamically changes the code of the given method
runkit7_method_remove ( string $class_name, string $method_name):bool | Dynamically removes the given method
runkit7_method_rename ( string $class_name, string $source_method_name, string $target_method_name):bool | Dynamically changes the name of the given method
runkit7_object_id ( object $obj):int | Return the integer object handle for given object
runkit7_superglobals ( ):array | Return numerically indexed array of registered superglobals
runkit7_zval_inspect ( string $value):array | Returns information about the passed in value with data types, reference counts, etc
scoutapm_get_calls ( ):array | Returns a list of instrumented calls that have occurred
scoutapm_list_instrumented_functions ( ):array | List functions scoutapm will instrument.
seaslog_get_author ( ):string | Get SeasLog author.
seaslog_get_version ( ):string | Get SeasLog version.
ftok ( string $filename, string $project_id):int | Convert a pathname and a project identifier to a System V IPC key
msg_get_queue ( int $key, int $permissions = 0666):SysvMessageQueue|false | Create or attach to a message queue
msg_queue_exists ( int $key):bool | Check whether a message queue exists
msg_receive ( SysvMessageQueue $queue, int $desired_message_type, int $received_message_type, int $max_message_size, mixed $message, bool $unserialize = reftrue;, int $flags = 0, int $error_code = refnull;):bool | Receive a message from a message queue
msg_remove_queue ( SysvMessageQueue $queue):bool | Destroy a message queue
msg_send ( SysvMessageQueue $queue, int $message_type,  $message, bool $serialize = reftrue;, bool $blocking = reftrue;, int $error_code = refnull;):bool | Send a message to a message queue
msg_set_queue ( SysvMessageQueue $queue, array $data):bool | Set information in the message queue data structure
msg_stat_queue ( SysvMessageQueue $queue):array|false | Returns information from the message queue data structure
sem_acquire ( SysvSemaphore $semaphore, bool $non_blocking = reffalse;):bool | Acquire a semaphore
sem_get ( int $key, int $max_acquire = 1, int $permissions = 0666, bool $auto_release = reftrue;):SysvSemaphore|false | Get a semaphore id
sem_release ( SysvSemaphore $semaphore):bool | Release a semaphore
sem_remove ( SysvSemaphore $semaphore):bool | Remove a semaphore
shm_attach ( int $key,  $size = refnull;, int $permissions = 0666):SysvSharedMemory|false | Creates or open a shared memory segment
shm_detach ( SysvSharedMemory $shm):bool | Disconnects from shared memory segment
shm_get_var ( SysvSharedMemory $shm, int $key):mixed | Returns a variable from shared memory
shm_has_var ( SysvSharedMemory $shm, int $key):bool | Check whether a specific entry exists
shm_put_var ( SysvSharedMemory $shm, int $key, mixed $value):bool | Inserts or updates a variable in shared memory
shm_remove_var ( SysvSharedMemory $shm, int $key):bool | Removes a variable from shared memory
shm_remove ( SysvSharedMemory $shm):bool | Removes shared memory from Unix systems
session_abort ( ):bool | Discard session array changes and finish session
session_cache_expire (  $value = refnull;):int|false | Get and/or set current cache expire
session_cache_limiter (  $value = refnull;):string|false | Get and/or set the current cache limiter
session_commit ( ):bool | Write session data and end session
session_create_id ( string $prefix = ""):string|false | Create new session id
session_decode ( string $data):bool | Decodes session data from a session encoded string
session_destroy ( ):bool | Destroys all data registered to a session
session_encode ( ):string|false | Encodes the current session data as a session encoded string
session_gc ( ):int|false | Perform session data garbage collection
session_get_cookie_params ( ):array | Get the session cookie parameters
session_id (  $id = refnull;):string|false | Get and/or set the current session id
session_module_name (  $module = refnull;):string|false | Get and/or set the current session module
session_name (  $name = refnull;):string|false | Get and/or set the current session name
session_regenerate_id ( bool $delete_old_session = reffalse;):bool | Update the current session id with a newly generated one
session_register_shutdown ( ):void | Session shutdown function
session_reset ( ):bool | Re-initialize session array with original values
session_save_path (  $path = refnull;):string|false | Get and/or set the current session save path
session_set_cookie_params ( int $lifetime_or_options,  $path = refnull;,  $domain = refnull;,  $secure = refnull;,  $httponly = refnull;):bool | Set the session cookie parameters
session_set_save_handler ( callable $open, callable $close, callable $read, callable $write, callable $destroy, callable $gc, callable $create_sid, callable $validate_sid, callable $update_timestamp):bool | Sets user-level session storage functions
session_start ( array $options = []):bool | Start new or resume existing session
session_status ( ):int | Returns the current session status
session_unset ( ):bool | Free all session variables
session_write_close ( ):bool | Write session data and end session
shmop_close ( Shmop $shmop):void | Close shared memory block
shmop_delete ( Shmop $shmop):bool | Delete shared memory block
shmop_open ( int $key, string $mode, int $permissions, int $size):Shmop|false | Create or open shared memory block
shmop_read ( Shmop $shmop, int $offset, int $size):string | Read data from shared memory block
shmop_size ( Shmop $shmop):int | Get size of shared memory block
shmop_write ( Shmop $shmop, string $data, int $offset):int | Write data into shared memory block
simdjson_decode ( string $json, bool $associative = reffalse;, int $depth = 512):mixed | Decodes a JSON string
simdjson_is_valid ( string $json = reffalse;, int $depth = 512):bool | Check if a JSON string is valid
simdjson_key_count ( string $json, string $key, int $depth = 512, bool $throw_if_uncountable = reffalse;):int | Returns the value at a JSON pointer.
simdjson_key_exists ( string $json, string $key, int $depth):bool | Check if the JSON contains the value referred to by a JSON pointer.
simdjson_key_value ( string $json, string $key, bool $associative = reffalse;, int $depth = 512):mixed | Decodes the value of a JSON string located at the requested JSON pointer.
simplexml_import_dom (  $node,  $class_name = SimpleXMLElement::class):SimpleXMLElement|null | Get a  object from a DOM node
simplexml_load_file ( string $filename,  $class_name = SimpleXMLElement::class, int $options = 0, string $namespace_or_prefix = "", bool $is_prefix = reffalse;):SimpleXMLElement|false | Interprets an XML file into an object
simplexml_load_string ( string $data,  $class_name = SimpleXMLElement::class, int $options = 0, string $namespace_or_prefix = "", bool $is_prefix = reffalse;):SimpleXMLElement|false | Interprets a string of XML into an object
snmp_get_quick_print ( ):bool | Fetches the current value of the NET-SNMP library's quick_print setting
snmp_get_valueretrieval ( ):int | Return the method how the SNMP values will be returned
snmp_read_mib ( string $filename):bool | Reads and parses a MIB file into the active MIB tree
snmp_set_enum_print ( bool $enable):true | Return all values that are enums with their enum value instead of the raw integer
snmp_set_oid_numeric_print ( int $format):true | Set the OID output format
snmp_set_oid_output_format ( int $format):true | Set the OID output format
snmp_set_quick_print ( bool $enable):true | Set the value of  within the NET- library
snmp_set_valueretrieval ( int $method):true | Specify the method how the SNMP values will be returned
snmp2_get ( string $hostname, string $community,  $object_id, int $timeout = -1, int $retries = -1):mixed | Fetch an  object
snmp2_getnext ( string $hostname, string $community,  $object_id, int $timeout = -1, int $retries = -1):mixed | Fetch the  object which follows the given object id
snmp2_real_walk ( string $hostname, string $community,  $object_id, int $timeout = -1, int $retries = -1):array|false | Return all objects including their respective object ID within the specified one
snmp2_set ( string $hostname, string $community,  $object_id,  $type,  $value, int $timeout = -1, int $retries = -1):bool | Set the value of an  object
snmp2_walk ( string $hostname, string $community,  $object_id, int $timeout = -1, int $retries = -1):array|false | Fetch all the  objects from an agent
snmp3_get ( string $hostname, string $security_name, string $security_level, string $auth_protocol, string $auth_passphrase, string $privacy_protocol, string $privacy_passphrase,  $object_id, int $timeout = -1, int $retries = -1):mixed | Fetch an  object
snmp3_getnext ( string $hostname, string $security_name, string $security_level, string $auth_protocol, string $auth_passphrase, string $privacy_protocol, string $privacy_passphrase,  $object_id, int $timeout = -1, int $retries = -1):mixed | Fetch the  object which follows the given object id
snmp3_real_walk ( string $hostname, string $security_name, string $security_level, string $auth_protocol, string $auth_passphrase, string $privacy_protocol, string $privacy_passphrase,  $object_id, int $timeout = -1, int $retries = -1):array|false | Return all objects including their respective object ID within the specified one
snmp3_set ( string $hostname, string $security_name, string $security_level, string $auth_protocol, string $auth_passphrase, string $privacy_protocol, string $privacy_passphrase,  $object_id,  $type,  $value, int $timeout = -1, int $retries = -1):bool | Set the value of an SNMP object
snmp3_walk ( string $hostname, string $security_name, string $security_level, string $auth_protocol, string $auth_passphrase, string $privacy_protocol, string $privacy_passphrase,  $object_id, int $timeout = -1, int $retries = -1):array|false | Fetch all the  objects from an agent
snmpget ( string $hostname, string $community,  $object_id, int $timeout = -1, int $retries = -1):mixed | Fetch an  object
snmpgetnext ( string $hostname, string $community,  $object_id, int $timeout = -1, int $retries = -1):mixed | Fetch the  object which follows the given object id
snmprealwalk ( string $hostname, string $community,  $object_id, int $timeout = -1, int $retries = -1):array|false | Return all objects including their respective object ID within the specified one
snmpset ( string $hostname, string $community,  $object_id,  $type,  $value, int $timeout = -1, int $retries = -1):bool | Set the value of an  object
snmpwalk ( string $hostname, string $community,  $object_id, int $timeout = -1, int $retries = -1):array|false | Fetch all the  objects from an agent
snmpwalkoid ( string $hostname, string $community,  $object_id, int $timeout = -1, int $retries = -1):array|false | Query for a tree of information about a network entity
is_soap_fault ( mixed $object):bool | Checks if a SOAP call has failed
use_soap_error_handler ( bool $enable = reftrue;):bool | Set whether to use the SOAP error handler
socket_accept ( Socket $socket):Socket|false | Accepts a connection on a socket
socket_addrinfo_bind ( AddressInfo $address):Socket|false | Create and bind to a socket from a given addrinfo
socket_addrinfo_connect ( AddressInfo $address):Socket|false | Create and connect to a socket from a given addrinfo
socket_addrinfo_explain ( AddressInfo $address):array | Get information about addrinfo
socket_addrinfo_lookup ( string $host,  $service = refnull;, array $hints = []):array|false | Get array with contents of getaddrinfo about the given hostname
socket_atmark ( Socket $socket):bool | Determines whether socket is at out-of-band mark
socket_bind ( Socket $socket, string $address, int $port = 0):bool | Binds a name to a socket
socket_clear_error (  $socket = refnull;):void | Clears the error on the socket or the last error code
socket_close ( Socket $socket):void | Closes a  instance
socket_cmsg_space ( int $level, int $type, int $num = 0):int|null | Calculate message buffer size
socket_connect ( Socket $socket, string $address,  $port = refnull;):bool | Initiates a connection on a socket
socket_create_listen ( int $port, int $backlog = 128):Socket|false | Opens a socket on port to accept connections
socket_create_pair ( int $domain, int $type, int $protocol, array $pair):bool | Creates a pair of indistinguishable sockets and stores them in an array
socket_create ( int $domain, int $type, int $protocol):Socket|false | Create a socket (endpoint for communication)
socket_export_stream ( Socket $socket):resource|false | Export a socket into a stream that encapsulates a socket
socket_get_option ( Socket $socket, int $level, int $option):array|int|false | Gets socket options for the socket
socket_getopt ( Socket $socket, int $level, int $option):array|int|false | Gets socket options for the socket
socket_getpeername ( Socket $socket, string $address, int $port = refnull;):bool | Queries the remote side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type
socket_getsockname ( Socket $socket, string $address, int $port = refnull;):bool | Queries the local side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type
socket_import_stream ( resource $stream):Socket|false | Import a stream
socket_last_error (  $socket = refnull;):int | Returns the last error on the socket
socket_listen ( Socket $socket, int $backlog = 0):bool | Listens for a connection on a socket
socket_read ( Socket $socket, int $length, int $mode = PHP_BINARY_READ):string|false | Reads a maximum of length bytes from a socket
socket_recv ( Socket $socket,  $data, int $length, int $flags):int|false | Receives data from a connected socket
socket_recvfrom ( Socket $socket, string $data, int $length, int $flags, string $address, int $port = refnull;):int|false | Receives data from a socket whether or not it is connection-oriented
socket_recvmsg ( Socket $socket, array $message, int $flags = 0):int|false | Read a message
socket_select (  $read,  $write,  $except,  $seconds, int $microseconds = 0):int|false | Runs the select() system call on the given arrays of sockets with a specified timeout
socket_send ( Socket $socket, string $data, int $length, int $flags):int|false | Sends data to a connected socket
socket_sendmsg ( Socket $socket, array $message, int $flags = 0):int|false | Send a message
socket_sendto ( Socket $socket, string $data, int $length, int $flags, string $address,  $port = refnull;):int|false | Sends a message to a socket, whether it is connected or not
socket_set_block ( Socket $socket):bool | Sets blocking mode on a socket
socket_set_nonblock ( Socket $socket):bool | Sets nonblocking mode for file descriptor fd
socket_set_option ( Socket $socket, int $level, int $option,  $value):bool | Sets socket options for the socket
socket_setopt ( Socket $socket, int $level, int $option,  $value):bool | Sets socket options for the socket
socket_shutdown ( Socket $socket, int $mode = 2):bool | Shuts down a socket for receiving, sending, or both
socket_strerror ( int $error_code):string | Return a string describing a socket error
socket_write ( Socket $socket, string $data,  $length = refnull;):int|false | Write to a socket
socket_wsaprotocol_info_export ( Socket $socket, int $process_id):string|false | Exports the WSAPROTOCOL_INFO Structure
socket_wsaprotocol_info_import ( string $info_id):Socket|false | Imports a Socket from another Process
socket_wsaprotocol_info_release ( string $info_id):bool | Releases an exported WSAPROTOCOL_INFO Structure
sodium_add ( string $string1, string $string2):void | Add large numbers
sodium_base642bin ( string $string, int $id, string $ignore = ""):string | Decodes a base64-encoded string into raw binary.
sodium_bin2base64 ( string $string, int $id):string | Encodes a raw binary string with base64.
sodium_bin2hex ( string $string):string | Encode to hexadecimal
sodium_compare ( string $string1, string $string2):int | Compare large numbers
sodium_crypto_aead_aes256gcm_decrypt ( string $ciphertext, string $additional_data, string $nonce, string $key):string|false | Verify then decrypt a message with AES-256-GCM
sodium_crypto_aead_aes256gcm_encrypt ( string $message, string $additional_data, string $nonce, string $key):string | Encrypt then authenticate with AES-256-GCM
sodium_crypto_aead_aes256gcm_is_available ( ):bool | Check if hardware supports AES256-GCM
sodium_crypto_aead_aes256gcm_keygen ( ):string | Generate a random AES-256-GCM key
sodium_crypto_aead_chacha20poly1305_decrypt ( string $ciphertext, string $additional_data, string $nonce, string $key):string|false | Verify then decrypt with ChaCha20-Poly1305
sodium_crypto_aead_chacha20poly1305_encrypt ( string $message, string $additional_data, string $nonce, string $key):string | Encrypt then authenticate with ChaCha20-Poly1305
sodium_crypto_aead_chacha20poly1305_ietf_decrypt ( string $ciphertext, string $additional_data, string $nonce, string $key):string|false | Verify that the ciphertext includes a valid tag
sodium_crypto_aead_chacha20poly1305_ietf_encrypt ( string $message, string $additional_data, string $nonce, string $key):string | Encrypt a message
sodium_crypto_aead_chacha20poly1305_ietf_keygen ( ):string | Generate a random ChaCha20-Poly1305 (IETF) key.
sodium_crypto_aead_chacha20poly1305_keygen ( ):string | Generate a random ChaCha20-Poly1305 key.
sodium_crypto_aead_xchacha20poly1305_ietf_decrypt ( string $ciphertext, string $additional_data, string $nonce, string $key):string|false | (Preferred) Verify then decrypt with XChaCha20-Poly1305
sodium_crypto_aead_xchacha20poly1305_ietf_encrypt ( string $message, string $additional_data, string $nonce, string $key):string | (Preferred) Encrypt then authenticate with XChaCha20-Poly1305
sodium_crypto_aead_xchacha20poly1305_ietf_keygen ( ):string | Generate a random XChaCha20-Poly1305 key.
sodium_crypto_auth_keygen ( ):string | Generate a random key for sodium_crypto_auth
sodium_crypto_auth_verify ( string $mac, string $message, string $key):bool | Verifies that the tag is valid for the message
sodium_crypto_auth ( string $message, string $key):string | Compute a tag for the message
sodium_crypto_box_keypair_from_secretkey_and_publickey ( string $secret_key, string $public_key):string | Create a unified keypair string from a secret key and public key
sodium_crypto_box_keypair ( ):string | Randomly generate a secret key and a corresponding public key
sodium_crypto_box_open ( string $ciphertext, string $nonce, string $key_pair):string|false | Authenticated public-key decryption
sodium_crypto_box_publickey_from_secretkey ( string $secret_key):string | Calculate the public key from a secret key
sodium_crypto_box_publickey ( string $key_pair):string | Extract the public key from a crypto_box keypair
sodium_crypto_box_seal_open ( string $ciphertext, string $key_pair):string|false | Anonymous public-key decryption
sodium_crypto_box_seal ( string $message, string $public_key):string | Anonymous public-key encryption
sodium_crypto_box_secretkey ( string $key_pair):string | Extracts the secret key from a crypto_box keypair
sodium_crypto_box_seed_keypair ( string $seed):string | Deterministically derive the key pair from a single key
sodium_crypto_box ( string $message, string $nonce, string $key_pair):string | Authenticated public-key encryption
sodium_crypto_core_ristretto255_add ( string $p, string $q):string | Adds an element
sodium_crypto_core_ristretto255_from_hash ( string $s):string | Maps a vector
sodium_crypto_core_ristretto255_is_valid_point ( string $s):bool | Determines if a point on the ristretto255 curve
sodium_crypto_core_ristretto255_random ( ):string | Generates a random key
sodium_crypto_core_ristretto255_scalar_add ( string $x, string $y):string | Adds a scalar value
sodium_crypto_core_ristretto255_scalar_complement ( string $s):string | The sodium_crypto_core_ristretto255_scalar_complement purpose
sodium_crypto_core_ristretto255_scalar_invert ( string $s):string | Inverts a scalar value
sodium_crypto_core_ristretto255_scalar_mul ( string $x, string $y):string | Multiplies a scalar value
sodium_crypto_core_ristretto255_scalar_negate ( string $s):string | Negates a scalar value
sodium_crypto_core_ristretto255_scalar_random ( ):string | Generates a random key
sodium_crypto_core_ristretto255_scalar_reduce ( string $s):string | Reduces a scalar value
sodium_crypto_core_ristretto255_scalar_sub ( string $x, string $y):string | Subtracts a scalar value
sodium_crypto_core_ristretto255_sub ( string $p, string $q):string | Subtracts an element
sodium_crypto_generichash_final ( string $state, int $length = SODIUM_CRYPTO_GENERICHASH_BYTES):string | Complete the hash
sodium_crypto_generichash_init ( string $key = "", int $length = SODIUM_CRYPTO_GENERICHASH_BYTES):string | Initialize a hash for streaming
sodium_crypto_generichash_keygen ( ):string | Generate a random generichash key
sodium_crypto_generichash_update ( string $state, string $message):true | Add message to a hash
sodium_crypto_generichash ( string $message, string $key = "", int $length = SODIUM_CRYPTO_GENERICHASH_BYTES):string | Get a hash of the message
sodium_crypto_kdf_derive_from_key ( int $subkey_length, int $subkey_id, string $context, string $key):string | Derive a subkey
sodium_crypto_kdf_keygen ( ):string | Generate a random root key for the KDF interface
sodium_crypto_kx_client_session_keys ( string $client_key_pair, string $server_key):array | Calculate the client-side session keys.
sodium_crypto_kx_keypair ( ):string | Creates a new sodium keypair
sodium_crypto_kx_publickey ( string $key_pair):string | Extract the public key from a crypto_kx keypair
sodium_crypto_kx_secretkey ( string $key_pair):string | Extract the secret key from a crypto_kx keypair.
sodium_crypto_kx_seed_keypair ( string $seed):string | Description
sodium_crypto_kx_server_session_keys ( string $server_key_pair, string $client_key):array | Calculate the server-side session keys.
sodium_crypto_pwhash_scryptsalsa208sha256_str_verify ( string $hash, string $password):bool | Verify that the password is a valid password verification string
sodium_crypto_pwhash_scryptsalsa208sha256_str ( string $password, int $opslimit, int $memlimit):string | Get an ASCII encoded hash
sodium_crypto_pwhash_scryptsalsa208sha256 ( int $length, string $password, string $salt, int $opslimit, int $memlimit):string | Derives a key from a password, using scrypt
sodium_crypto_pwhash_str_needs_rehash ( string $password, int $opslimit, int $memlimit):bool | Determine whether or not to rehash a password
sodium_crypto_pwhash_str_verify ( string $hash, string $password):bool | Verifies that a password matches a hash
sodium_crypto_pwhash_str ( string $password, int $opslimit, int $memlimit):string | Get an ASCII-encoded hash
sodium_crypto_pwhash ( int $length, string $password, string $salt, int $opslimit, int $memlimit, int $algo = SODIUM_CRYPTO_PWHASH_ALG_DEFAULT):string | Derive a key from a password, using Argon2
sodium_crypto_scalarmult_base ( string $secret_key):string | Calculate the public key from a secret key
sodium_crypto_scalarmult_ristretto255_base ( string $n):string | Calculates the public key from a secret key
sodium_crypto_scalarmult_ristretto255 ( string $n, string $p):string | Computes a shared secret
sodium_crypto_scalarmult ( string $n, string $p):string | Compute a shared secret given a user's secret key and another user's public key
sodium_crypto_secretbox_keygen ( ):string | Generate random key for sodium_crypto_secretbox
sodium_crypto_secretbox_open ( string $ciphertext, string $nonce, string $key):string|false | Authenticated shared-key decryption
sodium_crypto_secretbox ( string $message, string $nonce, string $key):string | Authenticated shared-key encryption
sodium_crypto_secretstream_xchacha20poly1305_init_pull ( string $header, string $key):string | Initialize a secretstream context for decryption
sodium_crypto_secretstream_xchacha20poly1305_init_push ( string $key):array | Initialize a secretstream context for encryption
sodium_crypto_secretstream_xchacha20poly1305_keygen ( ):string | Generate a random secretstream key.
sodium_crypto_secretstream_xchacha20poly1305_pull ( string $state, string $ciphertext, string $additional_data = ""):array|false | Decrypt a chunk of data from an encrypted stream
sodium_crypto_secretstream_xchacha20poly1305_push ( string $state, string $message, string $additional_data = "", int $tag = SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_MESSAGE):string | Encrypt a chunk of data so that it can safely be decrypted in a streaming API
sodium_crypto_secretstream_xchacha20poly1305_rekey ( string $state):void | Explicitly rotate the key in the secretstream state
sodium_crypto_shorthash_keygen ( ):string | Get random bytes for key
sodium_crypto_shorthash ( string $message, string $key):string | Compute a short hash of a message and key
sodium_crypto_sign_detached ( string $message, string $secret_key):string | Sign the message
sodium_crypto_sign_ed25519_pk_to_curve25519 ( string $public_key):string | Convert an Ed25519 public key to a Curve25519 public key
sodium_crypto_sign_ed25519_sk_to_curve25519 ( string $secret_key):string | Convert an Ed25519 secret key to a Curve25519 secret key
sodium_crypto_sign_keypair_from_secretkey_and_publickey ( string $secret_key, string $public_key):string | Join a secret key and public key together
sodium_crypto_sign_keypair ( ):string | Randomly generate a secret key and a corresponding public key
sodium_crypto_sign_open ( string $signed_message, string $public_key):string|false | Check that the signed message has a valid signature
sodium_crypto_sign_publickey_from_secretkey ( string $secret_key):string | Extract the Ed25519 public key from the secret key
sodium_crypto_sign_publickey ( string $key_pair):string | Extract the Ed25519 public key from a keypair
sodium_crypto_sign_secretkey ( string $key_pair):string | Extract the Ed25519 secret key from a keypair
sodium_crypto_sign_seed_keypair ( string $seed):string | Deterministically derive the key pair from a single key
sodium_crypto_sign_verify_detached ( string $signature, string $message, string $public_key):bool | Verify signature for the message
sodium_crypto_sign ( string $message, string $secret_key):string | Sign a message
sodium_crypto_stream_keygen ( ):string | Generate a random sodium_crypto_stream key.
sodium_crypto_stream_xchacha20_keygen ( ):string | Returns a secure random key
sodium_crypto_stream_xchacha20_xor_ic ( string $message, string $nonce, int $counter, string $key):string | Encrypts a message using a nonce and a secret key (no authentication)
sodium_crypto_stream_xchacha20_xor ( string $message, string $nonce, string $key):string | Encrypts a message using a nonce and a secret key (no authentication)
sodium_crypto_stream_xchacha20 ( int $length, string $nonce, string $key):string | Expands the key and nonce into a keystream of pseudorandom bytes
sodium_crypto_stream_xor ( string $message, string $nonce, string $key):string | Encrypt a message without authentication
sodium_crypto_stream ( int $length, string $nonce, string $key):string | Generate a deterministic sequence of bytes from a seed
sodium_hex2bin ( string $string, string $ignore = ""):string | Decodes a hexadecimally encoded binary string
sodium_increment ( string $string):void | Increment large number
sodium_memcmp ( string $string1, string $string2):int | Test for equality in constant-time
sodium_memzero ( string $string):void | Overwrite a string with NUL characters
sodium_pad ( string $string, int $block_size):string | Add padding data
sodium_unpad ( string $string, int $block_size):string | Remove padding data
solr_get_version ( ):string | Returns the current version of the Apache Solr extension
class_implements (  $object_or_class, bool $autoload = reftrue;):array|false | Return the interfaces which are implemented by the given class or interface
class_parents (  $object_or_class, bool $autoload = reftrue;):array|false | Return the parent classes of the given class
class_uses (  $object_or_class, bool $autoload = reftrue;):array|false | Return the traits used by the given class
iterator_apply ( Traversable $iterator, callable $callback,  $args = refnull;):int | Call a function for every element in an iterator
iterator_count (  $iterator):int | Count the elements in an iterator
iterator_to_array (  $iterator, bool $preserve_keys = reftrue;):array | Copy the iterator into an array
spl_autoload_call ( string $class):void | Try all registered __autoload() functions to load the requested class
spl_autoload_extensions (  $file_extensions = refnull;):string | Register and return default file extensions for spl_autoload
spl_autoload_functions ( ):array | Return all registered __autoload() functions
spl_autoload_register (  $callback = refnull;, bool $throw = reftrue;, bool $prepend = reffalse;):bool | Register given function as __autoload() implementation
spl_autoload_unregister ( callable $callback):bool | Unregister given function as __autoload() implementation
spl_autoload ( string $class,  $file_extensions = refnull;):void | Default implementation for __autoload()
spl_classes ( ):array | Return available SPL classes
spl_object_hash ( object $object):string | Return hash id for given object
spl_object_id ( object $object):int | Return the integer object handle for given object
sqlsrv_begin_transaction ( resource $conn):bool | Begins a database transaction
sqlsrv_cancel ( resource $stmt):bool | Cancels a statement
sqlsrv_client_info ( resource $conn):array | Returns information about the client and specified connection
sqlsrv_close ( resource $conn):bool | Closes an open connection and releases resourses associated with the connection
sqlsrv_commit ( resource $conn):bool | Begins a database transaction
sqlsrv_configure ( string $setting, mixed $value):bool | Changes the driver error handling and logging configurations
sqlsrv_connect ( string $serverName, array $connectionInfo):resource | Opens a connection to a Microsoft SQL Server database
sqlsrv_errors ( int $errorsOrWarnings):mixed | Returns error and warning information about the last SQLSRV operation performed
sqlsrv_execute ( resource $conn, string $sql, array $params, array $options):mixed | Prepares a query for execution
sqlsrv_fetch_array ( resource $stmt, int $fetchType, int $row, int $offset):array | Returns a row as an array
sqlsrv_fetch_object ( resource $stmt, string $className, array $ctorParams, int $row, int $offset):mixed | Retrieves the next row of data in a result set as an object
sqlsrv_fetch ( resource $stmt, int $row, int $offset):mixed | Makes the next row in a result set available for reading
sqlsrv_field_metadata ( resource $conn, string $sql, array $params, array $options):mixed | Prepares a query for execution
sqlsrv_free_stmt ( resource $stmt):bool | Frees all resources for the specified statement
sqlsrv_get_config ( string $setting):mixed | Returns the value of the specified configuration setting
sqlsrv_get_field ( resource $stmt, int $fieldIndex, int $getAsType):mixed | Gets field data from the currently selected row
sqlsrv_has_rows ( resource $stmt):bool | Indicates whether the specified statement has rows
sqlsrv_next_result ( resource $stmt):mixed | Makes the next result of the specified statement active
sqlsrv_num_fields ( resource $stmt):mixed | Retrieves the number of fields (columns) on a statement
sqlsrv_num_rows ( resource $stmt):mixed | Retrieves the number of rows in a result set
sqlsrv_prepare ( resource $conn, string $sql, array $params, array $options):mixed | Prepares a query for execution
sqlsrv_query ( resource $conn, string $sql, array $params, array $options):mixed | Prepares and executes a query
sqlsrv_rollback ( resource $conn):bool | Begins a database transaction
sqlsrv_rows_affected ( resource $stmt):int|false | Returns the number of rows modified by the last INSERT, UPDATE, or    DELETE query executed
sqlsrv_send_stream_data ( resource $stmt):bool | Sends data from parameter streams to the server
sqlsrv_server_info ( resource $conn):array | Returns information about the server
ssdeep_fuzzy_compare ( string $signature1, string $signature2):int | Calculates the match score between two fuzzy hash signatures
ssdeep_fuzzy_hash_filename ( string $file_name):string | Create a fuzzy hash from a file
ssdeep_fuzzy_hash ( string $to_hash):string | Create a fuzzy hash from a string
ssh2_auth_agent ( resource $session, string $username):bool | Authenticate over SSH using the ssh agent
ssh2_auth_hostbased_file ( resource $session, string $username, string $hostname, string $pubkeyfile, string $privkeyfile, string $passphrase, string $local_username):bool | Authenticate using a public hostkey
ssh2_auth_none ( resource $session, string $username):mixed | Authenticate as "none"
ssh2_auth_password ( resource $session, string $username, string $password):bool | Authenticate over SSH using a plain password
ssh2_auth_pubkey_file ( resource $session, string $username, string $pubkeyfile, string $privkeyfile, string $passphrase):bool | Authenticate using a public key
ssh2_connect ( string $host, int $port = 22, array $methods, array $callbacks):resource|false | Connect to an SSH server
ssh2_disconnect ( resource $session):bool | Close a connection to a remote SSH server
ssh2_exec ( resource $session, string $command, string $pty, array $env, int $width = 80, int $height = 25, int $width_height_type = SSH2_TERM_UNIT_CHARS):resource|false | Execute a command on a remote server
ssh2_fetch_stream ( resource $channel, int $streamid):resource | Fetch an extended data stream
ssh2_fingerprint ( resource $session, int $flags = SSH2_FINGERPRINT_MD5 | SSH2_FINGERPRINT_HEX):string | Retrieve fingerprint of remote server
ssh2_forward_accept ( resource $listener):resource|false | Accept a connection created by a listener
ssh2_forward_listen ( resource $session, int $port, string $host, int $max_connections = 16):resource|false | Bind a port on the remote server and listen for connections
ssh2_methods_negotiated ( resource $session):array | Return list of negotiated methods
ssh2_poll ( array $desc, int $timeout = 30):int | Poll the channels/listeners/streams for events
ssh2_publickey_add ( resource $pkey, string $algoname, string $blob, bool $overwrite = reffalse;, array $attributes):bool | Add an authorized publickey
ssh2_publickey_init ( resource $session):resource|false | Initialize Publickey subsystem
ssh2_publickey_list ( resource $pkey):array | List currently authorized publickeys
ssh2_publickey_remove ( resource $pkey, string $algoname, string $blob):bool | Remove an authorized publickey
ssh2_scp_recv ( resource $session, string $remote_file, string $local_file):bool | Request a file via SCP
ssh2_scp_send ( resource $session, string $local_file, string $remote_file, int $create_mode = 0644):bool | Send a file via SCP
ssh2_send_eof ( resource $channel):bool | Send EOF to stream
ssh2_sftp_chmod ( resource $sftp, string $filename, int $mode):bool | Changes file mode
ssh2_sftp_lstat ( resource $sftp, string $path):array | Stat a symbolic link
ssh2_sftp_mkdir ( resource $sftp, string $dirname, int $mode = 0777, bool $recursive = reffalse;):bool | Create a directory
ssh2_sftp_readlink ( resource $sftp, string $link):string | Return the target of a symbolic link
ssh2_sftp_realpath ( resource $sftp, string $filename):string | Resolve the realpath of a provided path string
ssh2_sftp_rename ( resource $sftp, string $from, string $to):bool | Rename a remote file
ssh2_sftp_rmdir ( resource $sftp, string $dirname):bool | Remove a directory
ssh2_sftp_stat ( resource $sftp, string $path):array | Stat a file on a remote filesystem
ssh2_sftp_symlink ( resource $sftp, string $target, string $link):bool | Create a symlink
ssh2_sftp_unlink ( resource $sftp, string $filename):bool | Delete a file
ssh2_sftp ( resource $session):resource|false | Initialize SFTP subsystem
ssh2_shell ( resource $session, string $termtype = "vanilla",  $env = refnull;, int $width = 80, int $height = 25, int $width_height_type = SSH2_TERM_UNIT_CHARS):resource|false | Request an interactive shell
ssh2_tunnel ( resource $session, string $host, int $port):resource | Open a tunnel through a remote server
stats_absolute_deviation ( array $a):float | Returns the absolute deviation of an array of values
stats_cdf_beta ( float $par1, float $par2, float $par3, int $which):float | Calculates any one parameter of the beta distribution given values for the others
stats_cdf_binomial ( float $par1, float $par2, float $par3, int $which):float | Calculates any one parameter of the binomial distribution given values for the others
stats_cdf_cauchy ( float $par1, float $par2, float $par3, int $which):float | Calculates any one parameter of the Cauchy distribution given values for the others
stats_cdf_chisquare ( float $par1, float $par2, int $which):float | Calculates any one parameter of the chi-square distribution given values for the others
stats_cdf_exponential ( float $par1, float $par2, int $which):float | Calculates any one parameter of the exponential distribution given values for the others
stats_cdf_f ( float $par1, float $par2, float $par3, int $which):float | Calculates any one parameter of the F distribution given values for the others
stats_cdf_gamma ( float $par1, float $par2, float $par3, int $which):float | Calculates any one parameter of the gamma distribution given values for the others
stats_cdf_laplace ( float $par1, float $par2, float $par3, int $which):float | Calculates any one parameter of the Laplace distribution given values for the others
stats_cdf_logistic ( float $par1, float $par2, float $par3, int $which):float | Calculates any one parameter of the logistic distribution given values for the others
stats_cdf_negative_binomial ( float $par1, float $par2, float $par3, int $which):float | Calculates any one parameter of the negative binomial distribution given values for the others
stats_cdf_noncentral_chisquare ( float $par1, float $par2, float $par3, int $which):float | Calculates any one parameter of the non-central chi-square distribution given values for the others
stats_cdf_noncentral_f ( float $par1, float $par2, float $par3, float $par4, int $which):float | Calculates any one parameter of the non-central F distribution given values for the others
stats_cdf_noncentral_t ( float $par1, float $par2, float $par3, int $which):float | Calculates any one parameter of the non-central t-distribution give values for the others
stats_cdf_normal ( float $par1, float $par2, float $par3, int $which):float | Calculates any one parameter of the normal distribution given values for the others
stats_cdf_poisson ( float $par1, float $par2, int $which):float | Calculates any one parameter of the Poisson distribution given values for the others
stats_cdf_t ( float $par1, float $par2, int $which):float | Calculates any one parameter of the t-distribution given values for the others
stats_cdf_uniform ( float $par1, float $par2, float $par3, int $which):float | Calculates any one parameter of the uniform distribution given values for the others
stats_cdf_weibull ( float $par1, float $par2, float $par3, int $which):float | Calculates any one parameter of the Weibull distribution given values for the others
stats_covariance ( array $a, array $b):float | Computes the covariance of two data sets
stats_dens_beta ( float $x, float $a, float $b):float | Probability density function of the beta distribution
stats_dens_cauchy ( float $x, float $ave, float $stdev):float | Probability density function of the Cauchy distribution
stats_dens_chisquare ( float $x, float $dfr):float | Probability density function of the chi-square distribution
stats_dens_exponential ( float $x, float $scale):float | Probability density function of the exponential distribution
stats_dens_f ( float $x, float $dfr1, float $dfr2):float | Probability density function of the F distribution
stats_dens_gamma ( float $x, float $shape, float $scale):float | Probability density function of the gamma distribution
stats_dens_laplace ( float $x, float $ave, float $stdev):float | Probability density function of the Laplace distribution
stats_dens_logistic ( float $x, float $ave, float $stdev):float | Probability density function of the logistic distribution
stats_dens_normal ( float $x, float $ave, float $stdev):float | Probability density function of the normal distribution
stats_dens_pmf_binomial ( float $x, float $n, float $pi):float | Probability mass function of the binomial distribution
stats_dens_pmf_hypergeometric ( float $n1, float $n2, float $N1, float $N2):float | Probability mass function of the hypergeometric distribution
stats_dens_pmf_negative_binomial ( float $x, float $n, float $pi):float | Probability mass function of the negative binomial distribution
stats_dens_pmf_poisson ( float $x, float $lb):float | Probability mass function of the Poisson distribution
stats_dens_t ( float $x, float $dfr):float | Probability density function of the t-distribution
stats_dens_uniform ( float $x, float $a, float $b):float | Probability density function of the uniform distribution
stats_dens_weibull ( float $x, float $a, float $b):float | Probability density function of the Weibull distribution
stats_harmonic_mean ( array $a):number | Returns the harmonic mean of an array of values
stats_kurtosis ( array $a):float | Computes the kurtosis of the data in the array
stats_rand_gen_beta ( float $a, float $b):float | Generates a random deviate from the beta distribution
stats_rand_gen_chisquare ( float $df):float | Generates a random deviate from the chi-square distribution
stats_rand_gen_exponential ( float $av):float | Generates a random deviate from the exponential distribution
stats_rand_gen_f ( float $dfn, float $dfd):float | Generates a random deviate from the F distribution
stats_rand_gen_funiform ( float $low, float $high):float | Generates uniform float between low (exclusive) and high (exclusive)
stats_rand_gen_gamma ( float $a, float $r):float | Generates a random deviate from the gamma distribution
stats_rand_gen_ibinomial_negative ( int $n, float $p):int | Generates a random deviate from the negative binomial distribution
stats_rand_gen_ibinomial ( int $n, float $pp):int | Generates a random deviate from the binomial distribution
stats_rand_gen_int ( ):int | Generates random integer between 1 and 2147483562
stats_rand_gen_ipoisson ( float $mu):int | Generates a single random deviate from a Poisson distribution
stats_rand_gen_iuniform ( int $low, int $high):int | Generates integer uniformly distributed between LOW (inclusive) and HIGH (inclusive)
stats_rand_gen_noncentral_chisquare ( float $df, float $xnonc):float | Generates a random deviate from the non-central chi-square distribution
stats_rand_gen_noncentral_f ( float $dfn, float $dfd, float $xnonc):float | Generates a random deviate from the noncentral F distribution
stats_rand_gen_noncentral_t ( float $df, float $xnonc):float | Generates a single random deviate from a non-central t-distribution
stats_rand_gen_normal ( float $av, float $sd):float | Generates a single random deviate from a normal distribution
stats_rand_gen_t ( float $df):float | Generates a single random deviate from a t-distribution
stats_rand_get_seeds ( ):array | Get the seed values of the random number generator
stats_rand_phrase_to_seeds ( string $phrase):array | Generate two seeds for the RGN random number generator
stats_rand_ranf ( ):float | Generates a random floating point number between 0 and 1
stats_rand_setall ( int $iseed1, int $iseed2):void | Set seed values to the random generator
stats_skew ( array $a):float | Computes the skewness of the data in the array
stats_standard_deviation ( array $a, bool $sample = reffalse;):float | Returns the standard deviation
stats_stat_binomial_coef ( int $x, int $n):float | Returns a binomial coefficient
stats_stat_correlation ( array $arr1, array $arr2):float | Returns the Pearson correlation coefficient of two data sets
stats_stat_factorial ( int $n):float | Returns the factorial of an integer
stats_stat_independent_t ( array $arr1, array $arr2):float | Returns the t-value from the independent two-sample t-test
stats_stat_innerproduct ( array $arr1, array $arr2):float | Returns the inner product of two vectors
stats_stat_paired_t ( array $arr1, array $arr2):float | Returns the t-value of the dependent t-test for paired samples
stats_stat_percentile ( array $arr, float $perc):float | Returns the percentile value
stats_stat_powersum ( array $arr, float $power):float | Returns the power sum of a vector
stats_variance ( array $a, bool $sample = reffalse;):float | Returns the variance
stomp_connect_error ( ):string | Returns a string description of the last connect error
stomp_version ( ):string | Gets the current stomp extension version
stream_bucket_append ( resource $brigade, object $bucket):void | Append bucket to brigade
stream_bucket_make_writeable ( resource $brigade):object|null | Returns a bucket object from the brigade to operate on
stream_bucket_new ( resource $stream, string $buffer):object | Create a new bucket for use on the current stream
stream_bucket_prepend ( resource $brigade, object $bucket):void | Prepend bucket to brigade
stream_context_create (  $options = refnull;,  $params = refnull;):resource | Creates a stream context
stream_context_get_default (  $options = refnull;):resource | Retrieve the default stream context
stream_context_get_options ( resource $stream_or_context):array | Retrieve options for a stream/wrapper/context
stream_context_get_params ( resource $context):array | Retrieves parameters from a context
stream_context_set_default ( array $options):resource | Set the default stream context
stream_context_set_option ( resource $stream_or_context, string $wrapper, string $option, mixed $value):bool | Sets an option for a stream/wrapper/context
stream_context_set_options ( resource $context, array $options):bool | Sets options on the specified context
stream_context_set_params ( resource $context, array $params):bool | Set parameters for a stream/wrapper/context
stream_copy_to_stream ( resource $from, resource $to,  $length = refnull;, int $offset = 0):int|false | Copies data from one stream to another
stream_filter_append ( resource $stream, string $filtername, int $read_write, mixed $params):resource | Attach a filter to a stream
stream_filter_prepend ( resource $stream, string $filtername, int $read_write, mixed $params):resource | Attach a filter to a stream
stream_filter_register ( string $filter_name, string $class):bool | Register a user defined stream filter
stream_filter_remove ( resource $stream_filter):bool | Remove a filter from a stream
stream_get_contents ( resource $stream,  $length = refnull;, int $offset = -1):string|false | Reads remainder of a stream into a string
stream_get_filters ( ):array | Retrieve list of registered filters
stream_get_line ( resource $stream, int $length, string $ending = ""):string|false | Gets line from stream resource up to a given delimiter
stream_get_meta_data ( resource $stream):array | Retrieves header/meta data from streams/file pointers
stream_get_transports ( ):array | Retrieve list of registered socket transports
stream_get_wrappers ( ):array | Retrieve list of registered streams
stream_is_local (  $stream):bool | Checks if a stream is a local stream
stream_isatty ( resource $stream):bool | Check if a stream is a TTY
stream_notification_callback ( int $notification_code, int $severity,  $message, int $message_code, int $bytes_transferred, int $bytes_max):void | A callback function for the  context parameter
stream_register_wrapper ( string $protocol, string $class, int $flags = 0):bool | Register a URL wrapper implemented as a PHP class
stream_resolve_include_path ( string $filename):string|false | Resolve filename against the include path
stream_select (  $read,  $write,  $except,  $seconds,  $microseconds = refnull;):int|false | Runs the equivalent of the select() system call on the given    arrays of streams with a timeout specified by seconds and microseconds
stream_set_blocking ( resource $stream, bool $enable):bool | Set blocking/non-blocking mode on a stream
stream_set_chunk_size ( resource $stream, int $size):int | Set the stream chunk size
stream_set_read_buffer ( resource $stream, int $size):int | Set read file buffering on the given stream
stream_set_timeout ( resource $stream, int $seconds, int $microseconds = 0):bool | Set timeout period on a stream
stream_set_write_buffer ( resource $stream, int $size):int | Sets write file buffering on the given stream
stream_socket_accept ( string $address, int $error_code = refnull;, string $error_message = refnull;, int $flags = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN,  $context = refnull;):resource|false | Create an Internet or Unix domain server socket
stream_socket_client ( string $address, int $error_code = refnull;, string $error_message = refnull;,  $timeout = refnull;, int $flags = STREAM_CLIENT_CONNECT,  $context = refnull;):resource|false | Open Internet or Unix domain socket connection
stream_socket_enable_crypto ( resource $stream, bool $enable,  $crypto_method = refnull;,  $session_stream = refnull;):int|bool | Turns encryption on/off on an already connected socket
stream_socket_get_name ( resource $socket, bool $remote):string|false | Retrieve the name of the local or remote sockets
stream_socket_pair ( int $domain, int $type, int $protocol):array|false | Creates a pair of connected, indistinguishable socket streams
stream_socket_recvfrom ( resource $socket, int $length, int $flags = 0,  $address = refnull;):string|false | Receives data from a socket, connected or not
stream_socket_sendto ( resource $socket, string $data, int $flags = 0, string $address = ""):int|false | Sends a message to a socket, whether it is connected or not
stream_socket_server ( string $address, int $error_code = refnull;, string $error_message = refnull;, int $flags = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN,  $context = refnull;):resource|false | Create an Internet or Unix domain server socket
stream_socket_shutdown ( resource $stream, int $mode):bool | Shutdown a full-duplex connection
stream_supports_lock ( resource $stream):bool | Tells whether the stream supports locking
stream_wrapper_register ( string $protocol, string $class, int $flags = 0):bool | Register a URL wrapper implemented as a PHP class
stream_wrapper_restore ( string $protocol):bool | Restores a previously unregistered built-in wrapper
stream_wrapper_unregister ( string $protocol):bool | Unregister a URL wrapper
addcslashes ( string $string, string $characters):string | Quote string with slashes in a C style
addslashes ( string $string):string | Quote string with slashes
bin2hex ( string $string):string | Convert binary data into hexadecimal representation
chop ( string $string, string $characters = " \n\r\t\v\x00"):string | Strip whitespace (or other characters) from the end of a string
chr ( int $codepoint):string | Generate a single-byte string from a number
chunk_split ( string $string, int $length = 76, string $separator = "\r\n"):string | Split a string into smaller chunks
convert_cyr_string ( string $str, string $from, string $to):string | Convert from one Cyrillic character set to another
convert_uudecode ( string $string):string|false | Decode a uuencoded string
convert_uuencode ( string $string):string | Uuencode a string
count_chars ( string $string, int $mode = 0):array|string | Return information about characters used in a string
crc32 ( string $string):int | Calculates the crc32 polynomial of a string
crypt ( string $string, string $salt):string | One-way string hashing
echo ( string $expressions):void | Output one or more strings
explode ( string $separator, string $string, int $limit = PHP_INT_MAX):array | Split a string by a string
fprintf ( resource $stream, string $format, mixed $values):int | Write a formatted string to a stream
get_html_translation_table ( string $string, int $flags = ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401,  $encoding = refnull;, bool $double_encode = reftrue;):string | Convert special characters to HTML entities
hebrev ( string $string, int $max_chars_per_line = 0):string | Convert logical Hebrew text to visual text
hebrevc ( string $hebrew_text, int $max_chars_per_line = 0):string | Convert logical Hebrew text to visual text with newline conversion
hex2bin ( string $string):string|false | Decodes a hexadecimally encoded binary string
html_entity_decode ( string $string, int $flags = ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401,  $encoding = refnull;):string | Convert HTML entities to their corresponding characters
htmlentities ( string $string, int $flags = ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401,  $encoding = refnull;, bool $double_encode = reftrue;):string | Convert all applicable characters to HTML entities
htmlspecialchars_decode ( string $string, int $flags = ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401):string | Convert special HTML entities back to characters
htmlspecialchars ( string $string, int $flags = ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401,  $encoding = refnull;, bool $double_encode = reftrue;):string | Convert special characters to HTML entities
implode ( string $separator, array $array):string | Join array elements with a string
join ( string $separator, array $array):string | Join array elements with a string
lcfirst ( string $string):string | Make a string's first character lowercase
levenshtein ( string $string1, string $string2, int $insertion_cost = 1, int $replacement_cost = 1, int $deletion_cost = 1):int | Calculate Levenshtein distance between two strings
localeconv ( ):array | Get numeric formatting information
ltrim ( string $string, string $characters = " \n\r\t\v\x00"):string | Strip whitespace (or other characters) from the beginning of a string
md5_file ( string $filename, bool $binary = reffalse;):string|false | Calculates the md5 hash of a given file
md5 ( string $string, bool $binary = reffalse;):string | Calculate the md5 hash of a string
metaphone ( string $string, int $max_phonemes = 0):string | Calculate the metaphone key of a string
money_format ( string $format, float $number):string | Formats a number as a currency string
nl_langinfo ( int $item):string|false | Query language and locale information
nl2br ( string $string, bool $use_xhtml = reftrue;):string | Inserts HTML line breaks before all newlines in a string
number_format ( float $num, int $decimals = 0,  $decimal_separator = ".",  $thousands_separator = ","):string | Format a number with grouped thousands
ord ( string $character):int | Convert the first byte of a string to a value between 0 and 255
parse_str ( string $string, array $result):void | Parses the string into variables
print ( string $expression):int | Output a string
printf ( string $format, mixed $values):int | Output a formatted string
quoted_printable_decode ( string $string):string | Convert a quoted-printable string to an 8 bit string
quoted_printable_encode ( string $string):string | Convert a 8 bit string to a quoted-printable string
quotemeta ( string $string):string | Quote meta characters
rtrim ( string $string, string $characters = " \n\r\t\v\x00"):string | Strip whitespace (or other characters) from the end of a string
setlocale ( int $category, string $locales, string $rest):string|false | Set locale information
sha1_file ( string $filename, bool $binary = reffalse;):string|false | Calculate the sha1 hash of a file
sha1 ( string $string, bool $binary = reffalse;):string | Calculate the sha1 hash of a string
similar_text ( string $string1, string $string2, float $percent = refnull;):int | Calculate the similarity between two strings
soundex ( string $string):string | Calculate the soundex key of a string
sprintf ( string $format, mixed $values):string | Return a formatted string
sscanf ( string $string, string $format, mixed $vars):array|int|null | Parses input from a string according to a format
str_contains ( string $haystack, string $needle):bool | Determine if a string contains a given substring
str_decrement ( string $string):string | Decrement an alphanumeric string
str_ends_with ( string $haystack, string $needle):bool | Checks if a string ends with a given substring
str_getcsv ( string $string, string $separator = ",", string $enclosure = "\"", string $escape = "\\"):array | Parse a CSV string into an array
str_increment ( string $string):string | Increment an alphanumeric string
str_ireplace (  $search,  $replace,  $subject, int $count = refnull;):string|array | Replace all occurrences of the search string with the replacement string
str_pad ( string $string, int $length, string $pad_string = " ", int $pad_type = STR_PAD_RIGHT):string | Pad a string to a certain length with another string
str_repeat ( string $string, int $times):string | Repeat a string
str_replace (  $search,  $replace,  $subject, int $count = refnull;):string|array | Replace all occurrences of the search string with the replacement string
str_rot13 ( string $string):string | Perform the rot13 transform on a string
str_shuffle ( string $string):string | Randomly shuffles a string
str_split ( string $string, int $length = 1):array | Convert a string to an array
str_starts_with ( string $haystack, string $needle):bool | Checks if a string starts with a given substring
str_word_count ( string $string, int $format = 0,  $characters = refnull;):array|int | Return information about words used in a string
strcasecmp ( string $string1, string $string2):int | Binary safe case-insensitive string comparison
strchr ( string $haystack, string $needle, bool $before_needle = reffalse;):string|false | Find the first occurrence of a string
strcmp ( string $string1, string $string2):int | Binary safe string comparison
strcoll ( string $string1, string $string2):int | Locale based string comparison
strcspn ( string $string, string $characters, int $offset = 0,  $length = refnull;):int | Find length of initial segment not matching mask
strip_tags ( string $string,  $allowed_tags = refnull;):string | Strip HTML and PHP tags from a string
stripcslashes ( string $string, string $characters):string | Quote string with slashes in a C style
stripos ( string $haystack, string $needle, int $offset = 0):int|false | Find the position of the first occurrence of a case-insensitive substring in a string
stripslashes ( string $string):string | Un-quotes a quoted string
stristr ( string $haystack, string $needle, bool $before_needle = reffalse;):string|false | Find the first occurrence of a string
strlen ( string $string):int | Get string length
strnatcasecmp ( string $string1, string $string2):int | Case insensitive string comparisons using a "natural order" algorithm
strnatcmp ( string $string1, string $string2):int | String comparisons using a "natural order" algorithm
strncasecmp ( string $string1, string $string2, int $length):int | Binary safe case-insensitive string comparison of the first n characters
strncmp ( string $string1, string $string2, int $length):int | Binary safe string comparison of the first n characters
strpbrk ( string $string, string $characters):string|false | Search a string for any of a set of characters
strpos ( string $haystack, string $needle, int $offset = 0):int|false | Find the position of the first occurrence of a substring in a string
strrchr ( string $haystack, string $needle, bool $before_needle = reffalse;):string|false | Find the last occurrence of a character in a string
strrev ( string $string):string | Reverse a string
strripos ( string $haystack, string $needle, int $offset = 0):int|false | Find the position of the last occurrence of a case-insensitive substring in a string
strrpos ( string $haystack, string $needle, int $offset = 0):int|false | Find the position of the last occurrence of a substring in a string
strspn ( string $string, string $characters, int $offset = 0,  $length = refnull;):int | Finds the length of the initial segment of a string consisting    entirely of characters contained within a given mask
strstr ( string $haystack, string $needle, bool $before_needle = reffalse;):string|false | Find the first occurrence of a string
strtok ( string $string, string $token):string|false | Tokenize string
strtolower ( string $string):string | Make a string lowercase
strtoupper ( string $string):string | Make a string uppercase
strtr ( string $string, string $from, string $to):string | Translate characters or replace substrings
substr_compare ( string $haystack, string $needle, int $offset,  $length = refnull;, bool $case_insensitive = reffalse;):int | Binary safe comparison of two strings from an offset, up to length characters
substr_count ( string $haystack, string $needle, int $offset = 0,  $length = refnull;):int | Count the number of substring occurrences
substr_replace (  $string,  $replace,  $offset,  $length = refnull;):string|array | Replace text within a portion of a string
substr ( string $string, int $offset,  $length = refnull;):string | Return part of a string
trim ( string $string, string $characters = " \n\r\t\v\x00"):string | Strip whitespace (or other characters) from the beginning and end of a string
ucfirst ( string $string):string | Make a string's first character uppercase
ucwords ( string $string, string $separators = " \t\r\n\f\v"):string | Uppercase the first character of each word in a string
utf8_decode ( string $string):string | Converts a string from UTF-8 to ISO-8859-1, replacing invalid or unrepresentable    characters
utf8_encode ( string $string):string | Converts a string from ISO-8859-1 to UTF-8
vfprintf ( resource $stream, string $format, array $values):int | Write a formatted string to a stream
vprintf ( string $format, array $values):int | Output a formatted string
vsprintf ( string $format, array $values):string | Return a formatted string
wordwrap ( string $string, int $width = 75, string $break = "\n", bool $cut_long_words = reffalse;):string | Wraps a string to a given number of characters
svn_add ( string $path, bool $recursive = reftrue;, bool $force = reffalse;):bool | Schedules the addition of an item in a working directory
svn_auth_get_parameter ( string $key):string | Retrieves authentication parameter
svn_auth_set_parameter ( string $key, string $value):void | Sets an authentication parameter
svn_blame ( string $repository_url, int $revision_no = SVN_REVISION_HEAD):array | Get the SVN blame for a file
svn_cat ( string $repos_url, int $revision_no):string | Returns the contents of a file in a repository
svn_checkout ( string $repos, string $targetpath, int $revision, int $flags = 0):bool | Checks out a working copy from the repository
svn_cleanup ( string $workingdir):bool | Recursively cleanup a working copy directory, finishing incomplete operations and removing locks
svn_client_version ( ):string | Returns the version of the SVN client libraries
svn_commit ( string $log, array $targets, bool $recursive = reftrue;):array | Sends changes from the local working copy to the repository
svn_delete ( string $path, bool $force = reffalse;):bool | Delete items from a working copy or repository
svn_diff ( string $path1, int $rev1, string $path2, int $rev2):array | Recursively diffs two paths
svn_export ( string $frompath, string $topath, bool $working_copy = reftrue;, int $revision_no = -1):bool | Export the contents of a SVN directory
svn_fs_abort_txn ( resource $txn):bool | Aborts a transaction
svn_fs_apply_text ( resource $root, string $path):resource | Creates and returns a stream that will be used to replace
svn_fs_begin_txn2 ( resource $repos, int $rev):resource | Create a new transaction
svn_fs_change_node_prop ( resource $root, string $path, string $name, string $value):bool | Return true if everything is ok, false otherwise
svn_fs_check_path ( resource $fsroot, string $path):int | Determines what kind of item lives at path in a given repository fsroot
svn_fs_contents_changed ( resource $root1, string $path1, resource $root2, string $path2):bool | Return true if content is different, false otherwise
svn_fs_copy ( resource $from_root, string $from_path, resource $to_root, string $to_path):bool | Copies a file or a directory
svn_fs_delete ( resource $root, string $path):bool | Deletes a file or a directory
svn_fs_dir_entries ( resource $fsroot, string $path):array | Enumerates the directory entries under path; returns a hash of dir names to file type
svn_fs_file_contents ( resource $fsroot, string $path):resource | Returns a stream to access the contents of a file from a given version of the fs
svn_fs_file_length ( resource $fsroot, string $path):int | Returns the length of a file from a given version of the fs
svn_fs_is_dir ( resource $root, string $path):bool | Determines if a path points to a directory
svn_fs_is_file ( resource $root, string $path):bool | Determines if a path points to a file
svn_fs_make_dir ( resource $root, string $path):bool | Creates a new empty directory
svn_fs_make_file ( resource $root, string $path):bool | Creates a new empty file
svn_fs_node_created_rev ( resource $fsroot, string $path):int | Returns the revision in which path under fsroot was created
svn_fs_node_prop ( resource $fsroot, string $path, string $propname):string | Returns the value of a property for a node
svn_fs_props_changed ( resource $root1, string $path1, resource $root2, string $path2):bool | Return true if props are different, false otherwise
svn_fs_revision_prop ( resource $fs, int $revnum, string $propname):string | Fetches the value of a named property
svn_fs_revision_root ( resource $fs, int $revnum):resource | Get a handle on a specific version of the repository root
svn_fs_txn_root ( resource $txn):resource | Creates and returns a transaction root
svn_fs_youngest_rev ( resource $fs):int | Returns the number of the youngest revision in the filesystem
svn_import ( string $path, string $url, bool $nonrecursive):bool | Imports an unversioned path into a repository
svn_log ( string $repos_url, int $start_revision, int $end_revision, int $limit = 0, int $flags = SVN_DISCOVER_CHANGED_PATHS | SVN_STOP_ON_COPY):array | Returns the commit log messages of a repository URL
svn_ls ( string $repos_url, int $revision_no = SVN_REVISION_HEAD, bool $recurse = reffalse;, bool $peg = reffalse;):array | Returns list of directory contents in repository URL, optionally at revision number
svn_mkdir ( string $path, string $log_message):bool | Creates a directory in a working copy or repository
svn_repos_create ( string $path, array $config, array $fsconfig):resource | Create a new subversion repository at path
svn_repos_fs_begin_txn_for_commit ( resource $repos, int $rev, string $author, string $log_msg):resource | Create a new transaction
svn_repos_fs_commit_txn ( resource $txn):int | Commits a transaction and returns the new revision
svn_repos_fs ( resource $repos):resource | Gets a handle on the filesystem for a repository
svn_repos_hotcopy ( string $repospath, string $destpath, bool $cleanlogs):bool | Make a hot-copy of the repos at repospath; copy it to destpath
svn_repos_open ( string $path):resource | Open a shared lock on a repository
svn_repos_recover ( string $path):bool | Run recovery procedures on the repository located at path
svn_revert ( string $path, bool $recursive = reffalse;):bool | Revert changes to the working copy
svn_status ( string $path, int $flags = 0):array | Returns the status of working copy files and directories
svn_update ( string $path, int $revno = SVN_REVISION_HEAD, bool $recurse = reftrue;):int | Update working copy
swoole_async_dns_lookup ( string $hostname, callable $callback):bool | Async and non-blocking hostname to IP lookup
swoole_async_read ( string $filename, callable $callback, int $chunk_size = 65536, int $offset = 0):bool | Read file stream asynchronously
swoole_async_readfile ( string $filename, callable $callback):bool | Read a file asynchronously
swoole_async_set ( array $settings):void | Update the async I/O options
swoole_async_write ( string $filename, string $content, int $offset, callable $callback):bool | Write data to a file stream asynchronously
swoole_async_writefile ( string $filename, string $content, callable $callback, int $flags = 0):bool | Write data to a file asynchronously
swoole_clear_error ( ):void | Clear errors in the socket or on the last error code
swoole_client_select ( array $read_array, array $write_array, array $error_array, float $timeout = 0.5):int | Get the file description which are ready to read/write or error
swoole_cpu_num ( ):int | Get the number of CPU
swoole_errno ( ):int | Get the error code of the latest system call
swoole_error_log ( int $level, string $msg):void | Output error messages to the log
swoole_event_add ( int $fd, callable $read_callback, callable $write_callback, int $events = 0):int | Add new callback functions of a socket into the EventLoop
swoole_event_defer ( callable $callback):bool | Add callback function to the next event loop
swoole_event_del ( int $fd):bool | Remove all event callback functions of a socket
swoole_event_exit ( ):void | Exit the eventloop, only available at the client side
swoole_event_set ( int $fd, callable $read_callback, callable $write_callback, int $events = 0):bool | Update the event callback functions of a socket
swoole_event_wait ( ):void | Start the event loop
swoole_event_write ( int $fd, string $data):bool | Write data to a socket
swoole_get_local_ip ( ):array | Get the IPv4 IP addresses of each NIC on the machine
swoole_last_error ( ):int | Get the lastest error message
swoole_load_module ( string $filename):mixed | Load a swoole extension
swoole_select ( array $read_array, array $write_array, array $error_array, float $timeout):int | Select the file descriptions which are ready to read/write or error in the eventloop
swoole_set_process_name ( string $process_name, int $size = 128):void | Set the process name
swoole_strerror ( int $errno, int $error_type = 0):string | Convert the Errno into error messages
swoole_timer_after ( int $ms, callable $callback, mixed $param):int | Trigger a one time callback function in the future
swoole_timer_exists ( int $timer_id):bool | Check if a timer callback function is existed
swoole_timer_tick ( int $ms, callable $callback, mixed $param):int | Trigger a timer tick callback function by time interval
swoole_version ( ):string | Get the version of Swoole
is_tainted ( string $string):bool | Checks whether a string is tainted
taint ( string $string, string $strings):bool | Taint a string
untaint ( string $string, string $strings):bool | Untaint strings
tcpwrap_check ( string $daemon, string $address, string $user, bool $nodns = reffalse;):bool | Performs a tcpwrap check
ob_tidyhandler ( string $input, int $mode):string | ob_start callback function to repair the buffer
tidy_access_count ( tidy $tidy):int | Returns the Number of Tidy accessibility warnings encountered for specified document
tidy_config_count ( tidy $tidy):int | Returns the Number of Tidy configuration errors encountered for specified document
tidy_error_count ( tidy $tidy):int | Returns the Number of Tidy errors encountered for specified document
tidy_get_output ( tidy $tidy):string | Return a string representing the parsed tidy markup
tidy_warning_count ( tidy $tidy):int | Returns the Number of Tidy warnings encountered for specified document
token_get_all ( string $code, int $flags = 0):array | Split given source into PHP tokens
token_name ( int $id):string | Get the symbolic name of a given PHP token
trader_acos ( array $real):array | Vector Trigonometric ACos
trader_ad ( array $high, array $low, array $close, array $volume):array | Chaikin A/D Line
trader_add ( array $real0, array $real1):array | Vector Arithmetic Add
trader_adosc ( array $high, array $low, array $close, array $volume, int $fastPeriod, int $slowPeriod):array | Chaikin A/D Oscillator
trader_adx ( array $high, array $low, array $close, int $timePeriod):array | Average Directional Movement Index
trader_adxr ( array $high, array $low, array $close, int $timePeriod):array | Average Directional Movement Index Rating
trader_apo ( array $real, int $fastPeriod, int $slowPeriod, int $mAType):array | Absolute Price Oscillator
trader_aroon ( array $high, array $low, int $timePeriod):array | Aroon
trader_aroonosc ( array $high, array $low, int $timePeriod):array | Aroon Oscillator
trader_asin ( array $real):array | Vector Trigonometric ASin
trader_atan ( array $real):array | Vector Trigonometric ATan
trader_atr ( array $high, array $low, array $close, int $timePeriod):array | Average True Range
trader_avgprice ( array $open, array $high, array $low, array $close):array | Average Price
trader_bbands ( array $real, int $timePeriod, float $nbDevUp, float $nbDevDn, int $mAType):array | Bollinger Bands
trader_beta ( array $real0, array $real1, int $timePeriod):array | Beta
trader_bop ( array $open, array $high, array $low, array $close):array | Balance Of Power
trader_cci ( array $high, array $low, array $close, int $timePeriod):array | Commodity Channel Index
trader_cdl2crows ( array $open, array $high, array $low, array $close):array | Two Crows
trader_cdl3blackcrows ( array $open, array $high, array $low, array $close):array | Three Black Crows
trader_cdl3inside ( array $open, array $high, array $low, array $close):array | Three Inside Up/Down
trader_cdl3linestrike ( array $open, array $high, array $low, array $close):array | Three-Line Strike
trader_cdl3outside ( array $open, array $high, array $low, array $close):array | Three Outside Up/Down
trader_cdl3starsinsouth ( array $open, array $high, array $low, array $close):array | Three Stars In The South
trader_cdl3whitesoldiers ( array $open, array $high, array $low, array $close):array | Three Advancing White Soldiers
trader_cdlabandonedbaby ( array $open, array $high, array $low, array $close, float $penetration):array | Abandoned Baby
trader_cdladvanceblock ( array $open, array $high, array $low, array $close):array | Advance Block
trader_cdlbelthold ( array $open, array $high, array $low, array $close):array | Belt-hold
trader_cdlbreakaway ( array $open, array $high, array $low, array $close):array | Breakaway
trader_cdlclosingmarubozu ( array $open, array $high, array $low, array $close):array | Closing Marubozu
trader_cdlconcealbabyswall ( array $open, array $high, array $low, array $close):array | Concealing Baby Swallow
trader_cdlcounterattack ( array $open, array $high, array $low, array $close):array | Counterattack
trader_cdldarkcloudcover ( array $open, array $high, array $low, array $close, float $penetration):array | Dark Cloud Cover
trader_cdldoji ( array $open, array $high, array $low, array $close):array | Doji
trader_cdldojistar ( array $open, array $high, array $low, array $close):array | Doji Star
trader_cdldragonflydoji ( array $open, array $high, array $low, array $close):array | Dragonfly Doji
trader_cdlengulfing ( array $open, array $high, array $low, array $close):array | Engulfing Pattern
trader_cdleveningdojistar ( array $open, array $high, array $low, array $close, float $penetration):array | Evening Doji Star
trader_cdleveningstar ( array $open, array $high, array $low, array $close, float $penetration):array | Evening Star
trader_cdlgapsidesidewhite ( array $open, array $high, array $low, array $close):array | Up/Down-gap side-by-side white lines
trader_cdlgravestonedoji ( array $open, array $high, array $low, array $close):array | Gravestone Doji
trader_cdlhammer ( array $open, array $high, array $low, array $close):array | Hammer
trader_cdlhangingman ( array $open, array $high, array $low, array $close):array | Hanging Man
trader_cdlharami ( array $open, array $high, array $low, array $close):array | Harami Pattern
trader_cdlharamicross ( array $open, array $high, array $low, array $close):array | Harami Cross Pattern
trader_cdlhighwave ( array $open, array $high, array $low, array $close):array | High-Wave Candle
trader_cdlhikkake ( array $open, array $high, array $low, array $close):array | Hikkake Pattern
trader_cdlhikkakemod ( array $open, array $high, array $low, array $close):array | Modified Hikkake Pattern
trader_cdlhomingpigeon ( array $open, array $high, array $low, array $close):array | Homing Pigeon
trader_cdlidentical3crows ( array $open, array $high, array $low, array $close):array | Identical Three Crows
trader_cdlinneck ( array $open, array $high, array $low, array $close):array | In-Neck Pattern
trader_cdlinvertedhammer ( array $open, array $high, array $low, array $close):array | Inverted Hammer
trader_cdlkicking ( array $open, array $high, array $low, array $close):array | Kicking
trader_cdlkickingbylength ( array $open, array $high, array $low, array $close):array | Kicking - bull/bear determined by the longer marubozu
trader_cdlladderbottom ( array $open, array $high, array $low, array $close):array | Ladder Bottom
trader_cdllongleggeddoji ( array $open, array $high, array $low, array $close):array | Long Legged Doji
trader_cdllongline ( array $open, array $high, array $low, array $close):array | Long Line Candle
trader_cdlmarubozu ( array $open, array $high, array $low, array $close):array | Marubozu
trader_cdlmatchinglow ( array $open, array $high, array $low, array $close):array | Matching Low
trader_cdlmathold ( array $open, array $high, array $low, array $close, float $penetration):array | Mat Hold
trader_cdlmorningdojistar ( array $open, array $high, array $low, array $close, float $penetration):array | Morning Doji Star
trader_cdlmorningstar ( array $open, array $high, array $low, array $close, float $penetration):array | Morning Star
trader_cdlonneck ( array $open, array $high, array $low, array $close):array | On-Neck Pattern
trader_cdlpiercing ( array $open, array $high, array $low, array $close):array | Piercing Pattern
trader_cdlrickshawman ( array $open, array $high, array $low, array $close):array | Rickshaw Man
trader_cdlrisefall3methods ( array $open, array $high, array $low, array $close):array | Rising/Falling Three Methods
trader_cdlseparatinglines ( array $open, array $high, array $low, array $close):array | Separating Lines
trader_cdlshootingstar ( array $open, array $high, array $low, array $close):array | Shooting Star
trader_cdlshortline ( array $open, array $high, array $low, array $close):array | Short Line Candle
trader_cdlspinningtop ( array $open, array $high, array $low, array $close):array | Spinning Top
trader_cdlstalledpattern ( array $open, array $high, array $low, array $close):array | Stalled Pattern
trader_cdlsticksandwich ( array $open, array $high, array $low, array $close):array | Stick Sandwich
trader_cdltakuri ( array $open, array $high, array $low, array $close):array | Takuri (Dragonfly Doji with very long lower shadow)
trader_cdltasukigap ( array $open, array $high, array $low, array $close):array | Tasuki Gap
trader_cdlthrusting ( array $open, array $high, array $low, array $close):array | Thrusting Pattern
trader_cdltristar ( array $open, array $high, array $low, array $close):array | Tristar Pattern
trader_cdlunique3river ( array $open, array $high, array $low, array $close):array | Unique 3 River
trader_cdlupsidegap2crows ( array $open, array $high, array $low, array $close):array | Upside Gap Two Crows
trader_cdlxsidegap3methods ( array $open, array $high, array $low, array $close):array | Upside/Downside Gap Three Methods
trader_ceil ( array $real):array | Vector Ceil
trader_cmo ( array $real, int $timePeriod):array | Chande Momentum Oscillator
trader_correl ( array $real0, array $real1, int $timePeriod):array | Pearson's Correlation Coefficient (r)
trader_cos ( array $real):array | Vector Trigonometric Cos
trader_cosh ( array $real):array | Vector Trigonometric Cosh
trader_dema ( array $real, int $timePeriod):array | Double Exponential Moving Average
trader_div ( array $real0, array $real1):array | Vector Arithmetic Div
trader_dx ( array $high, array $low, array $close, int $timePeriod):array | Directional Movement Index
trader_ema ( array $real, int $timePeriod):array | Exponential Moving Average
trader_errno ( ):int | Get error code
trader_exp ( array $real):array | Vector Arithmetic Exp
trader_floor ( array $real):array | Vector Floor
trader_get_compat ( ):int | Get compatibility mode
trader_get_unstable_period ( int $functionId):int | Get unstable period
trader_ht_dcperiod ( array $real):array | Hilbert Transform - Dominant Cycle Period
trader_ht_dcphase ( array $real):array | Hilbert Transform - Dominant Cycle Phase
trader_ht_phasor ( array $real):array | Hilbert Transform - Phasor Components
trader_ht_sine ( array $real):array | Hilbert Transform - SineWave
trader_ht_trendline ( array $real):array | Hilbert Transform - Instantaneous Trendline
trader_ht_trendmode ( array $real):array | Hilbert Transform - Trend vs Cycle Mode
trader_kama ( array $real, int $timePeriod):array | Kaufman Adaptive Moving Average
trader_linearreg_angle ( array $real, int $timePeriod):array | Linear Regression Angle
trader_linearreg_intercept ( array $real, int $timePeriod):array | Linear Regression Intercept
trader_linearreg_slope ( array $real, int $timePeriod):array | Linear Regression Slope
trader_linearreg ( array $real, int $timePeriod):array | Linear Regression
trader_ln ( array $real):array | Vector Log Natural
trader_log10 ( array $real):array | Vector Log10
trader_ma ( array $real, int $timePeriod, int $mAType):array | Moving average
trader_macd ( array $real, int $fastPeriod, int $slowPeriod, int $signalPeriod):array | Moving Average Convergence/Divergence
trader_macdext ( array $real, int $fastPeriod, int $fastMAType, int $slowPeriod, int $slowMAType, int $signalPeriod, int $signalMAType):array | MACD with controllable MA type
trader_macdfix ( array $real, int $signalPeriod):array | Moving Average Convergence/Divergence Fix 12/26
trader_mama ( array $real, float $fastLimit, float $slowLimit):array | MESA Adaptive Moving Average
trader_mavp ( array $real, array $periods, int $minPeriod, int $maxPeriod, int $mAType):array | Moving average with variable period
trader_max ( array $real, int $timePeriod):array | Highest value over a specified period
trader_maxindex ( array $real, int $timePeriod):array | Index of highest value over a specified period
trader_medprice ( array $high, array $low):array | Median Price
trader_mfi ( array $high, array $low, array $close, array $volume, int $timePeriod):array | Money Flow Index
trader_midpoint ( array $real, int $timePeriod):array | MidPoint over period
trader_midprice ( array $high, array $low, int $timePeriod):array | Midpoint Price over period
trader_min ( array $real, int $timePeriod):array | Lowest value over a specified period
trader_minindex ( array $real, int $timePeriod):array | Index of lowest value over a specified period
trader_minmax ( array $real, int $timePeriod):array | Lowest and highest values over a specified period
trader_minmaxindex ( array $real, int $timePeriod):array | Indexes of lowest and highest values over a specified period
trader_minus_di ( array $high, array $low, array $close, int $timePeriod):array | Minus Directional Indicator
trader_minus_dm ( array $high, array $low, int $timePeriod):array | Minus Directional Movement
trader_mom ( array $real, int $timePeriod):array | Momentum
trader_mult ( array $real0, array $real1):array | Vector Arithmetic Mult
trader_natr ( array $high, array $low, array $close, int $timePeriod):array | Normalized Average True Range
trader_obv ( array $real, array $volume):array | On Balance Volume
trader_plus_di ( array $high, array $low, array $close, int $timePeriod):array | Plus Directional Indicator
trader_plus_dm ( array $high, array $low, int $timePeriod):array | Plus Directional Movement
trader_ppo ( array $real, int $fastPeriod, int $slowPeriod, int $mAType):array | Percentage Price Oscillator
trader_roc ( array $real, int $timePeriod):array | Rate of change : ((price/prevPrice)-1)*100
trader_rocp ( array $real, int $timePeriod):array | Rate of change Percentage: (price-prevPrice)/prevPrice
trader_rocr ( array $real, int $timePeriod):array | Rate of change ratio: (price/prevPrice)
trader_rocr100 ( array $real, int $timePeriod):array | Rate of change ratio 100 scale: (price/prevPrice)*100
trader_rsi ( array $real, int $timePeriod):array | Relative Strength Index
trader_sar ( array $high, array $low, float $acceleration, float $maximum):array | Parabolic SAR
trader_sarext ( array $high, array $low, float $startValue, float $offsetOnReverse, float $accelerationInitLong, float $accelerationLong, float $accelerationMaxLong, float $accelerationInitShort, float $accelerationShort, float $accelerationMaxShort):array | Parabolic SAR - Extended
trader_set_compat ( int $compatId):void | Set compatibility mode
trader_set_unstable_period ( int $functionId, int $timePeriod):void | Set unstable period
trader_sin ( array $real):array | Vector Trigonometric Sin
trader_sinh ( array $real):array | Vector Trigonometric Sinh
trader_sma ( array $real, int $timePeriod):array | Simple Moving Average
trader_sqrt ( array $real):array | Vector Square Root
trader_stddev ( array $real, int $timePeriod, float $nbDev):array | Standard Deviation
trader_stoch ( array $high, array $low, array $close, int $fastK_Period, int $slowK_Period, int $slowK_MAType, int $slowD_Period, int $slowD_MAType):array | Stochastic
trader_stochf ( array $high, array $low, array $close, int $fastK_Period, int $fastD_Period, int $fastD_MAType):array | Stochastic Fast
trader_stochrsi ( array $real, int $timePeriod, int $fastK_Period, int $fastD_Period, int $fastD_MAType):array | Stochastic Relative Strength Index
trader_sub ( array $real0, array $real1):array | Vector Arithmetic Subtraction
trader_sum ( array $real, int $timePeriod):array | Summation
trader_t3 ( array $real, int $timePeriod, float $vFactor):array | Triple Exponential Moving Average (T3)
trader_tan ( array $real):array | Vector Trigonometric Tan
trader_tanh ( array $real):array | Vector Trigonometric Tanh
trader_tema ( array $real, int $timePeriod):array | Triple Exponential Moving Average
trader_trange ( array $high, array $low, array $close):array | True Range
trader_trima ( array $real, int $timePeriod):array | Triangular Moving Average
trader_trix ( array $real, int $timePeriod):array | 1-day Rate-Of-Change (ROC) of a Triple Smooth EMA
trader_tsf ( array $real, int $timePeriod):array | Time Series Forecast
trader_typprice ( array $high, array $low, array $close):array | Typical Price
trader_ultosc ( array $high, array $low, array $close, int $timePeriod1, int $timePeriod2, int $timePeriod3):array | Ultimate Oscillator
trader_var ( array $real, int $timePeriod, float $nbDev):array | Variance
trader_wclprice ( array $high, array $low, array $close):array | Weighted Close Price
trader_willr ( array $high, array $low, array $close, int $timePeriod):array | Williams' %R
trader_wma ( array $real, int $timePeriod):array | Weighted Moving Average
UI\Draw\Text\Font\fontFamilies ( ):array | Retrieve Font Families
UI\quit ( ):void | Quit UI Loop
UI\run ( int $flags):void | Enter UI Loop
odbc_autocommit ( resource $odbc, bool $enable = refnull;):int|bool | Toggle autocommit behaviour
odbc_binmode ( resource $statement, int $mode):bool | Handling of binary column data
odbc_close_all ( ):void | Close all ODBC connections
odbc_close ( resource $odbc):void | Close an ODBC connection
odbc_columnprivileges ( resource $odbc,  $catalog, string $schema, string $table, string $column):resource|false | Lists columns and associated privileges for the given table
odbc_columns ( resource $odbc,  $catalog = refnull;,  $schema = refnull;,  $table = refnull;,  $column = refnull;):resource|false | Lists the column names in specified tables
odbc_commit ( resource $odbc):bool | Commit an ODBC transaction
odbc_connect ( string $dsn, string $user, string $password, int $cursor_option = SQL_CUR_USE_DRIVER):resource|false | Connect to a datasource
odbc_connection_string_is_quoted ( string $str):bool | Determines if an ODBC connection string value is quoted
odbc_connection_string_quote ( string $str):string | Quotes an ODBC connection string value
odbc_connection_string_should_quote ( string $str):bool | Determines if an ODBC connection string value should be quoted
odbc_cursor ( resource $statement):string|false | Get cursorname
odbc_data_source ( resource $odbc, int $fetch_type):array|false | Returns information about available DSNs
odbc_do ( resource $odbc, string $query):resource|false | Directly execute an SQL statement
odbc_error (  $odbc = refnull;):string | Get the last error code
odbc_errormsg (  $odbc = refnull;):string | Get the last error message
odbc_exec ( resource $odbc, string $query):resource|false | Directly execute an SQL statement
odbc_execute ( resource $statement, array $params = []):bool | Execute a prepared statement
odbc_fetch_array ( resource $statement, int $row = -1):array|false | Fetch a result row as an associative array
odbc_fetch_into ( resource $statement, array $array, int $row = 0):int|false | Fetch one result row into array
odbc_fetch_object ( resource $statement, int $row = -1):stdClass|false | Fetch a result row as an object
odbc_fetch_row ( resource $statement,  $row = refnull;):bool | Fetch a row
odbc_field_len ( resource $statement, int $field):int|false | Get the length (precision) of a field
odbc_field_name ( resource $statement, int $field):string|false | Get the columnname
odbc_field_num ( resource $statement, string $field):int|false | Return column number
odbc_field_precision ( resource $statement, int $field):int|false | Get the length (precision) of a field
odbc_field_scale ( resource $statement, int $field):int|false | Get the scale of a field
odbc_field_type ( resource $statement, int $field):string|false | Datatype of a field
odbc_foreignkeys ( resource $odbc,  $pk_catalog, string $pk_schema, string $pk_table, string $fk_catalog, string $fk_schema, string $fk_table):resource|false | Retrieves a list of foreign keys
odbc_free_result ( resource $statement):bool | Free resources associated with a result
odbc_gettypeinfo ( resource $odbc, int $data_type = 0):resource|false | Retrieves information about data types supported by the data source
odbc_longreadlen ( resource $statement, int $length):bool | Handling of LONG columns
odbc_next_result ( resource $statement):bool | Checks if multiple results are available
odbc_num_fields ( resource $statement):int | Number of columns in a result
odbc_num_rows ( resource $statement):int | Number of rows in a result
odbc_pconnect ( string $dsn, string $user, string $password, int $cursor_option = SQL_CUR_USE_DRIVER):resource|false | Open a persistent database connection
odbc_prepare ( resource $odbc, string $query):resource|false | Prepares a statement for execution
odbc_primarykeys ( resource $odbc,  $catalog, string $schema, string $table):resource|false | Gets the primary keys for a table
odbc_procedurecolumns ( resource $odbc,  $catalog = refnull;,  $schema = refnull;,  $procedure = refnull;,  $column = refnull;):resource|false | Retrieve information about parameters to procedures
odbc_procedures ( resource $odbc,  $catalog = refnull;,  $schema = refnull;,  $procedure = refnull;):resource|false | Get the list of procedures stored in a specific data source
odbc_result_all ( resource $statement, string $format = ""):int|false | Print result as HTML table
odbc_result ( resource $statement,  $field):string|bool|null | Get result data
odbc_rollback ( resource $odbc):bool | Rollback a transaction
odbc_setoption ( resource $odbc, int $which, int $option, int $value):bool | Adjust ODBC settings
odbc_specialcolumns ( resource $odbc, int $type,  $catalog, string $schema, string $table, int $scope, int $nullable):resource|false | Retrieves special columns
odbc_statistics ( resource $odbc,  $catalog, string $schema, string $table, int $unique, int $accuracy):resource|false | Retrieve statistics about a table
odbc_tableprivileges ( resource $odbc,  $catalog, string $schema, string $table):resource|false | Lists tables and the privileges associated with each table
odbc_tables ( resource $odbc,  $catalog = refnull;,  $schema = refnull;,  $table = refnull;,  $types = refnull;):resource|false | Get the list of table names stored in a specific data source
uopz_add_function ( string $function, Closure $handler, int $flags = ZEND_ACC_PUBLIC):bool | Adds non-existent function or method
uopz_allow_exit ( bool $allow):void | Allows control over disabled exit opcode
uopz_backup ( string $function):void | Backup a function
uopz_compose ( string $name, array $classes, array $methods, array $properties, int $flags):void | Compose a class
uopz_copy ( string $function):Closure | Copy a function
uopz_del_function ( string $function):bool | Deletes previously added function or method
uopz_delete ( string $function):void | Delete a function
uopz_extend ( string $class, string $parent):bool | Extend a class at runtime
uopz_flags ( string $function, int $flags = PHP_INT_MAX):int | Get or set flags on function or class
uopz_function ( string $function, Closure $handler, int $modifiers):void | Creates a function at runtime
uopz_get_exit_status ( ):mixed | Retrieve the last set exit status
uopz_get_hook ( string $function):Closure | Gets previously set hook on function or method
uopz_get_mock ( string $class):mixed | Get the current mock for a class
uopz_get_property ( string $class, string $property):mixed | Gets value of class or instance property
uopz_get_return ( string $function):mixed | Gets a previous set return value for a function
uopz_get_static ( string $class, string $function):array | Gets the static variables from function or method scope
uopz_implement ( string $class, string $interface):bool | Implements an interface at runtime
uopz_overload ( int $opcode, Callable $callable):void | Overload a VM opcode
uopz_redefine ( string $constant, mixed $value):bool | Redefine a constant
uopz_rename ( string $function, string $rename):void | Rename a function at runtime
uopz_restore ( string $function):void | Restore a previously backed up function
uopz_set_hook ( string $function, Closure $hook):bool | Sets hook to execute when entering a function or method
uopz_set_mock ( string $class, mixed $mock):void | Use mock instead of class for new objects
uopz_set_property ( string $class, string $property, mixed $value):void | Sets value of existing class or instance property
uopz_set_return ( string $function, mixed $value, bool $execute = reffalse;):bool | Provide a return value for an existing function
uopz_undefine ( string $constant):bool | Undefine a constant
uopz_unset_hook ( string $function):bool | Removes previously set hook on function or method
uopz_unset_mock ( string $class):void | Unset previously set mock
uopz_unset_return ( string $function):bool | Unsets a previously set return value for a function
uopz_set_static ( string $function, array $static):void | Sets the static variables in function or method scope
base64_decode ( string $string, bool $strict = reffalse;):string|false | Decodes data encoded with MIME base64
base64_encode ( string $string):string | Encodes data with MIME base64
get_headers ( string $url, bool $associative = reffalse;,  $context = refnull;):array|false | Fetches all the headers sent by the server in response to an HTTP request
get_meta_tags ( string $filename, bool $use_include_path = reffalse;):array|false | Extracts all meta tag content attributes from a file and returns an array
http_build_query (  $data, string $numeric_prefix = "",  $arg_separator = refnull;, int $encoding_type = PHP_QUERY_RFC1738):string | Generate URL-encoded query string
parse_url ( string $url, int $component = -1):int|string|array|null|false | Parse a URL and return its components
rawurldecode ( string $string):string | Decode URL-encoded strings
rawurlencode ( string $string):string | URL-encode according to RFC 3986
urldecode ( string $string):string | Decodes URL-encoded string
urlencode ( string $string):string | URL-encodes string
boolval ( mixed $value):bool | Get the boolean value of a variable
debug_zval_dump ( mixed $value, mixed $values):void | Dumps a string representation of an internal zval structure to output
doubleval ( mixed $value):float | Get float value of a variable
empty ( mixed $var):bool | Determine whether a variable is empty
floatval ( mixed $value):float | Get float value of a variable
get_debug_type ( mixed $value):string | Gets the type name of a variable in a way that is suitable for debugging
get_defined_vars ( ):array | Returns an array of all defined variables
get_resource_id ( resource $resource):int | Returns an integer identifier for the given resource
get_resource_type ( resource $resource):string | Returns the resource type
gettype ( mixed $value):string | Get the type of a variable
intval ( mixed $value, int $base = 10):int | Get the integer value of a variable
is_array ( mixed $value):bool | Finds whether a variable is an array
is_bool ( mixed $value):bool | Finds out whether a variable is a boolean
is_callable ( mixed $value, bool $syntax_only = reffalse;, string $callable_name = refnull;):bool | Verify that a value can be called as a function from the current scope.
is_countable ( mixed $value):bool | Verify that the contents of a variable is a countable value
is_double ( mixed $value):bool | Finds whether the type of a variable is float
is_float ( mixed $value):bool | Finds whether the type of a variable is float
is_int ( mixed $value):bool | Find whether the type of a variable is integer
is_integer ( mixed $value):bool | Find whether the type of a variable is integer
is_iterable ( mixed $value):bool | Verify that the contents of a variable is an iterable value
is_long ( mixed $value):bool | Find whether the type of a variable is integer
is_null ( mixed $value):bool | Finds whether a variable is refnull;
is_numeric ( mixed $value):bool | Finds whether a variable is a number or a numeric string
is_object ( mixed $value):bool | Finds whether a variable is an object
is_real ( mixed $value):bool | Finds whether the type of a variable is float
is_resource ( mixed $value):bool | Finds whether a variable is a resource
is_scalar ( mixed $value):bool | Finds whether a variable is a scalar
is_string ( mixed $value):bool | Find whether the type of a variable is string
isset ( mixed $var, mixed $vars):bool | Determine if a variable is declared and is different than refnull;
print_r ( mixed $value, bool $return = reffalse;):string|bool | Prints human-readable information about a variable
serialize ( mixed $value):string | Generates a storable representation of a value
settype ( mixed $var, string $type):bool | Set the type of a variable
strval ( mixed $value):string | Get string value of a variable
unserialize ( string $data, array $options = []):mixed | Creates a PHP value from a stored representation
unset ( mixed $var, mixed $vars):void | Unset a given variable
var_dump ( mixed $value, mixed $values):void | Dumps information about a variable
var_export ( mixed $value, bool $return = reffalse;):string|null | Outputs or returns a parsable string representation of a variable
var_representation ( mixed $value, int $flags = 0):string | Returns a short, readable, parsable string representation of a variable
wddx_add_vars ( resource $packet_id, mixed $var_name, mixed $var_names):bool | Add variables to a WDDX packet with the specified ID
wddx_deserialize ( string $packet):mixed | Unserializes a WDDX packet
wddx_packet_end ( resource $packet_id):string | Ends a WDDX packet with the specified ID
wddx_packet_start ( string $comment):resource | Starts a new WDDX packet with structure inside it
wddx_serialize_value ( mixed $var, string $comment):string | Serialize a single value into a WDDX packet
wddx_serialize_vars ( mixed $var_name, mixed $var_names):string | Serialize variables into a WDDX packet
win32_continue_service ( string $servicename, string $machine):void | Resumes a paused service
win32_create_service ( array $details, string $machine):void | Creates a new service entry in the SCM database
win32_delete_service ( string $servicename, string $machine):void | Deletes a service entry from the SCM database
win32_get_last_control_message ( ):int | Returns the last control message that was sent to this service
win32_pause_service ( string $servicename, string $machine):void | Pauses a service
win32_query_service_status ( string $servicename, string $machine):array | Queries the status of a service
win32_send_custom_control ( string $servicename, int $control, string $machine):void | Send a custom control to the service
win32_set_service_exit_code ( int $exitCode = 1):int | Define or return the exit code for the current running service
win32_set_service_exit_mode ( bool $gracefulMode = true):bool | Define or return the exit mode for the current running service
win32_set_service_status ( int $status, int $checkpoint = 0):void | Update the service status
win32_start_service_ctrl_dispatcher ( string $name, bool $gracefulMode = true):void | Registers the script with the SCM, so that it can act as the service with the given name
win32_start_service ( string $servicename, string $machine):void | Starts a service
win32_stop_service ( string $servicename, string $machine):void | Stops a service
wincache_fcache_fileinfo ( bool $summaryonly = reffalse;):array|false | Retrieves information about files cached in the file cache
wincache_fcache_meminfo ( ):array|false | Retrieves information about file cache memory usage
wincache_lock ( string $key, bool $isglobal = reffalse;):bool | Acquires an exclusive lock on a given key
wincache_ocache_fileinfo ( bool $summaryonly = reffalse;):array|false | Retrieves information about files cached in the opcode cache
wincache_ocache_meminfo ( ):array|false | Retrieves information about opcode cache memory usage
wincache_refresh_if_changed ( array $files = NULL):bool | Refreshes the cache entries for the cached files
wincache_rplist_fileinfo ( bool $summaryonly = reffalse;):array|false | Retrieves information about resolve file path cache
wincache_rplist_meminfo ( ):array|false | Retrieves information about memory usage by the resolve file path cache
wincache_scache_info ( bool $summaryonly = reffalse;):array|false | Retrieves information about files cached in the session cache
wincache_scache_meminfo ( ):array|false | Retrieves information about session cache memory usage
wincache_ucache_add ( string $key, mixed $value, int $ttl = 0):bool | Adds a variable in user cache only if variable does not already exist in the cache
wincache_ucache_cas ( string $key, int $old_value, int $new_value):bool | Compares the variable with old value and assigns new value to it
wincache_ucache_clear ( ):bool | Deletes entire content of the user cache
wincache_ucache_dec ( string $key, int $dec_by = 1, bool $success):mixed | Decrements the value associated with the key
wincache_ucache_delete ( mixed $key):bool | Deletes variables from the user cache
wincache_ucache_exists ( string $key):bool | Checks if a variable exists in the user cache
wincache_ucache_get ( mixed $key, bool $success):mixed | Gets a variable stored in the user cache
wincache_ucache_inc ( string $key, int $inc_by = 1, bool $success):mixed | Increments the value associated with the key
wincache_ucache_info ( bool $summaryonly = reffalse;, string $key = NULL):array|false | Retrieves information about data stored in the user cache
wincache_ucache_meminfo ( ):array|false | Retrieves information about user cache memory usage
wincache_ucache_set ( mixed $key, mixed $value, int $ttl = 0):bool | Adds a variable in user cache and overwrites a variable if it already exists in the cache
wincache_unlock ( string $key):bool | Releases an exclusive lock on a given key
xattr_get ( string $filename, string $name, int $flags = 0):string | Get an extended attribute
xattr_list ( string $filename, int $flags = 0):array | Get a list of extended attributes
xattr_remove ( string $filename, string $name, int $flags = 0):bool | Remove an extended attribute
xattr_set ( string $filename, string $name, string $value, int $flags = 0):bool | Set an extended attribute
xattr_supported ( string $filename, int $flags = 0):bool | Check if filesystem supports extended attributes
xdiff_file_bdiff_size ( string $file):int | Read a size of file created by applying a binary diff
xdiff_file_bdiff ( string $old_file, string $new_file, string $dest):bool | Make binary diff of two files
xdiff_file_bpatch ( string $file, string $patch, string $dest):bool | Patch a file with a binary diff
xdiff_file_diff_binary ( string $old_file, string $new_file, string $dest):bool | Make binary diff of two files
xdiff_file_diff ( string $old_file, string $new_file, string $dest, int $context = 3, bool $minimal = reffalse;):bool | Make unified diff of two files
xdiff_file_merge3 ( string $old_file, string $new_file1, string $new_file2, string $dest):mixed | Merge 3 files into one
xdiff_file_patch_binary ( string $file, string $patch, string $dest):bool | Patch a file with a binary diff
xdiff_file_patch ( string $file, string $patch, string $dest, int $flags = DIFF_PATCH_NORMAL):mixed | Patch a file with an unified diff
xdiff_file_rabdiff ( string $old_file, string $new_file, string $dest):bool | Make binary diff of two files using the Rabin's polynomial fingerprinting algorithm
xdiff_string_bdiff_size ( string $patch):int | Read a size of file created by applying a binary diff
xdiff_string_bdiff ( string $old_data, string $new_data):string | Make binary diff of two strings
xdiff_string_bpatch ( string $str, string $patch):string | Patch a string with a binary diff
xdiff_string_diff_binary ( string $old_data, string $new_data):string | Make binary diff of two strings
xdiff_string_diff ( string $old_data, string $new_data, int $context = 3, bool $minimal = reffalse;):string | Make unified diff of two strings
xdiff_string_merge3 ( string $old_data, string $new_data1, string $new_data2, string $error):mixed | Merge 3 strings into one
xdiff_string_patch_binary ( string $str, string $patch):string | Patch a string with a binary diff
xdiff_string_patch ( string $str, string $patch, int $flags, string $error):string | Patch a string with an unified diff
xdiff_string_rabdiff ( string $old_data, string $new_data):string | Make binary diff of two strings using the Rabin's polynomial fingerprinting algorithm
xhprof_disable ( ):array | Stops xhprof profiler
xhprof_enable ( int $flags = 0, array $options):void | Start xhprof profiler
xhprof_sample_disable ( ):array | Stops xhprof sample profiler
xhprof_sample_enable ( ):void | Start XHProf profiling in sampling mode
xml_error_string ( int $error_code):string|null | Get XML parser error string
xml_get_current_byte_index ( XMLParser $parser):int | Get current byte index for an XML parser
xml_get_current_column_number ( XMLParser $parser):int | Get current column number for an XML parser
xml_get_current_line_number ( XMLParser $parser):int | Get current line number for an XML parser
xml_get_error_code ( XMLParser $parser):int | Get XML parser error code
xml_parse_into_struct ( XMLParser $parser, string $data, array $values, array $index = refnull;):int | Parse XML data into an array structure
xml_parse ( XMLParser $parser, string $data, bool $is_final = reffalse;):int | Start parsing an XML document
xml_parser_create_ns (  $encoding = refnull;, string $separator = ":"):XMLParser | Create an XML parser with namespace support
xml_parser_create (  $encoding = refnull;):XMLParser | Create an XML parser
xml_parser_free ( XMLParser $parser):bool | Free an XML parser
xml_parser_get_option ( XMLParser $parser, int $option):string|int|bool | Get options from an XML parser
xml_parser_set_option ( XMLParser $parser, int $option,  $value):bool | Set options in an XML parser
xml_set_character_data_handler ( XMLParser $parser, callable $handler):true | Set up character data handler
xml_set_default_handler ( XMLParser $parser, callable $handler):true | Set up default handler
xml_set_element_handler ( XMLParser $parser, callable $start_handler, callable $end_handler):true | Set up start and end element handlers
xml_set_end_namespace_decl_handler ( XMLParser $parser, callable $handler):true | Set up end namespace declaration handler
xml_set_external_entity_ref_handler ( XMLParser $parser, callable $handler):true | Set up external entity reference handler
xml_set_notation_decl_handler ( XMLParser $parser, callable $handler):true | Set up notation declaration handler
xml_set_object ( XMLParser $parser, object $object):true | Use XML Parser within an object
xml_set_processing_instruction_handler ( XMLParser $parser, callable $handler):true | Set up processing instruction (PI) handler
xml_set_start_namespace_decl_handler ( XMLParser $parser, callable $handler):true | Set up start namespace declaration handler
xml_set_unparsed_entity_decl_handler ( XMLParser $parser, callable $handler):true | Set up unparsed entity declaration handler
xmlrpc_decode_request ( string $xml, string $method, string $encoding):mixed | Decodes XML into native PHP types
xmlrpc_decode ( string $xml, string $encoding = "iso-8859-1"):mixed | Decodes XML into native PHP types
xmlrpc_encode_request ( string $method, mixed $params, array $output_options):string | Generates XML for a method request
xmlrpc_encode ( mixed $value):string | Generates XML for a PHP value
xmlrpc_get_type ( mixed $value):string | Gets xmlrpc type for a PHP value
xmlrpc_is_fault ( array $arg):bool | Determines if an array value represents an XMLRPC fault
xmlrpc_parse_method_descriptions ( string $xml):array | Decodes XML into a list of method descriptions
xmlrpc_server_add_introspection_data ( resource $server, array $desc):int | Adds introspection documentation
xmlrpc_server_call_method ( resource $server, string $xml, mixed $user_data, array $output_options):string | Parses XML requests and call methods
xmlrpc_server_create ( ):resource | Creates an xmlrpc server
xmlrpc_server_destroy ( resource $server):bool | Destroys server resources
xmlrpc_server_register_introspection_callback ( resource $server, string $function):bool | Register a PHP function to generate documentation
xmlrpc_server_register_method ( resource $server, string $method_name, string $function):bool | Register a PHP function to resource method matching method_name
xmlrpc_set_type ( string $value, string $type):bool | Sets xmlrpc type, base64 or datetime, for a PHP string value
yaml_emit_file ( string $filename, mixed $data, int $encoding = YAML_ANY_ENCODING, int $linebreak = YAML_ANY_BREAK, array $callbacks = refnull;):bool | Send the YAML representation of a value to a file
yaml_emit ( mixed $data, int $encoding = YAML_ANY_ENCODING, int $linebreak = YAML_ANY_BREAK, array $callbacks = refnull;):string | Returns the YAML representation of a value
yaml_parse_file ( string $filename, int $pos = 0, int $ndocs, array $callbacks = refnull;):mixed | Parse a YAML stream from a file
yaml_parse_url ( string $url, int $pos = 0, int $ndocs, array $callbacks = refnull;):mixed | Parse a Yaml stream from a URL
yaml_parse ( string $input, int $pos = 0, int $ndocs, array $callbacks = refnull;):mixed | Parse a YAML stream
yaz_addinfo ( resource $id):string | Returns additional error information
yaz_ccl_conf ( resource $id, array $config):void | Configure CCL parser
yaz_ccl_parse ( resource $id, string $query, array $result):bool | Invoke CCL Parser
yaz_close ( resource $id):bool | Close YAZ connection
yaz_connect ( string $zurl, mixed $options):mixed | Prepares for a connection to a Z39.50 server
yaz_database ( resource $id, string $databases):bool | Specifies the databases within a session
yaz_element ( resource $id, string $elementset):bool | Specifies Element-Set Name for retrieval
yaz_errno ( resource $id):int | Returns error number
yaz_error ( resource $id):string | Returns error description
yaz_es_result ( resource $id):array | Inspects Extended Services Result
yaz_es ( resource $id, string $type, array $args):void | Prepares for an Extended Service Request
yaz_get_option ( resource $id, string $name):string | Returns value of option for connection
yaz_hits ( resource $id, array $searchresult):int | Returns number of hits for last search
yaz_itemorder ( resource $id, array $args):void | Prepares for Z39.50 Item Order with an ILL-Request package
yaz_present ( resource $id):bool | Prepares for retrieval (Z39.50 present)
yaz_range ( resource $id, int $start, int $number):void | Specifies a range of records to retrieve
yaz_record ( resource $id, int $pos, string $type):string | Returns a record
yaz_scan_result ( resource $id, array $result):array | Returns Scan Response result
yaz_scan ( resource $id, string $type, string $startterm, array $flags):void | Prepares for a scan
yaz_schema ( resource $id, string $schema):void | Specifies schema for retrieval
yaz_search ( resource $id, string $type, string $query):bool | Prepares for a search
yaz_set_option ( resource $id, string $name, string $value):void | Sets one or more options for connection
yaz_sort ( resource $id, string $criteria):void | Sets sorting criteria
yaz_syntax ( resource $id, string $syntax):void | Specifies the preferred record syntax for retrieval
yaz_wait ( array $options):mixed | Wait for Z39.50 requests to complete
zip_close ( resource $zip):void | Close a ZIP file archive
zip_entry_close ( resource $zip_entry):bool | Close a directory entry
zip_entry_compressedsize ( resource $zip_entry):int|false | Retrieve the compressed size of a directory entry
zip_entry_compressionmethod ( resource $zip_entry):string|false | Retrieve the compression method of a directory entry
zip_entry_filesize ( resource $zip_entry):int|false | Retrieve the actual file size of a directory entry
zip_entry_name ( resource $zip_entry):string|false | Retrieve the name of a directory entry
zip_entry_open ( resource $zip_dp, resource $zip_entry, string $mode = "rb"):bool | Open a directory entry for reading
zip_entry_read ( resource $zip_entry, int $len = 1024):string|false | Read from an open directory entry
zip_open ( string $filename):resource|int|false | Open a ZIP file archive
zip_read ( resource $zip):resource|false | Read next entry in a ZIP file archive
deflate_add ( DeflateContext $context, string $data, int $flush_mode = ZLIB_SYNC_FLUSH):string|false | Incrementally deflate data
deflate_init ( int $encoding, array $options = []):DeflateContext|false | Initialize an incremental deflate context
gzclose ( resource $stream):bool | Close an open gz-file pointer
gzcompress ( string $data, int $level = -1, int $encoding = ZLIB_ENCODING_DEFLATE):string|false | Compress a string
gzdecode ( string $data, int $max_length = 0):string|false | Decodes a gzip compressed string
gzdeflate ( string $data, int $level = -1, int $encoding = ZLIB_ENCODING_RAW):string|false | Deflate a string
gzencode ( string $data, int $level = -1, int $encoding = ZLIB_ENCODING_GZIP):string|false | Create a gzip compressed string
gzeof ( resource $stream):bool | Test for  on a gz-file pointer
gzfile ( string $filename, int $use_include_path = 0):array|false | Read entire gz-file into an array
gzgetc ( resource $stream):string|false | Get character from gz-file pointer
gzgets ( resource $stream,  $length = refnull;):string|false | Get line from file pointer
gzgetss ( resource $zp, int $length, string $allowable_tags):string | Get line from gz-file pointer and strip HTML tags
gzinflate ( string $data, int $max_length = 0):string|false | Inflate a deflated string
gzopen ( string $filename, string $mode, int $use_include_path = 0):resource|false | Open gz-file
gzpassthru ( resource $stream):int | Output all remaining data on a gz-file pointer
gzputs ( resource $stream, string $data,  $length = refnull;):int|false | Binary-safe gz-file write
gzread ( resource $stream, int $length):string|false | Binary-safe gz-file read
gzrewind ( resource $stream):bool | Rewind the position of a gz-file pointer
gzseek ( resource $stream, int $offset, int $whence = SEEK_SET):int | Seek on a gz-file pointer
gztell ( resource $stream):int|false | Tell gz-file pointer read/write position
gzuncompress ( string $data, int $max_length = 0):string|false | Uncompress a compressed string
gzwrite ( resource $stream, string $data,  $length = refnull;):int|false | Binary-safe gz-file write
inflate_get_read_len ( InflateContext $context):int | Get number of bytes read so far
inflate_get_status ( InflateContext $context):int | Get decompression status
inflate_add ( InflateContext $context, string $data, int $flush_mode = ZLIB_SYNC_FLUSH):string|false | Incrementally inflate encoded data
inflate_init ( int $encoding, array $options = []):InflateContext|false | Initialize an incremental inflate context
ob_gzhandler ( string $data, int $flags):string|false | ob_start callback function to gzip output buffer
readgzfile ( string $filename, int $use_include_path = 0):int|false | Output a gz-file
zlib_decode ( string $data, int $max_length = 0):string|false | Uncompress any raw/gzip/zlib encoded data
zlib_encode ( string $data, int $encoding, int $level = -1):string|false | Compress data with the specified encoding
zlib_get_coding_type ( ):string|false | Returns the coding type used for output compression
zookeeper_dispatch ( ):void | Calls callbacks for pending operations
